1999-12-31  Gerd Moellmann  <gerd@gnu.org>

	* xfns.c: New image functions adapted to Emacs conventions.
	(png_load, tiff_load, jpeg_load, gif_load): Always GCPRO local
	variable `file'.

1999-12-31  William M. Perry  <wmperry@aventail.com>

	* xfns.c (jpeg_format): Add the :data keyword.
	(jpeg_image_p): JPEG is valid with :file _or_ :data.
	(jpeg_memory_src): Define new JPEG image source to read from a
	memory buffer.
	(jpeg_load): Pay attention to the :data keyword if specified.
	Instantiates a jpeg_memory_src instead of jpeg_stdio_src if found.
	(png_format): Add the :data keyword.
	(png_image_p): PNG is valid with :file _or_ :data.
	(png_read_from_memory): New PNG read function to read from a
	memory buffer.
	(png_load): Pay attention to the :data keyword if specified.
	Use png_set_read_fn() instead of png_init_io() if specified.
	(tiff_format): Add the :data keyword for TIFF images.
	(tiff_image_p): TIFF is valid with :file _or_ :data.
	(tiff_read_from_memory): Define new TIFF I/O functions to read
	from a memory buffer.
	(tiff_load): Pay attention to the :data keyword if specified.
	Uses TIFFClientOpen() instead of TIFFOpen() if specified.
	(gif_format): Add the :data keyword.
	(gif_image_p): GIF is valid with :file _or_ :data.
	(gif_read_from_memory): New GIF input function to read from a
	memory buffer.
	(gif_load): Pay attention to the :data keyword.  Uses DGifOpen()
	instead of DGifOpenFileName() if specified.

1999-12-31  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (next_element_from_buffer): Change assertion at the end
	because it doesn't hold when there's an overlay string at the end
	from which we deliver an image.

1999-12-30  Eli Zaretskii  <eliz@is.elta.co.il>

	* msdos.c (IT_update_begin): Don't dereference members of struct
	window for deleted windows.

1999-12-30  Gerd Moellmann  <gerd@gnu.org>

	* abbrev.c (Fexpand_abbrev): If expanding an abbrev which has only
	a hook, and the hook has a non-nil `no-self-insert' property, let
	the return value of the hook specify whether an expansion took
	place.  If it returns nil, no expansion has been performed.

	* xterm.c (x_make_frame_visible): Wait for frame becoming visible
	differently.

1999-12-30  Eli Zaretskii  <eliz@is.elta.co.il>

	* msdos.c (IT_write_glyphs): Track last changes to struct glyph.

1999-12-29  Eli Zaretskii  <eliz@is.elta.co.il>

	* dispnew.c (mode_line_string): Support MS-DOS frames.

1999-12-29  Gerd Moellmann  <gerd@gnu.org>

	* eval.c (syms_of_eval): Initialize debugger_may_continue.

1999-12-29  Kenichi Handa  <handa@etl.go.jp>

	* process.c (read_process_output): Fix the args CHARPOS and LENINS
	to signal_after_change.

1999-12-28  Eli Zaretskii  <eliz@is.elta.co.il>

	* msdos.c (dos_set_window_size) [__DJGPP__ > 1]: If the frame
	dimensions changed, invalidate the mouse highlight info.
	(disable_mouse_highlight, help_echo, previous_help_echo): New
	variables.
	(IT_set_mouse_pointer, show_mouse_face, clear_mouse_face)
	(fast_find_position, IT_note_mode_line_highlight)
	(IT_note_mouse_highlight): New functions.
	(IT_update_begin): If the redisplay affects the window where the
	mouse highlight is, clear the highlight.  If the frame where the
	highlight was displayed was killed, invalidate the highlight
	info.
	(IT_update_end): Reset the highlight flag.  Reset the mouse
	highlight-defer flag.
	(IT_frame_up_to_date): New function, if mouse highlight was
	deferred due to GC, do it now.
	(internal_terminal_init): Initialize mouse-highlight related
	members of the_only_x_display.  Assign IT_frame_up_to_date to
	frame_up_to_date_hook.
	(dos_rawgetc): If the mouse moved, update mouse highlight.  If
	help_echo changed value, generate a HELP_EVENT event.
	(syms_of_msdos): Staticpro help_echo and previous_help_echo.

	* msdos.h (struct display_info): New.
	(struct x_output): Add the display_info member.
	(FRAME_X_DISPLAY_INFO): New macro.

1999-12-28  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (try_window_id): Compute BEG_UNCHANGED and END_UNCHANGED
	if MODIFF > 1.
	(dump_glyph_row): Adapt to changes in struct glyph.

	* buffer.c (modify_overlay): Always compute unchanged info.

1999-12-27  Kenichi Handa  <handa@etl.go.jp>

	* dispextern.h (FACE_FROM_ID): Cast the arg ID to `unsigned'.

1999-12-27  Kenichi Handa  <handa@etl.go.jp>

	The following changes are to use more bits for face IDs.

	* lisp.h (GLYPH): Defined as `int', not `unsigned int'.  Now the
	lowest 8 bits are single byte character code, the bits above are
	face ID.
	(GLYPH_MASK_FACE, GLYPH_MASK_CHAR): Adjusted for the change
	above.
	(FAST_MAKE_GLYPH, FSST_GLYPH_FACE): Likewise.
	(GLYPH_MASK_REV_DIR, GLYPH_MASK_PADDING): Macros deleted.

	* charset.h (CHAR_BYTES): Use ((1 << CHARACTERBITS) - 1) instead
	of GLYPH_MASK_CHAR.

	* charset.c (char_bytes): Use ((1 << CHARACTERBITS) - 1) instead
	of GLYPH_MASK_CHAR.

	* dispextern.h (struct glyph): Make face_id and padding_p the top
	level members.  Change members in union `u'.
	(GLYPH_EQUAL_P): Check also members face_id and padding_p.
	(GLYPH_CHAR_AND_FACE_EQUAL_P): New macro.
	(SET_CHAR_GLYPH): Adjusted for the change of struct glyph.
	(CHAR_GLYPH_PADDING_P): Likewise.
	(GLYPH_FROM_CHAR_GLYPH): Likewise.  Always return -1 for multibyte
	characters.

	* dispnew.c (line_hash_code, direct_output_for_insert): Adjusted
	for the change of struct glyph.
	(line_draw_cost): Adjusted for the change of
	GLYPH_FROM_CHAR_GLYPH.
	(count_match): Use macro GLYPH_CHAR_AND_FACE_EQUAL_P.

	* term.c (encode_terminal_code): Adjusted for the change of struct
	glyph and GLYPH_FROM_CHAR_GLYPH.
	(write_glyphs, insert_glyphs, append_glyph): Adjusted for the
	change of struct glyph.

	* xdisp.c: All codes adjusted for the change of struct glyph.

	* xterm.c: All codes adjusted for the change of struct glyph.

1999-12-27  Kenichi Handa  <handa@etl.go.jp>

	* composite.h (struct composition): Change the order of declaring
	members to reduce the byte size of the structure.

1999-12-25  Gerd Moellmann  <gerd@gnu.org>

	* search.c (looking_at_1): Reset immediate_quit before modifying
	global data.

1999-12-24  Kenichi Handa  <handa@etl.go.jp>

	* process.c (read_process_output): Fix the arg FROM to
	update_compositions.

1999-12-22  Richard M. Stallman  <rms@gnu.org>

	* search.c (Freplace_match): For nonliteral replacement in buffer,
	construct all the new text first, then insert all at once.

1999-12-22  Dave Love  <fx@gnu.org>

	* xfns.c (Fx_show_tip): Gcpro `timeout' too.

1999-12-22  Gerd Moellmann  <gerd@gnu.org>

	* xfns.c (Fx_create_frame): Move x_default_parameter calls that
	lead to size changes to after the X window has been created.

	* xfaces.c (realize_x_face): Don't use uninitialized local
	variable in xassert.

1999-12-22  Kenichi Handa  <handa@etl.go.jp>

	* xfaces.c (face_color_supported_p): Check by tty_defined_color
	only when the frame is not for a window system.

1999-12-22  Gerd Moellmann  <gerd@gnu.org>

	* buffer.c (Fset_buffer_multibyte): Arrange for a thorough
	redisplay after changing the multibyteness of a buffer.

	* xterm.c (XTread_socket): At the beginning of the loop, pass the
	frame's X window to XFilterEvent instead of None because that's
	the X window for which the IC was created.  This makes dead
	accents work when the pointer is not in Emacs' frame.
	(XTread_socket) <KeyPress>: Don't call XFilterEvent here.

1999-12-20  Dave Love  <fx@gnu.org>

	* xfns.c (Fx_show_tip): Add missing UNGCPRO.

1999-12-19  Gerd Moellmann  <gerd@gnu.org>

	* eval.c (debugger_may_continue): New variable.
	(syms_of_eval): Add a DEFVAR_BOOL for it.
	(call_debugger): Bind it.

1999-12-19  Eli Zaretskii  <eliz@is.elta.co.il>

	* msdos.c (IT_set_face): Don't swap face colors when highlight or
	fp->tty_reverse_p is set, unless the computed colors are identical
	to frame colors.  Print both original and computed colors to
	termscript file.
	(IT_write_glyphs): Track the changes in handling of composite
	characters.
	(IT_set_frame_parameters): Don't set frame colors from
	unspecified-fg and unspecified-bg pseudo-colors.

1999-12-17  Dave Love  <fx@gnu.org>

	* data.c (Fkeywordp): New function.
	(syms_of_data): Install it.

1999-12-16  Eli Zaretskii  <eliz@is.elta.co.il>

	* xfaces.c (tty_defined_color): Fix last change.

1999-12-15  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (redisplay_window) <optional new window start>: Check
	that window start is in [BEGV..ZV].

1999-12-15  Eli Zaretskii  <eliz@is.elta.co.il>

	* dispextern.h (FACE_TTY_DEFAULT_FG_COLOR)
	(FACE_TTY_DEFAULT_BG_COLOR): New macros.

	* xfaces.c (Qunspecified_fg, Qunspecified_bg): New variables.
	(syms_of_xfaces): Initialize and staticpro them.
	(tty_defined_color): If the color name is unspecified-fg or
	unspecified-bg, return FACE_TTY_DEFAULT_FG_COLOR and
	FACE_TTY_DEFAULT_BG_COLOR, respectively, as the pixel value.
	(tty_color_name): If the color pixel value is either
	FACE_TTY_DEFAULT_FG_COLOR or FACE_TTY_DEFAULT_BG_COLOR, return
	Qunspecified_fg or Qunspecified_bg, respectively.
	(Finternal_set_lisp_face_attribute): Allow values Qunspecified_fg
	and Qunspecified_bg for foreground and background colors.
	(realize_default_face): If the foreground and background colors
	are not specified, default to Qunspecified_fg and Qunspecified_bg.
	(realize_tty_face): By default, set the face colors to
	FACE_TTY_DEFAULT_FG_COLOR and FACE_TTY_DEFAULT_BG_COLOR.
	[MSDOS]: Handle FACE_TTY_DEFAULT_FG_COLOR and
	FACE_TTY_DEFAULT_BG_COLOR when face colors are not defined.
	Reverse the colors if the default colors were reversed.

	* dispnew.c (init_display): Initialize the frame pixels of the
	initial frame to FACE_TTY_DEFAULT_FG_COLOR and
	FACE_TTY_DEFAULT_BG_COLOR.

	* term.c (turn_on_face): If the default fore- and background
	colors are reversed, enter inverse video mode.  Don't send color
	escape sequences for unspecified foreground and background colors.
	(turn_off_face): Handle unspecified-fg and unspecified-bg colors.

	* dosfns.c (unspecified_colors): New variable.
	(msdos_stdcolor_idx): Handle unspecified-fg and unspecified-bg
	color names, return FACE_TTY_DEFAULT_FG_COLOR and
	FACE_TTY_DEFAULT_BG_COLOR, respectively.
	(msdos_stdcolor_name): Handle FACE_TTY_DEFAULT_FG_COLOR and
	FACE_TTY_DEFAULT_BG_COLOR, return Qunspecified_fg and
	Qunspecified_bg, respectively.

	* msdos.c (IT_set_face): Support FACE_TTY_DEFAULT_FG_COLOR and
	FACE_TTY_DEFAULT_BG_COLOR as pixel values.

1999-12-15  Kenichi Handa  <handa@etl.go.jp>

	* coding.c (code_convert_region): Fix the second arg to
	update_compositions.

1999-12-15  Kenichi Handa  <handa@etl.go.jp>

	The following changes are for the new composition mechanism.  We
	have deleted `composition' charset and composite characters,
	instead introduced a special text property `composition'.

	* Makefile.in (INTERVAL_SRC): Include composite.h.
	(INTERVAL_OBJ): Include composite.o.
	(SOME_MACHINE_OBJECTS): Include composite.o.
	(casefiddle.o) (dispnew.o) (indent.o) (process.o) (search.o)
	(syntax.o) (window.o) (xdisp.o) (xfaces.o) (xterm.o) (print.o):
	Depend on composite.h.
	(doc.o): Depend on charset.h.
	(keyboard.o) (textprop.o) (intervals.o): Depend on INTERVAL_SRC.
	(composite.o): New target.

	* alloc.c (Fmake_string): Adjusted for the change of CHAR_STRING.

	* callproc.c (Fcall_process): Call code_convert_string to encode
	arguments.  Use CODING_REQUIRE_DECODING to check if the process
	output should be decoded.

	* casefiddle.c: Include composite.h.
	(casify_object): Use MAX_MULTIBYTE_LENGTH to allocate memory for a
	multibyte character.  Adjusted for the change of CHAR_STRING.
	(casify_region): Likewise.  Call update_compositions.

	* category.h (CATEGORY_SET): Delete codes for a composite
	character.

	* category.c (word_boundary_p): Delete codes for a composite
	character.
	(Fmake_category_table): New function.
	(syms_of_category): Defsubr it.

	* ccl.c (CCL_WRITE_CHAR): Adjusted for the change of CHAR_STRING.
	(ccl_driver): Delete codes for a composite character.

	* charset.h: In this entry, just `Modified' means that codes for a
	composite character is deleted.
	(LEADING_CODE_COMPOSITION) (CHARSET_COMPOSITION)
	(charset_composition) (MIN_CHAR_COMPOSITION)
	(MAX_CHAR_COMPOSITION) (GENERIC_COMPOSITION_CHAR)
	(COMPOSITE_CHAR_P) (MAKE_COMPOSITE_CHAR) (COMPOSITE_CHAR_ID)
	(PARSE_COMPOSITE_SEQ) (PARSE_CHARACTER_SEQ): Deleted.
	(MAX_CHAR) (CHARSET_VALID_P) (CHARSET_DEFINED_P) (CHARSET_AT)
	(FIRST_CHARSET_AT) (SAME_CHARSET_P) (MAKE_NON_ASCII_CHAR)
	(PARSE_MULTIBYTE_SEQ) (SPLIT_NON_ASCII_CHAR) (CHAR_PRINTABLE_P):
	Modified.
	(SPLIT_STRING): Call split_string, not split_non_ascii_string.
	(CHAR_STRING): Delete WORKBUF argument.  Call char_string, not
	non_ascii_char_to_string.
	(STRING_CHAR): Call string_to_char, not string_to_non_ascii_char.
	(STRING_CHAR_AND_LENGTH): Likewise.
	(FETCH_CHAR_ADVANCE): New macro.
	(MAX_COMPONENT_COUNT) (struct cmpchar_info): Deleted.
	(MAX_MULTIBYTE_LENGTH): New macro.
	(MAX_LENGTH_OF_MULTI_BYTE_FORM): Deleted.
	(find_charset_in_str): Argument adjusted.
	(CHAR_LEN): Modified.

	* charset.c: In this entry, just `Modified' means that codes for a
	composite character is deleted.
	(Qcomposition) (leading_code_composition)
	(charset_composition) (min_composite_char) (cmpchar_table)
	(cmpchar_table_size) (n_cmpchars): Deleted.
	(SPLIT_COMPOSITE_SEQ): Deleted.
	(SPLIT_MULTIBYTE_SEQ): Modified.
	(char_to_string): Renamed from non_ascii_char_to_string.
	Modified.
	(string_to_char): Renamed from string_to_non_ascii_char.
	(split_string): Renamed from split_non_ascii_string.
	(char_printable_p) (Fsplit_char)
	(Ffind_charset_region) (Ffind_charset_string) (char_valid_p)
	(char_bytes) (Fchar_width) (strwidth): Modified.
	(find_charset_in_str): Argument CMPCHARP deleted.  Modified.
	(Fstring): Adjusted for the change of CHAR_STRING.  Modified.
	(hash_string) (CMPCHAR_HASH_TABLE_SIZE) (cmpchar_hash_table)
	(CMPCHAR_HASH_SIZE) (CMPCHAR_HASH_USED) (CMPCHAR_HASH_CMPCHAR_ID)
	(str_cmpchar_id) (cmpchar_component) (Fcmpcharp)
	(Fcmpchar_component) (Fcmpchar_cmp_rule) (Fcmpchar_cmp_rule_p)
	(Fcmpchar_cmp_count): Deleted.
	(Fcompose_string): Implemented by Emacs Lisp in composite.el.
	(init_charset_once): Modified.
	(syms_of_charset): Modified.

	* cmds.c (internal_self_insert): Adjusted for the change of
	CHAR_STRING.

	* coding.h (emacs_code_class_type): Delete the member
	EMACS_leading_code_composition.
	(COMPOSING_NO) (COMPOSING_WITH_RULE_HEAD) (COMPOSING_NO_RULE_HEAD)
	(COMPOSING_WITH_RULE_TAIL) (COMPOSING_NO_RULE_TAIL)
	(COMPOSING_WITH_RULE_RULE) (COMPOSING_HEAD_P)
	(COMPOSING_WITH_RULE_P): Macros deleted.
	(COMPOSITION_DATA_SIZE) (COMPOSITION_DATA_MAX_BUNCH_LENGTH): New
	macros.
	(struct composition_data): New structure.
	(CODING_FINISH_INSUFFICIENT_CMP): New macro.
	(struct coding_system): New members composition_rule_follows,
	cmp_data, cmp_data_start, cmp_data_index.
	(coding_save_composition) (coding_free_composition_data)
	(coding_adjust_composition_offset): Extern them.

	* coding.c: Include composite.h.
	(DECODE_CHARACTER_ASCII): Don't handle composition here.
	(DECODE_CHARACTER_DIMENSION1): Likewise.  Don't check the validity
	of multibyte code here.
	(DECODE_CHARACTER_DIMENSION2): Likewise.
	(detect_coding_emacs_mule): Change the case label from
	EMACS_leading_code_composition to 0x80.
	(detect_coding_iso2022): Handle new composition sequence.
	(DECODE_ISO_CHARACTER): Likewise.
	(check_composing_code): Deleted.
	(coding_allocate_composition_data): New function.
	(CODING_ADD_COMPOSITION_START) (CODING_ADD_COMPOSITION_END)
	(CODING_ADD_COMPOSITION_COMPONENT) (DECODE_COMPOSITION_START)
	(DECODE_COMPOSITION_END) (DECODE_COMPOSITION_RULE): New macros.
	(decode_coding_iso2022): Handle new composition sequence.
	(ENCODE_ISO_CHARACTER): Don't check composition here.
	(ENCODE_COMPOSITION_RULE) (ENCODE_COMPOSITION_START): New macros.
	(ENCODE_COMPOSITION_NO_RULE_START)
	(ENCODE_COMPOSITION_WITH_RULE_START): Deleted.
	(ENCODE_COMPOSITION_END): Handle new composition sequence.
	(ENCODE_COMPOSITION_FAKE_START): New macro.
	(encode_coding_iso2022): Handle new composition sequence.
	(ENCODE_SJIS_BIG5_CHARACTER): Delete superfluous `;' at the tail.
	(encode_coding_sjis_big5): Ignore composition.
	(setup_coding_system): Initialize new members of struct
	coding_system.  Enable composition only when the coding system has
	`composition' property t.
	(coding_free_composition_data) (coding_adjust_composition_offset)
	(coding_save_composition) (coding_restore_composition): New
	functions.
	(code_convert_region): Call coding_save_composition for encoding
	and coding_allocate_composition_data for decoding.  Don't skip
	ASCII characters if we handle composition on encoding.  Call
	signal_after_change with Check_BORDER.
	(code_convert_string): Call coding_save_composition for encoding
	and coding_allocate_composition_data for decoding.  Don't skip
	ASCII characters if we handle composition on encoding.
	(code_convert_string1): Set Vlast_coding_system_used after calling
	code_convert_string.
	(code_convert_string_norecord): Disable composition.
	(Fset_terminal_coding_system_internal): Likewise.
	(Fset_safe_terminal_coding_system_internal): Likewise.
	(Fset_keyboard_coding_system_internal): Likewise.
	(init_coding_once): Set emacs_code_class[0x80] to
	EMACS_invalid_code.

	* composite.h: New file.

	* composite.c: New file.

	* data.c (Faref): Delete codes for a composite character..
	(Faset): Likewise.  Adjusted for the change of CHAR_STRING.

	* dispextern.h (enum glyph_type): New member COMPOSITE_GLYPH.
	(struct glyph): Add new sub-structure cmp to the union `u'.
	(enum display_element_type): New member IT_COMPOSITION.
	(enum prop_idx): New member COMPOSITION_PROP_IDX.
	(struct it): New members cmp_id, cmp_len.

	* dispnew.c (direct_output_forward_char): Check point moving into
	or out of a composition.  If so, give up direct method.

	* doprnt.c (doprnt1): Adjusted for the change of CHAR_STRING.

	* editfns.c (Fchar_to_string): Adjusted for the change of
	CHAR_STRING.
	(general_insert_function): Likewise.
	(Finsert_char): Likewise.
	(Fsubst_char_in_region): Likewise.  Call update_compositions.
	(Ftranslate_region): Call update_compositions.
	(Ftranspose_regions): Call update_compositions.

	* emacs.c (main): Call syms_of_composite.

	* fileio.c (Fsubstitute_in_file_name): Adjusted for the change of
	CHAR_STRING.
	(Finsert_file_contents): Set Vlast_coding_system_used before
	calling signal_after_change.  Call update_compositions if some
	texts are inserted..
	(Fwrite_region): Adjusted for the change of a_write and e_write.
	(a_write): Argument changed.  Work based on character position,
	not byte position.
	(e_write): Argument changed.  Handle new way of composition.

	* fns.c (Flength): The length of char-table is MAX_CHAR.
	(concat): Adjusted for the change of CHAR_STRING.
	(Ffillarray): Adjusted for the change of CHAR_STRING.
	(Fset_char_table_default): Delete codes for a composite character.
	(hash_put): Return hash index.

	* fontset.h (struct font_info): New member vertical_centering.
	(Vvertical_centering_font_regexp): Extern it.

	* fontset.c (Vvertical_centering_font_regexp): New variable.
	(syms_of_fontset): Declare it as a Lisp variable and initialize.
	Set Vignore_relative_composition to nil.
	(fs_load_font): Initialize `vertical_centering' of struct
	font_info.

	* indent.c (check_composition): New function.
	(MULTIBYTE_BYTES_WIDTH): Call STRING_CHAR_AND_LENGTH with
	MAX_MULTIBYTE_LENGTH, not MAX_LENGTH_OF_MULTI_BYTE_FORM.
	(current_column_1): Handle new way of composition.
	(Fmove_to_column): Likewise.
	(compute_motion): Likewise.

	* insdel.c (copy_text): Adjusted for the change of CHAR_STRING.
	(insert_char): Likewise.
	(insert): Call update_compositions.
	(insert_and_inherit): Likewise.
	(insert_before_markers): Likewise.
	(insert_before_markers_and_inherit): Likewise.
	(insert_from_string): Likewise.
	(insert_from_string_before_markers): Likewise.
	(insert_from_buffer): Likewise.
	(replace_range): Likewise.
	(count_combining_composition): Deleted.
	(count_combining_before): Delete codes for a composite character.
	(count_combining_after): Likewise.
	(del_range_1): Call update_compositions.
	(del_range_byte): Likewise.
	(del_range_both): Likewise.
	(Fcombine_after_change_execute): Likewise.

	* intervals.h: Include composite.h.
	(get_property_and_range): Extern it.
	(Vtext_property_default_nonsticky): Extern it.

	* intervals.c (adjust_intervals_for_insertion): To check stickiness
	of properties, pay attention to text-property-default-nonsticky.
	(merge_properties_sticky): Likewise.
	(get_property_and_range): New function.

	* keyboard.c (Vdisable_point_adjustment): New variable.
	(Vglobal_disable_point_adjustment): New variable.
	(syms_of_keyboard): Declare them as Lisp variables.
	(command_loop_1): Check them and call adjust_point_for_property if
	necessary.
	(adjust_point_for_property): New function.

	* keymap.c (push_key_description): Adjusted for the change of
	CHAR_STRING.
	(Ftext_char_description): Likewise.

	* lisp.h (QCtest, QCweakness, Qequal): Extern them.
	(hash_put): Adjusted for the change of the definition.
	(signal_after_change): Likewise.
	(check_point_in_composition): Extern it.

	* lread.c (readchar): Adjusted for the change of CHAR_STRING.
	Delete a code that handles an invalid too-long multibyte sequence
	because we are now sure that we never encounter with such a
	sequence.
	(read_multibyte): Use macro MAX_MULTIBYTE_LENGTH, not
	MAX_LENGTH_OF_MULTI_BYTE_FORM.
	(init_obarray): Likewise.
	(read1): Likewise.  Adjusted for the change of CHAR_STRING.

	* print.c (printchar): Adjusted for the change of CHAR_STRING.

	* process.c: Include composite.h.
	(read_process_output): Call update_compositions.

	* regex.c (regex_compile): Adjusted for the change of CHAR_STRING.

	* search.c (search_buffer): Adjusted for the change of CHAR_STRING.

	* syntax.h (SYNTAX_ENTRY_INT): Delete codes for a composite
	character.

	* term.c (encode_terminal_code): Delete codes for a composite
	character.  Adjusted for the change of CHAR_STRING.
	(produce_glyphs): When called, it->what can be IT_COMPOSITION.
	Delete codes for a composite character.

	* textprop.c (Vtext_property_default_nonsticky): New variable.
	(syms_of_textprop): Declare it as a Lisp variable.

	* window.c (Frecenter): Clear all caches of compositions.

	* xdisp.c (it_props): Add an entry for composition.
	(face_before_or_after_it_pos): For composition, check face of a
	character after the composition.
	(handle_composition_prop): New function.
	(get_next_display_element): Adjusted for the change of
	CHAR_STRING.
	(set_iterator_to_next): Handle the case that it->method ==
	next_element_from_composition.
	(next_element_from_composition): New function.
	(message_dolog): Adjusted for the change of CHAR_STRING.
	(set_message_1): Likewise.
	(check_point_in_composition): New function.
	(reconsider_clip_changes): If point moved into or out of
	composition, set b->clip_changed to 1 to force updating of the
	screen.
	(disp_char_vector): Delete codes for a composite character.
	(decode_mode_spec_coding): Adjusted for the change of CHAR_STRING.

	* xfaces.c (choose_face_fontset_font): Delete codes for a
	composite character.
	(realize_x_face): Likewise.  Change a place to set local variable
	`f' to avoid a bug of GCC 2.8.1 on Solaris.

	* xfns.c: Include intervals.h.
	(syms_of_xfns): Make `display' property nonsticky by default.

	* xselect.c (lisp_data_to_selection_data): Adjusted for the change
	for find_charset_in_str.

	* xterm.h (struct x_output): Change member font_baseline to
	baseline_offset.

	* xterm.c (x_append_glyph): Setup members of struct glyph properly
	for composition.
	(x_append_composite_glyph): New function.
	(VCENTER_BASELINE_OFFSET): New macro.
	(x_produce_glyphs): If it->what == IT_COMPOSITION, setup members
	of struct it for the composition.  Cache pixel offsets in the
	struct composition.  Delete codes for a composite character.
	Handle Vignore_relative_composition in composition code.
	(struct glyph_string): Delete member cmpcharp, add new member cmp.
	(x_set_cursor_gc): Check s->cmp, not s->cmpcharp.
	(x_compute_glyph_string_overhangs): Likewise.
	(x_get_glyph_overhangs): Delete codes for a composite character.
	(x_right_overwritten): Check s->cmp, not s->cmpcharp.
	(x_draw_glyph_string_background): Likewise.  Delete codes for
	checking s->gidx for a composition.
	(x_draw_glyph_string_foreground): Delete code for a composite
	character.
	(x_draw_composite_glyph_string_foreground): New function.
	(x_draw_glyph_string_box): Check s->cmp, not s->cmpcharp.
	(x_draw_glyph_string): Handle the case of COMPOSITE_GLYPH.
	(struct work): Deleted.
	(x_fill_composite_glyph_string): Argument changed.  Mostly
	rewritten for that.
	(x_fill_glyph_string): Don't check CHARSET_COMPOSITION.
	(BUILD_CHAR_GLYPH_STRINGS): Don't handle composition here.
	(BUILD_COMPOSITE_GLYPH_STRING): New macro.
	(BUILD_GLYPH_STRINGS): For composition, call
	BUILD_COMPOSITE_GLYPH_STRING.
	(x_new_font): Initialize f->output_data.x->baseline_offset, not
	f->output_data.x->font_baseline.

1999-12-14  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (show_mouse_face): Don't use updated_area, use
	TEXT_AREA.

1999-12-12  Richard M. Stallman  <rms@gnu.org>

	* minibuf.c (Fall_completions): Doc fix.

1999-12-12  Richard M. Stallman  <rms@gnu.org>

	* macros.c (Fstart_kbd_macro): Handle case where last-kbd-macro
	has been changed by the Lisp code.

1999-12-12  Gerd Moellmann  <gerd@gnu.org>

	* xfns.c: Indentation fixes.

1999-12-10  Stefan Monnier  <monnier@cs.yale.edu>

	* xterm.c (x_initialize): Only setup xaw3d_* if they've been declared.

1999-12-10  Gerd Moellmann  <gerd@gnu.org>

	* frame.h (FRAME_FOREGROUND_PIXEL, FRAME_BACKGROUND_PIXEL)
	[!MSDOS && !WINDOWSNT && !macintosh]: Moved here from xterm.h.

	* xterm.h (FRAME_FOREGROUND_PIXEL, FRAME_BACKGROUND_PIXEL): Moved
	to frame.h.

1999-12-09  Stefan Monnier  <monnier@cs.yale.edu>

	* keyboard.c (Qratio): New symbol.
	(scroll_bar_parts): Add `Qratio' to it.
	(syms_of_keyboard): Init `Qratio'.
	* termhooks.h (scroll_bar_part): Add `scroll_bar_move_ratio'.
	* xterm.c (#includes): Allow compilation with only Xaw.
	(xaw3d_arrow_scroll, xaw3d_pick_top): New variables.
	(xt_action_hook): Replace XAW3D by XAW.
	(xaw3d_jump_callback): Renamed to xaw_jump_callback.
	(xaw_jump_callback): Renamed from xaw3d_jump_callback.
	Determine epsilon dynamically and don't try to be too clever.
	(xaw3d_scroll_callback): Renamed to xaw_scroll_callback.
	(xaw_scroll_callback): Renamed from xaw3d_scroll_callback.
	Handle both Xaw3d with arrow-scrollbars and with Xaw-style
	scrollbar (using `ratio').
	(x_create_toolkit_scroll_bar): Try to detect which style of Xaw3d
	scrollbar we have so as to set it up more optimally and to fix
	xaw3d_arrow_scroll and xaw3d_pick_top.
	(x_set_toolkit_scroll_bar_thumb): Try to maintain 2 spare pixels at the
	bottom of the Xaw3d scrollbar, to work around its tendency to refuse
	shrinking the thumb.  Also make sure that `XawScrollbarSetThumb'
	is not ignored, using a major gross hack.
	(x_initialize): Init default values for xaw3d_arrow_scroll and
	xaw3d_pick_top.

1999-12-09  Dave Love  <fx@gnu.org>

	* frame.h (PIX_TYPE) [! HAVE_X_WINDOWS]: Define PIX_TYPE.

1999-12-08  Gerd Moellmann  <gerd@gnu.org>

	* eval.c: Remove conditional compilation on `standalone'.
	(call_debugger): When entering the debugger while redisplaying,
	reset redisplaying_p, and go back to the top-level if the debugger
	returns.

1999-12-07  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (x_set_menu_resources_from_menu_face): Make sure
	basic faces are realized before trying to use face `menu'.

	* window.c (delete_window): Block input for the time window
	matrices are being changed.

1999-12-07  Dave Love  <fx@gnu.org>

	* lread.c (Fintern_soft): Fix newlines in doc string.

1999-12-07  Alexandre Oliva  <oliva@dcc.unicamp.br>

	* unexelf.c: Include <syms.h>, not <sym.h> on IRIX.  Removed
	duplicate definition of ElfW.
	(find_section): Copied from unexsgi.c.
	(unexec): Use find_section.  Adjust whitespace.  Initialize
	new_data2_offset based on old_data, not sbss (this fixes a bug on
	IRIX6).  Change #ifdef __mips to __sgi, since it's IRIX-specific.
	Adjust test for presence of .mdebug section to the new return
	value of find_section.

1999-12-07  Gerd Moellmann  <gerd@gnu.org>

	* unexelf.c: Merge changes from 20.5.
	(unexec): Handle .lit4 and .lit8 unconditionally.

	* m/iris4d.h (UNEXEC) [USG5_4]: Use unexelf.o instead of
	unexsgi.o again.

	* m/iris5d.h (UNEXEC): Likewise.

1999-12-06  Stefan Monnier  <monnier@cs.yale.edu>

	* editfns.c (Fdelete_and_extract_region): New function.
	(syms_of_editfns): Register it.
	* insdel.c (del_range): Update del_range_1 call.
	(del_range_1, del_range_2): Add a ret_string argument to
	request that the deleted text be returned.
	(del_range_byte, del_range_both): Update del_range_2 call.
	* lisp.h (del_range_1, del_range_2): Change prototype
	* casefiddle.c (casify_region): Update del_range_1 call.
	* coding.c (code_convert_region): Update del_range_2 call.
	* fileio.c (Finsert_file_contents): Update del_range_2 call.

1999-12-06  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (set_lface_from_font_name): Fix incomplete merge.

1999-12-04  Hrvoje Niksic  <hniksic@iskon.hr>

	* lread.c (Fintern_soft): Accept a symbol argument.

1999-12-06  Eli Zaretskii  <eliz@is.elta.co.il>

	* s/msdos.h (SYSTEM_PURESIZE_EXTRA): Reduce to 40000.

	* insdel.c (adjust_markers_for_delete): Fix last change.

1999-12-06  Eli Zaretskii  <eliz@is.elta.co.il>

	Changes for automatic remapping of X colors on terminal frames:

	* xfaces.c (XColor) [!HAVE_X_WINDOWS]: Provide a typedef for non-X
	frames.
	(Vface_tty_color_alist): Remove.
	(tty_defined_color): New function.
	(defined_color): Rewrite to support any type of frame.
	(tty_color_name): New function.
	(face_color_supported_p, Fface_color_gray_p)
	(Fface_color_supported_p): Support non-X frames.
	(load_color): Enclose the color name in quotes, in the log
	messages.  Remove DOS-specific version of load_color.
	(realize_tty_face): Take the supported colors from
	tty-color-alist.  Support translation of X colors to the closest
	tty color, for both MSDOS and tty frames.
	[MSDOS]: Don't invert face colors if they were taken from the
	frame colors.
	(Fface_register_tty_color, Fface_clear_tty_colors): Remove.

	* frame.h (struct x_output) [!MSDOS, !WINDOWSNT, !HAVE_X_WINDOWS]:
	Define a mostly empty surrogate.
	(tty_display): Declare.

	* frame.c (make_terminal_frame) [!macintosh]: Don't use
	tty_display.
	(Fframe_parameters): Don't invert colors of non-FRAME_WINDOW_P
	frames when the frame's param_alist includes 'reverse.
	(tty_display): Define.
	(make_terminal_frame) [!MSDOS]: Assign &tty_display to the
	output_data.x member.
	(Fframe_parameters): Return foreground and background color names
	on tty frames as well, in addition to MSDOS frames.

	* msdos.h (DisplayWidth, DisplayHeight): Changes for Lisp_Object
	selected_frame.
	(struct x_output): Remove unused members; document who uses each
	member.
	(FRAME_PARAM_FACES, FRAME_N_PARAM_FACES, FRAME_DEFAULT_PARAM_FACE)
	(FRAME_MODE_LINE_PARAM_FACE, FRAME_COMPUTED_FACES)
	(FRAME_N_COMPUTED_FACES, FRAME_SIZE_COMPUTED_FACES)
	(FRAME_DEFAULT_FACE, FRAME_MODE_LINE_FACE, unload_color): Remove
	unused macro definitions.

	* msdos.c (IT_set_frame_parameters): Don't call
	recompute_basic_faces, the next redisplay will, anyway.
	(x_current_display): Remove unused variable.
	Many functions: changes for Lisp_object selected_frame.
	(IT_set_face): If the tty_reverse_p flag is set for the face,
	reverse the foreground and background colors.
	(Fmsdos_remember_default_colors): New function.
	(syms_of_msdos): Defsubr it.
	(IT_set_frame_parameters): Use initial_screen_colors[] when
	creating a new frame.  If the frame parameters include 'reverse,
	swap the foreground and background colors.
	(internal_terminal_init): Initialize initial_screen_colors to -1.
	(syms_of_msdos): Add DEFVAR_BOOL for x-stretch-cursor, to shut up
	cus-start.el.

	* Makefile.in (lisp, shortlisp): Add lisp/term/tty-colors.elc.

	* xfns.c (x_defined_color): Rename from defined_color.  All
	callers changed.
	(Fxw_color_defined_p): Renamed from Fx_color_defined_p;
	all callers changed.
	(Fxw_color_values): Renamed from Fx_color_values; all callers
	changed.
	(Fxw_display_color_p): Renamed from Fx_display_color_p; all
	callers changed.
	(x_window_to_frame, x_any_window_to_frame)
	(x_non_menubar_window_to_frame, x_menubar_window_to_frame)
	(x_top_window_to_frame): Use !FRAME_X_P instead of
	f->output_data.nothing.
	* xterm.h (x_defined_color): Rename from defined_color.

	* w32fns.c (x_window_to_frame): Use FRAME_W32_P instead of
	f->output_data.nothing.
	(Fxw_color_defined_p): Renamed from Fx_color_defined_p;
	all callers changed.
	(Fxw_color_values): Renamed from Fx_color_values; all callers
	changed.
	(Fxw_display_color_p): Renamed from Fx_display_color_p; all
	callers changed.

	* dispextern.h (tty_color_name): Add prototype.

	* xmenu.c (menubar_id_to_frame): Use FRAME_WINDOW_P instead of
	f->output_data.nothing.
	* w32menu.c (menubar_id_to_frame): Likewise.
	* w32term.h (w32_output): Declare.

	* dosfns.c (Qmsdos_color_translate): Remove.
	(msdos_stdcolor_name): Now returns a Lisp_Object.
	* dosfns.h (Qmsdos_color_translate): Remove.

	* s/msdos.h (INTERNAL_TERMINAL): Add entries for color support.

1999-12-06  Kenichi Handa  <handa@etl.go.jp>

	* fileio.c (decide_coding_unwind): Renamed from
	set_auto_coding_unwind.
	(Finsert_file_contents): Make single unwind protect to call both
	Vset_auto_coding_function and Ffind_operation_coding_system.

	* insdel.c (adjust_markers_for_delete): Make it non-static.

1999-12-04  Stefan Monnier  <monnier@cs.yale.edu>

	* regex.c (regex_compile): Recognize *?, +? and ?? as non-greedy
	operators and handle them properly.
	* regex.h (RE_ALL_GREEDY): New option.
	(RE_UNMATCHED_RIGHT_PAREN_ORD): Moved to the end where alphabetic
	sorting would put it.
	(RE_SYNTAX_AWK, RE_SYNTAX_GREP, RE_SYNTAX_EGREP)
	(_RE_SYNTAX_POSIX_COMMON): Use the new option to keep old behavior.

1999-12-04  Dave Love  <d.love@dl.ac.uk>

	* m/arm.h: New file.

1999-12-03  Dave Love  <fx@gnu.org>

	* editfns.c (Fmessage_or_box): Use use_dialog_box.

1999-12-02  Gerd Moellmann  <gerd@gnu.org>

	* s/usg5-4.h (LIBS_SYSTEM): Add -lgen because that's needed
	for building with Motif.

	* m/iris4d.h (UNEXEC) [USG5_4]: Use unexsgi.o instead of
	unexelf.o.

	* m/iris5d.h (UNEXEC): Use unexsgi.o instead of unexelf.o.

1999-12-01  Dave Love  <fx@gnu.org>

	* emacs.c (main): Set LANG=C iff AX3_2 defined.

1999-11-28  Gerd Moellmann  <gerd@gnu.org>

	* systime.h (EMACS_TIME_CMP, EMACS_TIME_EQ, EMACS_TIME_NE)
	(EMACS_TIME_GT, EMACS_TIME_GE, EMACS_TIME_LT, EMACS_TIME_LE): New
	macros.

	* config.in (HAVE_SETITIMER, HAVE_UALARM): New.

1999-11-28  Eli Zaretskii  <eliz@is.elta.co.il>

	* emacs.c (synchronize_locale): Avoid compiler warnings about
	pointer type mismatch.

1999-11-28  Gerd Moellmann  <gerd@gnu.org>

	* window.c (Fwindow_end): Don't call temp_set_pt_both with
	out of range position.

	* xterm.c (XTread_socket) <ClientMessage, Xatom_Scrollbar>:
	Switch off busy-cursor by setting inhibit_busy_cursor to 2.

1999-11-28  Eli Zaretskii  <eliz@is.elta.co.il>

	* charset.c (Fmake_char_internal): Print the charset ID when
	signaling an error.

	* emacs.c (synchronize_locale): Avoid compiler warnings about
	pointer type mismatch.

1999-11-26  Richard M. Stallman  <rms@gnu.org>

	* editfns.c (Fdelete_field): Make it noninteractive.  Return nil.

1999-11-26  Gerd Moellmann  <gerd@gnu.org>

	* puresize.h (BASE_PURESIZE): Increase to 550000.

	* textprop.c (set_text_properties): New function.  Like
	Fset_text_properties, but with additional parameter
	SIGNAL_AFTER_CHANGE_P.  If that is nil, don't signal after
	changes.
	(Fset_text_properties): Use it.

	* insdel.c (insert_1_both): Call set_text_properties with last
	parameter nil so that no after changes will be signaled.

	* lisp.h: Add prototype for set_text_properties.

	* xfaces.c (set_lface_from_font_name): Fix previous change.
	(recompute_basic_faces): Change assert to abort.

1999-11-25  Dave Love  <fx@gnu.org>

	* fns.c (Fnthcdr, Fnreverse): Inline cdr.
	(Fmember, Fdelq, Fdelete): Inline car.
	(Fy_or_n_p): Doc fix.

1999-11-25  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (set_lface_from_font_name): New parameter may_fail_p.
	Callers changed.  If specified font name is bogus, and may_fail_p
	is not set, try to use a reasonable default.

	* dispnew.c (direct_output_for_insert): Set glyph row's
	displays_text_p flag.  Correct window's window_end_vpos if
	necessary.

1999-11-25  Paul Eggert  <eggert@twinsun.com>

	* emacs.c (fixup_locale): Don't bother to record initial locale.
	(synchronize_locale): If the desired locale is nil,
	treat it as if it were the empty string,
	so that we set the locale from the environment.

1999-11-25  Kenichi Handa  <handa@etl.go.jp>

	* fileio.c (Finsert_file_contents): Set buffer-file-coding-system
	of the current buffer via Fset.

1999-11-24  Dave Love  <fx@gnu.org>

	* xfaces.c: Don't duplicate Qmode_line definition done elsewhere.

	* xfns.c: Don't duplicate Qdisplay definition done elsewhere.

1999-11-24  Gerd Moellmann  <gerd@gnu.org>

	* lisp.h (enum pvec_type): Put PVEC_FLAG in #if 0.

	* emacs.c (PVEC_FLAG): New variable.

1999-11-23  Gerd Moellmann  <gerd@gnu.org>

	* unexaix.c (unexec): Use unsigned instead of uintptr_t because
	that fails on IBM PowerPC, AIX 4.2.

1999-11-22  Eli Zaretskii  <eliz@is.elta.co.il>

	* buffer.c (syms_of_buffer): Add %z, %Z, %m and %& to the doc
	string of mode-line-format.  Remove the obsolete %t.

1999-11-22  Gerd Moellmann  <gerd@gnu.org>

	* dispnew.c (direct_output_for_insert): Increment glyph positions
	for glyphs from buffer text only.

	* emacs.c (gdb_valbits, gdb_gctypebits, gdb_emacs_intbits)
	(gdb_data_seg_bits): New variables.

	* lisp.h (enum gdb_lisp_params): Put in #if 0, since it doesn't
	work on systems not allowing enumerators > INT_MAX, and it
	won't work if EMACS_INT is long long.

1999-11-22  Paul Eggert  <eggert@twinsun.com>

	Port to SunOS 4.1.x again.  Help out with Alpha port.
	Rename messages-locale to system-messages-locale,
	and likewise for time-locale.

	* callproc.c (strerror): Remove decl.
	* fileio.c (strerror): Likewise.
	* process.c (strerror): Likewise.
	* emacs.c (strerror): Likewise.
	(Vsystem_messages_locale): Renamed from Vmessages_locale.
	All uses changed.
	(Vprevious_system_messages_locale): Likewise, from
	Vprevious_messages_locale.
	(Vsystem_time_locale): Likewise, from Vtime_locale.
	(Vprevious_system_time_locale): Likewise, from Vprevious_time_locale.
	(ABORT_RETURN_TYPE): New macro.
	(abort): Return type is now ABORT_RETURN_TYPE.
	(main): Always invoke init_signals, even if POSIX_SIGNALS is not
	defined.
	(syms_of_emacs): messages-locale -> system-messages-locale,
	previous-messages-locale -> previous-system-messages-locale,
	time-locale -> system-time-locale,
	previous-time-locale -> previous-system-time-locale.

	* gmalloc.c (PP, __ptr_t): Assume ANSI C if STDC_HEADERS is defined.
	(const): Do not define; that's config.h's job.
	(<limits.h>): Include if HAVE_LIMITS_H is defined.
	(CHAR_BIT): Move test for definedness outside of limits.h condition.
	(<stddef.h>): Include if STDC_HEADERS is defined.
	(FREE_RETURN_TYPE): New macro.
	(free): Return type is now FREE_RETURN_TYPE.

	* lisp.h (synchronize_system_time_locale): Renamed from
	synchronize_time_locale.  All uses changed.
	(synchronize_system_messages_locale): Likewise, from
	synchronize_messages_locale.

	* m/alpha.h (malloc, realloc, calloc): Remove decls;
	stdlib.h now does this.

	* process.c (sys_siglist): Remove.

	* s/sunos4-0.h (ABORT_RETURN_TYPE, FREE_RETURN_TYPE):
	New macros.

	* syntax.c (scan_sexps_forward): Use abort, not assert.

	* sysdep.c (my_sys_siglist): New var.
	(sys_siglist): New macro.  Remove old initialized vars of same name.
	(init_signals): Initialize sys_siglist.

	* xfns.c (abort): Remove decl; stdlib.h now does this.

1999-11-18  Dave Love  <fx@gnu.org>

	* filelock.c: Add forward declaration for get_boot_time_1.

	* dispnew.c (Finternal_show_cursor_p): Fix doc string.

1999-11-18  Gerd Moellmann  <gerd@gnu.org>

	* buffer.h (struct buffer_text): Add comment about moving
	buffer text if REL_ALLOC is defined.

1999-11-18  Kenichi Handa  <handa@etl.go.jp>

	* lisp.h (KEY_DESCRIPTION_SIZE): New macro.

	* keyboard.c (echo_char): Use KEY_DESCRIPTION_SIZE to check free
	memory for push_key_description.

	* keymap.c (Fsingle_key_description): Use KEY_DESCRIPTION_SIZE to
	allocate memory for push_key_description.
	(describe_buffer_bindings): Likewise.

1999-11-17  Gerd Moellmann  <gerd@gnu.org>

	* xfns.c (Fx_show_busy_cursor): Doc-fix.
	(Fx_hide_busy_cursor): Ditto.

1999-11-17  Marco Walther  <walther@siemens-pyramid.com>

	* unexsni.c (unexec): Handle .rel.dyn section.

1999-11-16  Dave Love  <fx@gnu.org>

	* doc.c (Fdocumentation): Remove gcpro here too.

1999-11-16  Gerd Moellmann  <gerd@gnu.org>

	* keyboard.c (command_loop_1): Remove no_redisplay.

1999-11-16  Richard M. Stallman  <rms@gnu.org>

	* print.c (PRINTPREPARE): Don't call setup_echo_area_for_printing
	in noninteractive.

1999-11-14  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (ensure_echo_area_buffers): New.
	(with_echo_area_buffer): Use it.
	(setup_echo_area_for_printing): Ditto.

	* buffer.c (indicate-empty-lines): Doc-fix.

1999-11-12  Gerd Moellmann  <gerd@gnu.org>

	* term.c (term_init): If "op" isn't available, don't support color
	because we can't switch back to the default foreground and
	background.

	* doc.c (Fdocumentation_property): Remove GCPRO because
	Fsubstitute_command_keys gcpro's the string.

1999-11-12  Kenichi Handa  <handa@etl.go.jp>

	* editfns.c (Ftranslate_region): Check the buffer multibyteness.

1999-11-11  Gerd Moellmann  <gerd@gnu.org>

	* print.c, keymap.c, indent.c, insdel.c, keyboard.c, intervals.c,
	lread.c, textprop.c, undo.c, emacs.c, lisp.h, intervals.h,
	buffer.h, config.in, Makefile.in: Remove USE_TEXT_PROPERTIES.

1999-11-10  Gerd Moellmann  <gerd@gnu.org>

	* xfns.c (QCuser_data): Removed.
	(syms_of_xfns): Initialization of QCuser_data removed.
	(parse_image_spec): Don't handle :user-data specially.  Allow
	unknown keys.  Remove parameter ALLOW_OTHER_KEYS.
	(xbm_image_p, xbm_load, xpm_image_p, pbm_image_p, png_image_p)
	(tiff_image_p, jpeg_image_p, gif_image_p, gs_image_p): Call
	parse_image_spec accordingly.

1999-11-09  Richard M. Stallman  <rms@gnu.org>

	* cmds.c (Fbeginning_of_line): Doc fix.
	(Fend_of_line): Doc fix.

	* editfns.c (Fline_beginning_position): If N is not 1,
	pass t to Fconstrain_to_field for ESCAPE-FROM-EDGE.

	* syntax.c (Fforward_word): Handle fields even if would have hit
	an edge of the buffer.  Return nil if affected by fields.

1999-11-09  Richard M. Stallman  <rms@gnu.org>

	* editfns.c (preceding_pos): Function deleted.
	(text_property_stickiness): Decrement POS directly.
	Fix a confusion that used PT instead of POS.

	* editfns.c (find_field): Properly handle the case
	of a field boundary where `field' inherits from neither side.

	* editfns.c (Ffield_beginning, Ffield_end): Doc fixes.
	(Ferase_field, Ffield_string, Ffield_string_no_properties): Doc fixes.

1999-11-08  Gerd Moellmann  <gerd@gnu.org>

	* bytecode.c (Fbyte_code) <BinsertN, Bcall>: Do the
	BEFORE_POTENTIAL_GC before DISCARD.

1999-11-07  Gerd Moellmann  <gerd@gnu.org>

	* alloc.c (Fgarbage_collect): Call unmark_byte_stack.

	* lisp.h: Add prototype for unmark_byte_stack.

	* bytecode.c (mark_byte_stack): Use XMARKBIT and XMARK.
	(unmark_byte_stack): Renamed from relocate_byte_pcs.  Use
	XUNMARK.

	* xdisp.c (resize_mini_window): Fix computation of needed
	mini-window height.

	* alloc.c, buffer.c, editfns.c, xdisp.c: Remove conditional
	compilation on USE_TEXT_PROPERTIES.

	* bytecode.c (Fbyte_code): Use block statements in cases and
	declare v1 and v2 locally there.  Rearrange case statements so
	that those most frequently executed come first.  Avoid goto's in
	frequently executed cases.

1999-11-05  Gerd Moellmann  <gerd@gnu.org>

	* bytecode.c (Fbyte_code): Use BEFORE_POTENTIAL_GC and
	AFTER_POTENTIAL_GC around internal_catch.

	* alloc.c (Fgarbage_collect): Call mark_byte_stack and
	relocate_byte_pcs.
	(init_alloc_once, init_alloc): Set byte_stack_list to null.

	* eval.c (struct catchtag): Add member byte_stack.
	(internal_catch, Fcondition_case, internal_condition_case)
	(internal_condition_case_1): Save value of byte_stack_list in
	catchtag.
	(unwind_to_catch): Restore byte_stack_list from catchtag.

	* lisp.h: Add prototypes for new functions in bytecode.c.
	Add extern declaration for byte_stack_list.

	* bytecode.c (struct byte_stack): New.
	(byte_stack_list, mark_byte_stack, relocate_byte_pcs): New.
	(BEFORE_POTENTIAL_GC, AFTER_POTENTIAL_GC): New.
	(FETCH, PUSH, POP, DISCARD, TOP, MAYBE_GC): Rewritten.
	(HANDLE_RELOCATION): Removed.
	(Fbyte_code): Use byte_stack structures.

	* filelock.c (Ffile_locked_p): Make FILENAME a required argument.

	* buffer.c (syms_of_buffer): Extend documentation of
	mode-line-format.

1999-11-04  Gerd Moellmann  <gerd@gnu.org>

	* editfns.c (Fdelete_field): Renamed from Ferase_field.

	* minibuf.c (do_completion, Fminibuffer_complete_word): Use
	Ferase_field instead of Fdelete_field.

1999-11-03  Gerd Moellmann  <gerd@gnu.org>

	* dispnew.c (Finternal_show_cursor): Change it to set the
	cursor on/off, not toggle its state.
	(Finternal_show_cursor_p): New.
	(syms_of_display): Defsubr Sinternal_show_cursor_p.

1999-11-03  Dave Love  <fx@gnu.org>

	* charset.c (split_non_ascii_string): Define return value.

1999-11-03  Gerd Moellmann  <gerd@gnu.org>

	* minibuf.c (string_to_object): New.
	(read_minibuf_noninteractive): New.
	(read_minibuf): Call read_minibuf_noninteractive if
	noninteractive.  Use string_to_object.

	* doc.c (Fdocumentation_property): Fix bug bypassing UNGCPRO.

1999-11-02  Dave Love  <fx@gnu.org>

	* gnu-linux.h: Use SIGCHLD, not SIGCLD (not in glibc 2.1).

	* process.c: Define _GNU_SOURCE before config.h to get strsignal
	declared with glibc2.

1999-11-02  Gerd Moellmann  <gerd@gnu.org>

	* lisp.h (QUIT): Give it statement form.

1999-11-02  Dave Love  <fx@gnu.org>

	* eval.c (init_eval): Conditionalize declaration of gcpro_level.

1999-11-02  Gerd Moellmann  <gerd@gnu.org>

	* xfns.c (QCuser_data): New.
	(syms_of_xfns): Initialize QCuser_data.
	(parse_image_spec): Ignore :user-data DATA properties.

	* xdisp.c (display_line): Set charpos of first glyph in blank
	lines not corresponding to any text to -1, even if no glyphs are
	filled in in that line.

1999-11-01  Gerd Moellmann  <gerd@gnu.org>

	* xfns.c (png_load) [PNG_READ_sRGB_SUPPORTED]: Put code using
	png_get_sRGB in #ifdef.

	* dispnew.c (Finternal_show_cursor): Renamed from Fshow_cursor.
	(syms_of_display): Use the new name.

	* textprop.c (verify_interval_modification): Signal text-read-only
	instead of calling error.

	* data.c (Qtext_read_only): New built-in error.
	(syms_of_data): Initialize it.

	* lisp.h: Add extern declaration for Qtext_read_only.

	* syntax.c: Remove whitespace after open or in front of closing
	parentheses.

1999-11-01  Richard M. Stallman  <rms@gnu.org>

	* Makefile.in (w16select.o, sound.o): Don't depend on lisp.h.

1999-10-31  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (resize_mini_window): Compute needed height differently.

	* fns.c (Flength): Unroll loop over lists.

	* xdisp.c (append_space): Return non-zero if space was appended.
	(display_line): Set charpos of first glyph to -1 only if that
	glyph is the space added by append_glyph.

1999-10-30  Richard M. Stallman  <rms@gnu.org>

	* print.c (strout): Consider `noninteractive' and use stdout
	only when PRINTCHARFUN is t.

	* lisp.h (struct gcpro) [DEBUG_GCPRO]: New field `level'.
	(gcpro_level): Declare it extern.
	[DEBUG_GCPRO] (GCPRO1, GCPRO2, GCPRO3, GCPRO4, GCPRO5):
	Alternate definitions that set `level' and increment `gcpro_level'.
	[DEBUG_GCPRO] (UNGCPRO): Alternate definition that checks gcpro_level.

	* eval.c [DEBUG_GCPRO] (gcpro_level): New variable.
	(init_eval) [DEBUG_GCPRO]: Initialize it.
	(unwind_to_catch) [DEBUG_GCPRO]: Set gcpro_level
	from remaining gcprolist.

1999-10-29  Kenichi Handa  <handa@etl.go.jp>

	* coding.c (code_convert_region): Update `dst' correctly.

1999-10-28  Gerd Moellmann  <gerd@gnu.org>

	* fns.c (Fmemq, Fassq, Frassq, assq_no_quit, Fassoc)
	(Frassoc): Rewritten.

1999-10-27  Noah Friedman  <friedman@splode.com>

	* s/gnu-linux.h [HAVE_DEV_PTMX]: Redefine FIRST_PTY_LETTER to 'z'.
	Define PTY_NAME_SPRINTF.
	Redefine PTY_TTY_NAME_SPRINTF.
	* config.in: Add undef for HAVE_DEV_PTMX.

1999-10-26  Richard M. Stallman  <rms@gnu.org>

	* regex.c (POP_FAILURE_POINT): Use failure_id.integer
	as arg to DEBUG_POP and DEBUG_PRINT.

1999-10-27  Richard M. Stallman  <rms@gnu.org>

	* data.c (Qad_activate_internal): Renamed from Qad_activate.
	(Ffset): Call Qad_activate_internal.
	(syms_of_data): Initialize Qad_activate_internal.

1999-10-27  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (echo_area_display) [HAVE_X_WINDOWS]: Do nothing if
	Vterminal_frame is selected and Vwindow_system is non-nil.

1999-10-26  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (echo_area_display): Put previous change in #if 0.

	* emacs.c (standard_args): Add `file' as synonym for `visit',
	`execute' as synonym for `eval'.
	(main): Add new options to usage message.

1999-10-25  Gerd Moellmann  <gerd@gnu.org>

	* data.c (Qhash_table): New.
	(Ftype_of): Return it for hash tables.
	(syms_of_data): Initialize Qhash_table.

1999-10-25  Richard M. Stallman  <rms@gnu.org>

	* regex.c (POP_FAILURE_POINT): Extract failure_id as an integer.

1999-10-24  Ken Raeburn  <raeburn@gnu.org>

	* alloc.c: Undef HIDE_LISP_IMPLEMENTATION before including
	lisp.h.

	* buffer.c (Fbuffer_list, Fget_file_buffer, get_truename_buffer)
	(Fbuffer_local_variables, Fother_buffer, record_buffer)
	(set_buffer_internal_1, Fbury_buffer, Fkill_all_local_variables)
	(swap_out_buffer_local_variables, overlays_at, overlays_in)
	(overlay_touches_p, overlay_strings, recenter_overlay_lists)
	(fix_overlays_in_range, fix_overlays_before, Foverlay_get)
	(Foverlay_put, report_overlay_modification, evaporate_overlays):
	Use XCAR, XCDR, and XFLOAT_DATA instead of explicit member
	references.
	* data.c (Fcar, Fcar_safe, Fcdr, Fcdr_safe, Fsetcar, Fsetcdr)
	(swap_in_symval_forwarding, set_internal, default_value)
	(Fset_default, Fmake_variable_buffer_local, Fmake_local_variable)
	(Fmake_variable_frame_local, Flocal_variable_p)
	(Flocal_variable_if_set_p, arithcompare, Fzerop, cons_to_long)
	(Fnumber_to_string, float_arith_driver, Fadd1, Fsub1): Likewise.
	* dispnew.c (Fframe_or_buffer_changed_p): Likewise.
	* emacs.c (main): Likewise.
	* fontset.c (fs_load_font, fs_register_fontset)
	(CACHED_FONTSET_NAME, CACHED_FONTSET_REGEX, Fquery_fontset)
	(Fnew_fontset, Fset_fontset_font): Likewise.
	* frame.c (do_switch_frame, next_frame, prev_frame)
	(other_visible_frames, Fdelete_frame, Fvisible_frame_list):
	Likewise.
	* keyboard.c (read_char, help_char_p, event_to_kboard)
	(kbd_buffer_get_event, timer_start_idle, timer_check)
	(make_lispy_event, apply_modifiers, reorder_modifiers)
	(Fevent_convert_list, lucid_event_type_list_p, menu_bar_items)
	(menu_bar_one_keymap, menu_item_eval_property_1, parse_menu_item)
	(tool_bar_items, read_char_x_menu_prompt, read_key_sequence)
	(Fcommand_execute, Fexecute_extended_command): Likewise.
	* minibuf.c (read_minibuf, get_minibuffer, Ftry_completion)
	(Fall_completions): Likewise.
	* window.c (Fset_window_margins): Likewise.

	* callint.c (quotify_args): Don't explicitly use struct
	Lisp_Cons, use Lisp_Object and XCAR/XCDR instead.

	* s/netbsd.h (HAVE_GETLOADAVG): Define as 1.
	(UNEXEC, START_FILES, LIB_STANDARD, LIB_GCC): Define ELF versions,
	if __ELF__ is defined.

1999-10-24  Gerd Moellmann  <gerd@gnu.org>

	* window.c (Fnext_window): Add a QUIT in the loop.

1999-10-23  Gerd Moellmann  <gerd@gnu.org>

	* Makefile.in (bootstrap, bootstrap-emacs, bootstrap-temacs):
	New targets.

1999-10-22  Dave Love  <fx@gnu.org>

	* emacs.c (main): Enable profiling conditional on __linux also.

1999-10-20  Gerd Moellmann  <gerd@gnu.org>

	* xrdb.c (x_load_resources): Set default resources for resource
	classes instead of for the specific Emacs.

1999-10-19  Gerd Moellmann  <gerd@gnu.org>

	* s/freebsd.h (HAVE_GETLOADAVG): Define as 1 because config.h
	defines it that way.

	* xdisp.c (echo_area_display) [HAVE_X_WINDOWS]: Do nothing
	if selected_frame is equal to Vterminal_frame.

1999-10-19  Paul Eggert  <eggert@twinsun.com>

	Add support for large files, 64-bit Solaris, system locale codings.

	* Makefile.in (emacs): Set the LC_ALL environment variable to "C"
	when dumping, so that the dumped Emacs doesn't have stray locale info.
	(dired.o): Depend on systime.h.
	(editfns.o): Depend on coding.h.

	* alloc.c, buffer.c, callproc.c, ccl.c, charset.c, coding.c, data.c,
	dispnew.c, editfns.c, emacs.c, filelock.c, floatfns.c, hftctl.c,
	keyboard.c, process.c, sysdep.c, unexelf.c, unexhp9k800.c,
	unexsunos4.c, vmsfns.c, vmsgmalloc.c, w32faces.c, w32menu.c, w32term.c,
	w32xfns.c, xfaces.c, xfns.c, xmenu.c, xterm.c:
	Include <config.h> before any system include files.

	* alloc.c, buffer.c, ccl.c, data.c, editfns.c, emacs.c, eval.c,
	fileio.c, filelock.c, frame.c, insdel.c, keymap.c, lread.c,
	m/alpha.h, print.c, search.c, sysdep.c, xdisp.c, xfaces.c, xfns.c,
	xmenu.c, xterm.c:
	Do not include <stdlib.h>, as <config.h> does this now.

	* callproc.c (Fcall_process):
	Synchronize messages locale before invoking strerror.
	Decode resulting string with locale-coding-system.

	* coding.c (Vlocale_coding_system): New var.
	(syms_of_coding): Adjust to above change.
	(emacs_strerror): New function.

	* coding.h (emacs_strerror, Vlocale_coding_system): New decls.

	* config.in (HAVE_STDIO_EXT_H, HAVE_TM_GMTOFF, HAVE___FPENDING)
	(HAVE_FTELLO, HAVE_GETLOADAVG, HAVE_MBLEN, HAVE_MBRLEN)
	(HAVE_STRSIGNAL): New macros.
	(BITS_PER_LONG): Default to 64 if _LP64 is defined.
	<stdlib.h>: Include if HAVE_STDLIB_H is defined and NOT_C_CODE isn't.

	* dired.c: Include "systime.h".
	(Ffile_attributes): Do not cast s.st_size to int; this loses
	information if int is 32 bits but st_size and EMACS_INT are larger.
	Treat large device numbers like large inode numbers.

	* dispnew.c (PENDING_OUTPUT_COUNT): Use __fpending if available.

	* editfns.c: Include coding.h.
	(emacs_strftime): Remove decl.
	(emacs_strftimeu): New decl.
	(emacs_memftimeu): Renamed from emacs_memftime; new arg UT.
	Use emacs_strftimeu instead of emacs_strftime.
	(Fformat_time_string): Convert format string using
	Vlocale_coding_system, and convert result back.  Synchronize time
	locale before invoking lower level function.  Invoke
	emacs_memftimeu, passing ut, instead of emacs_memftime.

	* emacs.c: Include <locale.h> if HAVE_SETLOCALE is defined.
	(Vmessages_locale, Vprevious_messages_locale, Vtime_locale)
	(Vprevious_time_locale): New variables.
	(main): Invoke setlocale early, so that initial error messages are
	localized properly.  But skip locale-setting if LC_ALL is "C".
	Fix up locale when it's safe to do so.
	(fixup_locale): Moved here from xterm.c.
	(synchronize_locale, synchronize_time_locale)
	(synchronize_messages_locale): New functions.
	(syms_of_emacs): Accommodate above changes.

	* fileio.c (report_file_error): Convert strerror output according
	to Vlocale_coding_system.
	(Finsert_file_contents): Check for arithmetic overflow in
	computations that depend on file size.  Report IO errors
	with emacs_strerror, not strerror.

	* fns.c (Fgethash): Declare dflt parameter.

	* gmalloc.c: Do not define const to nothing if HAVE_CONFIG_H
	is defined; that's config.h's job.

	* lisp.h (EMACS_INT, BITS_PER_EMACS_INT, EMACS_UINT): If _LP64,
	default these values to long, BITS_PER_LONG, and unsigned long.
	(VALBITS, MARKBIT, XINT): Do not assume 32-bit EMACS_INT.
	(PNTR_COMPARISON_TYPE): Default to EMACS_UINT, not to unsigned int.
	(code_convert_string_norecord, fixup_locale)
	(synchronize_messages_locale, synchronize_time_locale)
	(emacs_open, emacs_close, emacs_read, emacs_write): New decls.
	All Emacs callers of open, close, read, write changed to use
	emacs_open, emacs_close, emacs_read, emacs_write.

	* lread.c (file_offset, file_tell): New macros.  All uses of ftell
	changed to file_tell.
	(saved_doc_string_position, prev_saved_doc_string_position): Now
	of type file_offset.
	(init_lread): Do not fix locale here; fixup_locale now does this.

	* m/amdahl.h, s/usg5-4.h:
	(NSIG): Remove.
	(NSIG_MINIMUM): New macro.

	* m/cydra5.h, m/dpx2.h, m/mips.h, m/pfa50.h, m/sps7.h, m/stride.h,
	m/ustation.h, s/gnu-linux.h, s/hpux.h, s/iris3-5.h, s/iris3-6.h,
	s/umips.h, s/usg5-4.h:
	(SIGIO): Do not undef.
	(BROKEN_SIGIO): New macro.

	* m/ustation.h:
	(SIGTSTP): Do not undef.
	(BROKEN_SIGTSTP): New macro.

	* s/gnu-linux.h:
	(SIGPOLL, SIGURG): Do not undef.
	(BROKEN_SIGPOLL, BROKEN_SIGURG): New macros.

	* s/ptx4.h:
	(SIGINFO): Do not undef.
	(BROKEN_SIGINFO): New macros.

	* m/delta.h, s/ptx.h, s/template.h: Doc fix.

	* mktime.c, strftime.c: Update to glibc 2.1.2 version, with
	some Emacs-related changes merged.

	* print.c (float_to_string): Prepend "-" to representation of a
	NaN if the NaN is negative.

	* process.c (sys_siglist): Omit if HAVE_STRSIGNAL.
	(wait_reading_process_input): Use emacs_strerror, not strerror.

	* process.c (status_message, sigchld_handler): Synchronize locale,
	then use strsignal istead of sys_siglist.
	* w32proc.c (sys_wait): Likewise.

	* s/aix3-1.h, s/bsd4-1.h, s/dgux.h, s/gnu-linux.h, s/hiuxmpp.h,
	s/hpux.h, s/iris3-5.h, s/iris3-6.h, s/irix3-3.h, s/osf1.h, s/rtu.h,
	s/sunos4-1.h, s/unipl5-0.h, s/unipl5-2.h, s/usg5-0.h, s/usg5-2-2.h,
	s/usg5-2.h, s/usg5-3.h, s/xenix.h:
	(open, close, read, write, INTERRUPTIBLE_OPEN)
	(INTERRUPTIBLE_CLOSE, INTERRUPTIBLE_IO): Remove.

	* s/sol2-5.h (_LARGEFILE_SOURCE, _FILE_OFFSET_BITS): New macros.

	* sysdep.c (sys_read, sys_write, read, write, sys_close, close)
	(sys_open, open): Remove.
	(emacs_open, emacs_close, emacs_read, emacs_write): Always define;
	the old INTERRUPTIBLE_OPEN, INTERRUPTIBLE_CLOSE, and INTERRUPTIBLE_IO
	macros are no longer used.
	(emacs_open): Renamed from sys_open.  Merge BSD4_1 version.
	(emacs_close): Renamed from sys_close.
	(emacs_read): Renamed from sys_read.
	(emacs_write): Renamed from sys_write.
	(sys_siglist): Do not declare if HAVE_STRSIGNAL.
	(dup2): Do not print error on failure; the real dup2 doesn't.
	(strsignal): New function, defined if !HAVE_STRSIGNAL.

	* syssignal.h (SIGINFO): Undef if defined and if BROKEN_SIGINFO
	is defined.
	(SIGIO, SIGPOLL, SIGTSTP, SIGURG): Likewise.
	(NSIG): If less than NSIG_MINIMUM, define to NSIG_MINIMUM.
	(strsignal): Declare if !HAVE_STRSIGNAL.

	* unexelf.c (ElfBitsW, ELFSIZE, ElfExpandBitsW): New macros.
	(ElfW): Define in terms of ElfExpandBitsW.

	* w32proc.c (sys_siglist): Remove decl.

	* xdisp.c (decode_mode_spec): 3rd arg is int, not char, to comply
	with ANSI C.
	(display_string): Declare face_string_pos arg.

	* xfns.c (Fx_show_tip): Declare timeout param.

	* xterm.c: No need to include locale.h.
	(x_alloc_lighter_color, x_setup_relief_color):
	Pass arg as double, not float, for compatibility with ANSI C.
	(fixup_locale): Move to emacs.c.
	(x_term_init): Do not setlocale or fixup locale; the main program
	does this now.

1999-10-18  Dave Love  <fx@gnu.org>

	* doc.c (Fdocumentation_property): Gcpro `tem'.

1999-10-18  Kenichi Handa  <handa@etl.go.jp>

	* lread.c (Fload): Calculate bytes of filename correctly.
	(openp): Likewise.

1999-10-18  Keisuke Nishida  <kxn30@po.cwru.edu>

	* print.c (print_preprocess): In case print-circle is nil,
	add OBJ to Vprint_number_table only when OBJ is a symbol.

1999-10-18  Kenichi Handa  <handa@etl.go.jp>

	* coding.c (code_convert_string): Add record_unwind_protect to
	assure setting inhibit_pre_post_conversion back to zero.  Take
	care of the multibyteness of the working buffer.

	* coding.c (inhibit_pre_post_conversion): New variable.
	(setup_coding_system): If inhibit_pre_post_conversion is nonzero,
	ignore post-read-conversion and pre-write-conversion property of
	the coding system.
	(code_convert_region_unwind): New function.
	(code_convert_region): Set inhibit_pre_post_conversion to 1 while
	running pre-write-conversion and post-read-conversion.
	(code_convert_string): Likewise.

1999-10-17  Miles Bader  <miles@gnu.org>

	* editfns.c: Doc fix.

1999-10-17  Miles Bader  <miles@gnu.org>

	* editfns.c (Fconstrain_to_field): Make sure we don't violate the
	argument preconditions of find_before_next_newline in the case
	where both ONLY_IN_LINE and ESCAPE_FROM_EDGE are set and OLD_POS
	was indeed at the edge.

1999-10-17  Miles Bader  <miles@gnu.org>

	* minibuf.c (Fminibuffer_complete_and_exit): Supply value for new
	ESCAPE_FROM_EDGE parameter to Ffield_beginning.

	* editfns.c (text_property_eq, text_property_stickiness): Don't
	use initializers for auto variables of type Lisp_Object.
	(find_field): Likewise.  Use braces around nested ifs.
	(Fline_end_position): Store the raw eol in a variable, so that the
	final expression doesn't look so ugly.
	(Fconstrain_to_field): Doc fix.
	(preceding_pos): Renamed from `preceeding_pos'.
	(text_property_stickiness, find_field): Call preceding_pos,
	not preceeding_pos.

1999-10-17  Miles Bader  <miles@gnu.org>

	* editfns.c (Ffield_string_no_properties): New function.
	(text_property_stickiness, preceeding_pos): New functions.
	(Ffield_string): Remove PROPS parameter.
	(find_field): Add MERGE_AT_BOUNDARY parameter.
	Rewrite to use stickiness of `field' property to resolve
	ambiguous cases.
	(Ffield_beginning, Ffield_end): Add ESCAPE_FROM_EDGE parameter.
	(Fconstrain_to_field): Likewise.
	(syms_of_editfns): Init Sfield_string_no_properties.
	(Ffield_string, Ferase_field, Ffield_end):
	Supply new MERGE_AT_BOUNDARY argument to find_field.
	(Fline_beginning_position, Fline_end_position): Supply new
	ESCAPE_FROM_EDGE parameter to Fconstrain_to_field.
	Pass a value of Qt for the ONLY_IN_LINE argument to
	Fconstrain_to_field (only matters if N != 1).
	* syntax.c (Fforward_word): Supply new ESCAPE_FROM_EDGE parameter
	to Fconstrain_to_field.

	* minibuf.c (Fminibuffer_complete_word): Use
	Ffield_beginning to find the prompt end.

1999-10-17  Miles Bader  <miles@gnu.org>

	* editfns.c (Fconstrain_to_field): Add get/set-current-point
	behavior when NEW_POS is nil.
	(find_field): Use XSETFASTINT instead of make_number.
	* minibuf.c (Fminibuffer_complete_and_exit): Test for an empty
	input string by seeing where the field begins, instead of
	looking at text-properties.

1999-10-17  Miles Bader  <miles@gnu.org>

	* editfns.c (Qfield): New variable.
	(find_field, Ferase_field, Ffield_string)
	(Ffield_beginning, Ffield_end, Fconstrain_to_field): New functions.
	(Fline_beginning_position, Fline_end_position): Constrain to any field.
	(make_buffer_string_both): Remove minibuffer-prompt hack.
	(syms_of_editfns): Initialize Qfield, and subr entries for
	field functions above.
	* minibuf.c (read_minibuf): Don't save minibuffer prompt length on
	minibuf_save_list.
	Don't initialize minibuffer prompt length.
	Wrap prompt text-properties around the entire prompt.
	Add 'prompt text-property to prompt.
	Get final value with Ffield_string instead of make_buffer_string.
	(read_minibuf_unwind): Don't restore minibuffer prompt length from
	minibuf_save_list.
	(do_completion): Get minibuffer input with Ffield_string
	instead of Fbuffer_string.
	Erase minibuffer input with Ferase_field instead of erase_buffer.
	(Fminibuffer_complete_and_exit): Likewise.
	Test whether buffer is empty by looking for the 'prompt text
	property at the end.
	Set prompt length by looking for the end of the prompt text property,
	and save prompt length for later use (since there is no longer a
	buffer variable to get it from).
	(Fminibuffer_prompt_width, Fminibuffer_prompt_end): Functions removed.
	(syms_of_minibuf): Remove initializations of
	Sminibuffer_prompt_width and Sminibuffer_prompt_end.
	* buffer.h (struct buffer): Remove prompt_end_charpos field.
	* buffer.c (Fget_buffer_create, Fmake_indirect_buffer, Fkill_buffer):
	Don't initialize prompt_end_charpos field.
	* syntax.c (Fforward_word): Likewise.
	Constrain to any field.

1999-10-16  Gerd Moellmann  <gerd@gnu.org>

	* window.c (enum save_restore_action): New.
	(save_restore_orig_size): Change parameter list.  Add
	functionality to check for valid orig_top and orig_height members
	in a window tree.
	(grow_mini_window): Call save_restore_orig_size with new parameter
	list.
	(shrink_mini_window): Restore old window sizes only if old
	size information is valid in all windows in a window tree.

1999-10-15  Gerd Moellmann  <gerd@gnu.org>

	* xmenu.c (set_frame_menubar): Don't call
	x_set_menu_resources_from_menu_face here.
	(update_frame_menubar): Call x_set_menu_resources_from_menu_face.

	* xfns.c (gif_load): Fix handling of interlaced GIFs.

1999-10-14  Dave Love  <fx@gnu.org>

	* xdisp.c (handle_fontified_prop): GCPRO `pos'.

1999-10-14  Gerd Moellmann  <gerd@gnu.org>

	* process.c (Fopen_network_stream): Don't loop if gethostbyname
	fails and h_errno is TRY_AGAIN.

1999-10-13  Dave Love  <fx@gnu.org>

	* filelock.c (lock_file): Move gcpro of `fn'.

1999-10-10  Gerd Moellmann  <gerd@gnu.org>

	* keyboard.c (auto-save-interval): Fix documentation.

1999-10-09  Richard M. Stallman  <rms@gnu.org>

	* print.c (print): When removing objects from Vprint_number_table,
	only scan the newly added objects.
	(print_preprocess): If OBJ is a gensym, and print-continuous-numbering,
	unconditionally force it to stay in the table.

1999-10-09  Gerd Moellmann  <gerd@gnu.org>

	* xfns.c (prepare_image_for_display): Don't try to load image if
	loading it failed before.
	(lookup_image, prepare_image_for_display): Remember if loading the
	image failed.
	(xpm_load): Add missing UNBLOCK_INPUT.

	* dispextern.h (struct image): New member load_failed_p.

1999-10-08  Stefan Monnier  <monnier@cs.yale.edu>

	* fileio.c (Fmake_temp_name): Add a reference to `make-temp-file'
	in the docstring.

1999-10-08  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (XTread_socket) <ClientMessage, WM_TAKE_FOCUS>:
	Don't call XSetInputFocus because that can generate additional
	FocusIn events.

1999-10-07  Jeffrey C Honig  <jch@bsdi.com>

	* bsdos4.h [HAVE_LIBNCURSES]: Define TERMINFO and LIBS_TERMCAP.

1999-10-07  Richard M. Stallman  <rms@gnu.org>

	* process.c (wait_reading_process_input): When trying to suck
	input from one process, for accept-process-output,
	exit that loop if we get EAGAIN or EWOULDBLOCK.

1999-10-07  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (Qbitmap_spec_p): Replaces Qpixmap_spec_p.
	(Fbitmap_spec_p): Replaces Fpixmap_spec_p.
	(load_pixmap): Use Fbitmap_spec_p and Qbitmap_spec_p instead of
	Fpixmap_spec_p and Qpixmap_spec_p.
	(load_face_colors, check_lface_attrs, merge_face_vector_with_property)
	(Finternal_set_lisp_face_attribute): Use Fbitmap_spec_p.
	(syms_of_xfaces): Initialize Qbitmap_spec_p, defsubr
	Fbitmap_spec_p.

1999-10-07  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (display_menu_bar): Use MENU_FACE_ID instead of
	MODE_LINE_FACE_ID.

	* xfaces.c (toplevel) [USE_MOTIF]: Include some Motif headers.
	(struct x_resources) [USE_X_TOOLKIT]: New.
	(xm_apply_resources, xm_set_menu_resources_from_menu_face)
	[USE_MOTIF]: New.
	(xl_apply_resources, xl_set_menu_resources_from_menu_face)
	[USE_LUCID]: New.
	(x_set_menu_resources_from_menu_face) [USE_X_TOOLKIT]: New.
	(Qmenu): New.
	(syms_of_xfaces): Initialize Qmenu.
	(realize_basic_faces): Realize face `menu'.
	(resolve_face_name): New.
	(lface_from_face_name): Use it.
	(Finternal_set_lisp_face_attribute): Ditto.
	(Fpixmap_spec_p): Rewritten.  Extend doc string.

	* xmenu.c (set_frame_menubar, xmenu_show): Call
	x_set_menu_resources_from_menu_face.

	* dispextern.h (enum face_id): Add MENU_FACE_ID.
	(toplevel): Include X11/Intrinsic.h.

1999-10-03  Ken'ichi Handa  <handa@gnu.org>

	* coding.c (DECODE_CHARACTER_ASCII): Decode ASCII invocated to GR
	correctly.

1999-09-30  Kenichi Handa  <handa@etl.go.jp>

	* category.c (modify_lower_category_set): Set default value of
	TABLE correctly.

	* minibuf.c (Fminibuffer_complete_word): Calculate string byte
	size correctly.

1999-09-29  Gerd Moellmann  <gerd@gnu.org>

	* editfns.c (Fpropertize): Renamed from Fproperties.

1999-09-29  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (resize_mini_window): Do nothing if frame is an X
	frame that hasn't been initialized yet.

1999-09-28  Richard M. Stallman  <rms@gnu.org>

	* keymap.c (Fsingle_key_description): Make tem big enough.
	(describe_buffer_bindings): Make buf big enough.

1999-09-27  Richard M. Stallman  <rms@gnu.org>

	* intervals.c (get_local_map): Use indirect_function,
	not Findirect_function.

1999-09-27  Dave Love  <fx@gnu.org>

	* cm.h: Remove unneeded declaration of ospeed.

1999-09-26  Gerd Moellmann  <gerd@gnu.org>

	* lisp.h (toplevel): Add prototype for
	next_single_char_property_change.

	* textprop.c (next_single_char_property_change): New.

	* xdisp.c (display_prop_end, invisible_text_between_p): Use
	next_single_char_property_change.

1999-09-25  Gerd Moellmann  <gerd@gnu.org>

	* editfns.c (Fproperties): New.
	(syms_of_editfns): Defsubr it.

	* xfns.c (lookup_image): Set image's timestamp because it's
	used when we look it up.

1999-09-23  Gerd Moellmann  <gerd@gnu.org>

	* window.c (enlarge_window): Add window parameter instead of using
	selected_window.
	(Fdisplay_buffer): Call it with window parameter instead of
	setting selected_window.
	(Fenlarge_window, Fshrink_window): Ditto.
	(shrink_mini_window): If there is no recorded height and position
	info, resize mini-window to height 1.

	* xfns.c (image_error): Use add_to_log.

	* xfaces.c (load_pixmap): Call add_to_log without frame parameter.
	(load_face_font_or_fontset, load_color)
	(merge_face_vector_with_property): Ditto.

	* dispextern.h: Add prototype for add_to_log.

	* xfaces.c (add_to_log): Move to xdisp.c.

	* xdisp.c (add_to_log): Moved from xfaces.c.  Remove frame
	parameter.

1999-09-23  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (XTread_socket) <MotionNotify>: Change #ifdef
	USE_X_TOOLKIT to #ifdef USE_TOOLKIT_SCROLL_BARS.

	* xdisp.c (resize_mini_window): Use grow_mini_window and
	shrink_mini_window.

	* window.c (window_min_size): Add parameter ignore_fixed_p.
	(change_window_height): Call window_min_size with new parameter.
	(shrink_window_lowest_first, save_restore_orig_size)
	(grow_mini_window, shrink_mini_window): New.
	(make_window, replace_window): Initialize orig_top and
	orig_height.
	(enlarge_window): Renamed from change_window_height.  Make it
	static.
	(Fdisplay_buffer, Fenlage_window, Fshrink_window): Call
	enlarge_window instead of change_window_height.

	* window.h (struct window): New members orig_top, orig_height.
	(toplevel): Add prototypes for grow_mini_window and
	shrink_mini_window.  Remove prototype for change_window_height.

1999-09-21  Eli Zaretskii  <eliz@gnu.org>

	* frame.c (frame_name_fnn_p): Fix previous change.

1999-09-20  Gerd Moellmann  <gerd@gnu.org>

	* minibuf.c (toplevel): Move include of stdio.h to other includes.

	* dispnew.c (direct_output_for_insert): Cast arguments to
	safe_bcopy to char *.

	* lread.c (readchar): Remove unused variables.
	(read_filtered_event, read1, Fmapatoms): Ditto.
	(toplevel): Include intervals.h.

	* eval.c (Fsignal): Remove unused variables.
	(Fcommandp, do_autoload): Ditto.

	* lisp.h: Add prototype for safe_bcopy, fatal.

	* editfns.c (init_editfns): Remove unused variables.
	(Fgoto_char, Fchar_after, Fformat): Ditto.
	(message_text, message_length): Put in #ifndef HAVE_MENUS.

	* data.c (find_symbol_value): Remove unused variables.
	(Faref, Fstring_to_number): Ditto.
	(toplevel): Include stdio.h.
	(Fnumber_to_string): Cast XINT to long for %ld.

	* casefiddle.c (casify_object): Remove unused variables.
	(casify_region): Ditto.

	* filelock.c (get_boot_time): Put local variable used in
	conditionally compiled section in #ifdef.
	(toplevel): Include stdio.h.

	* keymap.c (Flookup_key, Faccessible_keymaps, describe_vector)
	(keys_of_keymap, syms_of_keymap): Remove unused variables.

1999-09-20  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (sync_frame_with_window_matrix_rows): Disable frame rows
	whose corresponding window rows have been disabled in
	try_window_id.

1999-09-20  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (compute_window_start_on_continuation_line): Handle case
	that window start is out of range.
	(handle_display_prop, handle_single_display_prop): Replace
	marginal area specifications like `left-margin' with `(margin
	left-margin)'.
	(Qmargin): New.
	(syms_of_xdisp): Initialize Qmargin.

1999-09-19  Gerd Moellmann  <gerd@gnu.org>

	* syntax.c (update_syntax_table, find_defun_start, back_comment)
	(describe_syntax, skip_chars): Remove unused variables.
	(back_comment, forw_comment): Add braces to if-statement with
	if-else as dependent statement.

	* process.c (list_processes_1): Remove unused variables.
	(Fopen_network_stream, create_process): Add parentheses to
	conditional expressions.
	(create_process): Put declaration of sigchld in #if 0.
	(Fopen_network_stream): Removed unused variables.
	(Fopen_network_stream, wait_reading_process_input)
	(wait_reading_process_input, send_process, send_process): Ditto.
	(toplevel): Add prototypes for set_waiting_for_input and
	keyboard_bit_set.

	* abbrev.c (Fexpand_abbrev): Remove unused variables.

	* textprop.c (Fset_text_properties): Remove unused variables.
	(text_property_list, verify_interval_modification)
	(interval_has_all_properties): Ditto.

	* callproc.c (toplevel) [HAVE_UNISTD_H]: Include unistd.h.
	(Fcall_process): Remove unused variable.

	* keyboard.c (Frecursive_edit): Remove unused variable.
	(command_loop_1, safe_run_hooks, kbd_buffer_get_event)
	(timer_check, make_lispy_event, menu_bar_items)
	(menu_bar_one_keymap, menu_bar_item, parse_menu_item)
	(parse_tool_bar_item, read_char_x_menu_prompt, read_key_sequence)
	(kbd_buffer_get_event, make_lispy_event, read_char_x_menu_prompt)
	(read_key_sequence): Ditto.
	(Fread_key_sequence, Fread_key_sequence_vector, Fsuspend_emacs): Ditto.
	(read_key_sequence) [GOBBLE_FIRST_EVENT]: Put local variables only
	used when GOBBLE_FIRST_EVENT is defined in #ifdef.
	(Fexecute_extended_command): Cast XINT to long for %ld.
	(toplevel) [HAVE_UNISTD_H]: Include unistd.h.
	(toplevel): Include sys/types.h.

	* lisp.h (RETURN_UNGCPRO): Use do-while (0) idiom.
	(toplevel): Add prototypes for stuff_char, and
	code_convert_string_norecord.

1999-09-19  Gerd Moellmann  <gerd@gnu.org>

	* buffer.h: Add prototype for r_re_alloc.

	* insdel.c (copy_text): Removed unused variables.
	(count_combining_after, count_combining_after, insert_1_both)
	(insert_from_string_1, insert_from_buffer_1, check_markers): Ditto.
	(adjust_after_replace, replace_range): Add parentheses to logical
	expressions.  Remove unused variables.
	(CHECK_BYTE_COMBINING_FOR_INSERT): Add parentheses to logical
	expression.

	* alloc.c (Fgarbage_collect): Remove unused variable.
	(compact_strings): Add parentheses around assignments in
	conditional context.
	(toplevel): Put declaration of unused function clear_marks
	in #if 0 like its definition.

	* lisp.h: Add prototype for shrink_regexp_cache,
	sweep_weak_hash_tables.

1999-09-19  Dave Love  <fx@gnu.org>

	* process.c (Fopen_network_stream): Use strerror, not gai_strerror.

	* doc.c (read_bytecode_char): Declare arg.

	* lisp.h: Declare Fcurrent_message, Fmake_temp_name,
	read_bytecode_char, Fx_hide_busy_cursor, getloadavg.

1999-09-18  Richard Stallman  <rms@gnu.org>

	* xdisp.c (echo_area_display): Turn off code that returned
	without doing anything when using a terminal frame.

1999-09-17  Richard M. Stallman  <rms@gnu.org>

	* unexelf.c (unexec): Don't get confused by a short section
	just before the bss section.

1999-09-16  Gerd Moellmann  <gerd@gnu.org>

	* emacs.c (main): Remove unused variables.
	(sort_args, Fkill_emacs, Fkill_emacs): Ditto.

	* lisp.h: Add prototype for uninterrupt_malloc, memory_warnings,
	init_fileio_once, syms_of_sound, init_xfns, init_fns
	init_sound, check_message_stack.

	* emacs.c (toplevel) [HAVE_UNISTD_H]: Include unistd.h.

	* intervals.c (rotate_right, rotate_left): Add braces to avoid
	ambiguous else warning.
	(split_interval_left): Remove unused variables.
	(previous_interval, adjust_intervals_for_deletion)
	(set_point_both, set_point_both, set_intervals_multibyte_1): Ditto.
	(icount, idepth, zero_length): Move into #if 0 section below
	original position where these are used.

	* buffer.h [REL_ALLOC]: Add prototypes for r_alloc and r_alloc_free.

	* buffer.c (Fkill_buffer): Remove unused variables.
	(Fkill_buffer, overlays_at, overlays_in, recenter_overlay_lists)
	(fix_overlays_in_range, Fmove_overlay, Fprevious_overlay_change)
	(init_buffer_once, syms_of_buffer): Ditto.

	* xrdb.c (get_fallback): Remove unused variable.
	(x_load_resources): Ditto.  Put local variable used for Motif only
	in #ifdef USE_MOTIF.

1999-09-16  Gerd Moellmann  <gerd@gnu.org>

	* minibuf.c (read_minibuf): Remove unused variables.
	(read_minibuf, Fread_buffer, scmp, Fcompleting_read): Ditto.
	(do_completion): Move assignment out of conditional context.
	(Fdisplay_completion_list): Add parentheses to conditional expression.

	* cm.c (toplevel) [HAVE_TERMCAP_H]: Include termcap.h.

	* lisp.h: Add prototype for no_switch_window.

	* window.c (Fset_window_buffer): Remove unused variables.
	(Fset_window_margins): Ditto.

	* xdisp.c (resize_mini_window): Temporarily set the selected
	window's or Vminibuf_scroll_window's height to "fixed" around
	the call the change_window_height.

	* window.c (window_fixed_size_p): Check window's height_fixed_p
	flag.

	* window.h (struct window): New member height_fixed_p.

	* dispnew.c (direct_output_forward_char): Don't use this method
	if showing a message or a message was just cleared because we
	might need to resize the mini-window.

1999-09-16  Gerd Moellmann  <gerd@gnu.org>

	* frame.c (Fdelete_frame): Correct local variable pointing to
	selected frame after selecting new frame.

1999-09-15  Richard Stallman  <rms@gnu.org>

	* puresize.h (BASE_PURESIZE): Increase to 525000.

	* filelock.c (Vtemporary_file_directory): New variable.
	(syms_of_filelock): Set up Lisp variable.

1999-09-15  Gerd Moellmann  <gerd@gnu.org>

	* term.c (OUTPUT_IF, OUTPUT1_IF): Use do-while.
	(encode_terminal_code): Remove unused variables.
	(turn_off_face): Ditto.
	(toplevel): Include termcap.h if HAVE_TERMCAP_H.

	* dispnew.c (update_frame_line): If writing whole desired line,
	don't clear to end of line if already at the end.

1999-09-15  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (resize_mini_window): Don't report changed window
	height if it actually hasn't changed.

	* widget.c (set_frame_size, EmacsFrameSetCharSize): Remove
	unused variables.
	(mark_shell_size_user_specified): Put in #if 0 because not used.
	(create_frame_gcs): Put in #if 0 because currently unused.
	(first_frame_p): Ditto.

	* xmenu.c (single_menu_item, Fx_popup_menu, Fx_popup_menu)
	(single_submenu, update_frame_menubar, set_frame_menubar)
	(free_frame_menubar, xmenu_show, xdialog_show): Remove unused
	variables.

	* print.c (PRINTFULLP): Removed because it is no longer used and
	is misleading.
	(Ferror_message_string): Remove unused variables.
	(print_object): Cast argument of sprintf to long for `%ld'
	specifier.  Remove unused variable.

1999-09-14  Gerd Moellmann  <gerd@gnu.org>

	* sound.c (Fplay_sound): Remove unused variables.
	(be2hs): Put in #if 0 because it's currently not used.

1999-09-14  Ken Raeburn  <raeburn@gnu.org>

	* print.c (Ferror_message_string, print_error_message)
	(print_object): Use XCAR, XCDR and XFLOAT_DATA instead of explicit
	member access.

1999-09-14  Gerd Moellmann  <gerd@gnu.org>

	* frame.h (CHECK_FRAME, CHECK_LIVE_FRAME): Put code in do-while.

	* frame.c (Fnext_frame): Remove unused variable(s).
	(Fprevious_frame, Fmouse_pixel_position, frame_name_fnn_p): Ditto.
	(store_frame_param): Add parentheses to conditional expression.
	(Fmodify_frame_parameters): Remove unused variables.
	(Fmodify_frame_parameters, Fset_frame_size, Fset_frame_position):
	Ditto.

	* xfns.c (x_set_background_color): Remove unused variable(s).
	(x_set_border_pixel): Ditto.
	(x_set_menu_bar_lines): Put local variable used only for
	non-toolkit case in #ifdef/#endif.
	(x_figure_window_size): Remove unused variable(s).
	(x_figure_window_size, x_window, lookup_image)
	(xbm_read_bitmap_file_data, x_build_heuristic_mask, pbm_load)
	(png_load, jpeg_load, gif_load, x_create_tip_frame)
	(x_create_tip_frame, Fx_show_tip, x_set_border_pixel): Ditto.

	* xterm.c (x_scroll_bar_handle_click): Compile only if
	not USE_TOOLKIT_SCROLL_BARS.
	(x_scroll_bar_set_handle, x_scroll_bar_note_movement): Ditto.

	* dispextern.h: Add prototypes for gamma_correct and
	x_kill_gs_process.

	* xterm.c (x_produce_glyphs): Remove unused variable(s).
	(x_alloc_nearest_color_for_widget, note_tool_bar_highlight)
	(x_set_toolkit_scroll_bar_thumb): Ditto.
	(x_scroll_bar_create): Move local variable to the
	conditionally compiled section of code where it is used.
	(x_scroll_bar_create): Remove unused variable(s).
	(x_scroll_bar_remove, XTread_socket): Ditto.
	(XTread_socket) <ConfigureNotify>: Move variables used for
	non-toolkit case into conditionally compiled section of code.

	* window.h (freeze_window_starts): Fix typo in prototype.

	* xdisp.c (display_echo_area_1, try_window_id): Remove unused
	variable(s).

	* lisp.h: Add prototype for debug_print.

	* dispextern.h (xassert) [GLYPH_DEBUG]: Change definition
	to use do-while.

	* fns.c (SXHASH_COMBINE): Add missing parentheses.
	(Fchar_table_range, Fset_char_table_default, mapcar1)
	(Fyes_or_no_p, sweep_weak_hash_tables): Remove unused variable(s).

	* lisp.h: Add prototype for getloadavg.

1999-09-14  Andreas Schwab  <schwab@gnu.org>

	* process.c (Fopen_network_stream): Avoid socket descriptor leak.

	* lisp.h: Declare close_file_unwind.

1999-09-14  Richard Stallman  <rms@gnu.org>

	* filelock.c (get_boot_time): Make the temp name in the proper dir.

1999-09-13  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (redisplay_window): Make sure start_at_line_beg
	is always set correctly.

1999-09-13  Dave Love  <fx@gnu.org>

	* xdisp.c (move_it_in_display_line_to): Make type consistent with
	declaration.

1999-09-13  Gerd Moellmann  <gerd@delysid.gnu.org>

	* xdisp.c (QCfile): Move here from xfns.c.
	(syms_of_xdisp): Initialize it.
	(message2_nolog): Change for Lisp_Object selected_frame.
	(message3_nolog, message_with_string, message)
	(setup_echo_area_for_printing, truncate_echo_area)
	(prepare_menu_bars, redisplay_internal, Fdump_tool_bar_row): Ditto.

1999-09-13  Dave Love  <fx@gnu.org>

	* xterm.c: Don't continue #define args for benefit of old cc.
	(xt_action_hook): Indent #error for benefit of K&R cc.

1999-09-13  Gerd Moellmann  <gerd@delysid.gnu.org>

	* xterm.c (XTcursor_to): Change for Lisp_Object selected_frame.
	(x_clear_frame, XTring_bell, XTmouse_position, XTread_socket): Ditto.
	(XRINGBELL): Removed.

1999-09-13  Dave Love  <fx@gnu.org>

	* xfns.c (x_put_x_image): Make type consistent with declaration.

	* fns.c (Fmake_hash_table): Fix string continuation.

1999-09-13  Gerd Moellmann  <gerd@delysid.gnu.org>

	* xfns.c (QCfile): Moved to xdisp.c.
	(syms_of_xfns): Don't initialize QCfile.
	(check_x_frame): Change for Lisp_Object selected_frame.
	(check_x_display_info, x_get_resource_string): Ditto.

1999-09-13  Gerd Moellmann  <gerd@gnu.org>

	* minibuf.c (choose_minibuf_frame): Don't try to set the
	mini-buffer window's buffer, if the buffer is invalid.

	* xfns.c (QCfile): Moved to xdisp.c.
	(syms_of_xfns): Don't initialize QCfile.

	* xdisp.c (QCfile): Move here from xfns.c.
	(syms_of_xdisp): Initialize it.

	* lisp.h (selected_frame): Add external declaration.

	* xselect.c (x_own_selection): Change for Lisp_Object selected_frame.
	(Fx_store_cut_buffer_internal): Ditto.
	(Fx_rotate_cut_buffers_internal): Ditto.

	* xfaces.c (frame_or_selected_frame): Change for Lisp_Object
	selected_frame.
	(Finternal_set_lisp_face_attribute): Ditto.
	(Finternal_get_lisp_face_attribute): Ditto.
	(Finternal_lisp_face_empty_p): Ditto.
	(Fdump_face): Ditto.

	* term.c (OUTPUT): Change for Lisp_Object selected_frame.
	(OUTPUT_IF, ring_bell, set_terminal_modes, reset_terminal_modes)
	(set_terminal_window, set_scroll_region, reassert_line_highlight)
	(change_line_highlight, cursor_to, raw_cursor_to, clear_to_end)
	(clear_end_of_line, clear_end_of_line_raw, clear_end_of_line_raw)
	(encode_terminal_code, write_glyphs, term_init): Ditto.

	* sysdep.c (reset_sys_modes): Change for Lisp_Object selected_frame.
	(kbd_input_ast, read_input_waiting): Ditto.

	* minibuf.c (choose_minibuf_frame): Change for Lisp_Object
	selected_frame.
	(read_minibuf): Ditto.

	* keyboard.c (command_loop_1): Change for Lisp_Object selected_frame.
	(cmd_error_internal, command_loop_1, read_char)
	(kbd_buffer_get_event, read_avail_input)
	(read_char_minibuf_menu_prompt, read_key_sequence, Fsuspend_emacs)
	(interrupt_signal, quit_throw_to_read_char): Ditto.

	* fontset.c (Ffont_info): Change for Lisp_Object selected_frame.
	(Ffontset_info): DItto.

	* emacs.c (handle_USR1_signal): Change for Lisp_Object selected_frame.

	* dispnew.c (selected_frame): Make it a Lisp_Object.
	(adjust_frame_glyphs_initially): Change for Lisp_Object selected_frame.
	(direct_output_for_insert, direct_output_forward_char)
	(init_display): Ditto.

	* data.c (swap_in_symval_forwarding): Change for Lisp_Object
	selected_frame.
	(set_internal): Ditto.

	* buffer.c (Fother_buffer): Change for Lisp_Object selected_frame.
	(record_buffer): Ditto.

	* frame.c (Fmake_terminal_frame): Use SELECTED_FRAME.
	(do_switch_frame): Change for Lisp_Object selected_frame.
	(Fselected_frame): Ditto.
	(Fframe_first_window): Use SELECTED_FRAME.
	(Fframe_root_window): Change for Lisp_Object selected_frame.
	(Fframe_selected_window, Fset_frame_selected_window, Fnext_frame)
	(Fprevious_frame, other_visible_frames, Fdelete_frame)
	(Fmouse_position, Fmouse_pixel_position, Fmake_frame_visible)
	(Fmake_frame_invisible, Ficonify_frame, Fraise_frame, Flower_frame)
	(Fframe_parameters, Fmodify_frame_parameters, Fframe_char_height)
	(Fframe_char_width, Fframe_pixel_height, Fframe_pixel_width)
	(Fset_frame_height, Fset_frame_width): Ditto.

1999-09-13  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (message2_nolog): Change for Lisp_Object selected_frame.
	(message3_nolog, message_with_string, message)
	(setup_echo_area_for_printing, truncate_echo_area)
	(prepare_menu_bars, redisplay_internal, Fdump_tool_bar_row): Ditto.

	* xmenu.c (Fx_popup_menu): Change for Lisp_Object selected_frame.
	(Fx_popup_dialog): Ditto.

	* xfns.c (check_x_frame): Change for Lisp_Object selected_frame.
	(check_x_display_info, x_get_resource_string): Ditto.

	* xterm.c (XTcursor_to): Change for Lisp_Object selected_frame.
	(x_clear_frame, XTring_bell, XTmouse_position, XTread_socket): Ditto.
	(XRINGBELL): Removed.

	* window.c (Fminibuffer_window): Change for Lisp_Object
	selected_frame.
	(Fwindow_at, Fprevious_window, window_loop, select_window_1)
	(display_buffer_1, Fdisplay_buffer, temp_output_buffer_show)
	(Fcurrent_window_configuration, init_window_once): Ditto.

	* frame.h (SELECTED_FRAME): New.

1999-09-12  Ken Raeburn  <raeburn@gnu.org>

	* category.c (word_boundary_p): Use XCAR and XCDR.
	* ccl.c (ccl_driver, resolve_symbol_ccl_program)
	(Fregister_code_conversion_map): Likewise.
	* coding.c (setup_coding_system, detect_coding_system)
	(Ffind_operation_coding_system, Fset_coding_priority_internal):
	Likewise.
	* doc.c (get_doc_string, Fdocumentation)
	(store_function_docstring): Likewise.
	* editfns.c (save_restriction_restore): Likewise.
	* eval.c (Fcond, Fmacroexpand, Fcondition_case, wants_debugger)
	(skip_debugger, find_handler_clause, Fautoload, Fapply)
	(run_hook_with_args, run_hook_list_with_args, Ffetch_bytecode):
	Likewise.
	* fileio.c (Ffind_file_name_handler, Finsert_file_contents)
	(Fwrite_region, do_auto_save_unwind, Fdo_auto_save)
	(Fread_file_name): Likewise.
	* filelock.c (unlock_all_files): Likewise.
	* insdel.c (Fcombine_after_change_execute): Likewise.
	* intervals.c (adjust_intervals_for_insertion): Likewise.
	* keymap.c (get_keymap_1, Fkeymap_parent, Fset_keymap_parent)
	(Fset_keymap_parent, fix_submap_inheritance, access_keymap)
	(store_in_keymap, Fcopy_keymap, define_as_prefix)
	(current_minor_maps, Faccessible_keymaps)
	(accessible_keymaps_char_table, Fkey_description)
	(Fwhere_is_internal, where_is_internal_2, where_is_internal_1)
	(describe_buffer_bindings, describe_map_tree, shadow_lookup)
	(describe_map): Likewise.
	* lread.c (Fload, load_unwind, close_load_descs, read_vector)
	(read_list, init_lread): Likewise.
	* search.c (Fmatch_data): Likewise.
	* sunfns.c (Fsun_menu_internal): Likewise.
	* syntax.c (describe_syntax): Likewise.
	* undo.c (record_insert, record_delete, Fundo_boundary)
	(truncate_undo_list): Likewise.
	* vmsproc.c (child_sig): Likewise.

	* editfns.c (Fformat): Use XFLOAT_DATA.

1999-09-12  Gerd Moellmann  <gerd@gnu.org>

	* keyboard.c (command_loop_1): Resize mini-window to the
	exact size of a message displayed, if any.

	* xdisp.c (resize_mini_window): Add parameter exact_p.  Resize
	to exact size if exact_p is non-zero.
	(display_echo_area_1): Call resize_mini_window with
	new parameter.
	(redisplay_internal): Ditto.
	(resize_echo_area_axactly): New.

	* minibuf.c (read_minibuf_unwind): Call resize_mini_window with
	new parameter.

	* dispextern.h: Change prototype of resize_mini_window.
	Add prototype for resize_echo_area_axactly.

	* xfaces.c (Fx_family_fonts): Replaces Fx_font_list.
	(syms_of_xfaces): Defsubr accordingly.

	* xdisp.c (hscroll_window_tree): Choose cursor row from
	desired or current matrix.
	(redisplay_internal): Hscroll before updating.

1999-09-12  Gerd Moellmann  <gerd@gnu.org>

	* syntax.c (Fforward_word): Use prompt_end_charpos instead
	of minibuffer_prompt_length.

	* minibuf.c (read_minibuf): Use prompt_end_charpos instead
	of minibuffer_prompt_length.
	(read_minibuf_unwind): Ditto.
	(Fminibuffer_complete_and_exit): Ditto.
	(Fminibuffer_complete_word): Ditto.
	(Fminibuffer_prompt_end): Ditto.

	* editfns.c (Fbuffer_string): Use prompt_end_charpos instead
	of minibuffer_prompt_length.
	(Fline_beginning_position): Ditto.

	* buffer.c (Fget_buffer_create): Use prompt_end_charpos instead
	of minibuffer_prompt_length.
	(Fmake_indirect_buffer): Ditto.
	(Fkill_buffer): Ditto.
	(Ferase_buffer): Ditto.

	* buffer.h (prompt_end_charpos): Replaces
	minibuffer_prompt_length.

	* minibuf.c (read_minibuf): Return mini-buffer contents
	without the prompt.

	* editfns.c (make_buffer_string_both): Take out the code
	to handle mini-buffer prompts.
	(Fbuffer_string): Handle the prompt here, instead.

	* xfaces.c (lface_from_face_name): Resolve face aliases.
	(Qmode_line): Replaces Qmodeline.
	(realize_basic_faces): Use Qmode_line.
	(syms_of_xfaces): Initialize Qmode_line.

1999-09-12  Gerd Moellmann  <gerd@gnu.org>

	* minibuf.c (read_minibuf): Set minibuf_prompt_width to the
	current column after inserting prompt.
	(Fminibuffer_prompt_width): Return minibuf_prompt_width.

	* xfaces.c (Qframe_update_face_colors): New.
	(syms_of_xfaces): Initialize call.
	(update_face_from_frame_parameter): Call that function when
	the frame's background changes.

1999-09-12  Richard Stallman  <rms@gnu.org>

	* insdel.c (del_range_1): Don't treat minibuffer prompt specially.

1999-09-12  Ken Raeburn  <raeburn@gnu.org>

	* alloc.c (Fcons, pure_cons, Fpurecopy, Fgarbage_collect)
	(mark_object, mark_buffer): Use XCAR and XCDR.
	* bytecode.c (Fbyte_code): Likewise.
	* callint.c (Fcall_interactively, Fprefix_numeric_value):
	Likewise.
	* callproc.c (Fcall_process, Fcall_process_region, child_setup)
	(getenv_internal): Likewise.
	* dired.c (file_name_completion): Likewise.
	* fns.c (Fsafe_length, concat, Fcopy_alist, Fmember, Fmemq, Fassq)
	(assq_no_quit, Fassoc, Frassq, Frassoc, Fdelq, Fdelete, Freverse)
	(Fplist_get, Fplist_put, internal_equal, mapcar1): Likewise.
	* indent.c (Fcompute_motion): Likewise.
	* process.c (decode_status, Fprocess_status, Fprocess_exit_status)
	(list_processes_1, Fstart_process, Fopen_network_stream)
	(wait_reading_process_input, read_process_output_call)
	(kill_buffer_processes, sigchld_handler, exec_sentinel_unwind)
	(status_notify, wait_reading_process_input): Likewise.
	* textprop.c (PLIST_ELT_P, property_value, set_properties)
	(extend_property_ranges): Likewise.
	* w32faces.c (Fpixmap_spec_p, merge_face_list): Likewise.
	* w32fns.c (x_window_to_frame, x_set_frame_parameters)
	(x_report_frame_params, x_set_cursor_type, x_icon_type)
	(x_figure_window_size, Fx_create_frame, w32_load_system_font)
	(w32_load_font, enum_font_cb2, w32_list_bdf_fonts, w32_list_fonts)
	(w32_list_synthesized_fonts, w32_find_ccl_program, Fx_list_fonts)
	(Fw32_find_bdf_fonts, w32_find_bdf_fonts_in_dir)
	(x_display_info_for_name, Fx_display_list): Likewise.
	* w32menu.c (menubar_id_to_frame, single_keymap_panes)
	(Fx_popup_menu, Fx_popup_dialog): Likewise.
	* w32proc.c (Fw32_set_keyboard_layout): Likewise.
	* w32term.c (x_window_to_scroll_bar, w32_read_socket)
	(w32_term_init, x_delete_display): Likewise.
	* xfns.c (x_window_to_frame, x_any_window_to_frame)
	(x_non_menubar_window_to_frame, x_menubar_window_to_frame)
	(x_top_window_to_frame, x_set_frame_parameters)
	(x_report_frame_params, x_set_cursor_type, x_icon_type)
	(x_figure_window_size, Fx_create_frame, x_display_info_for_name)
	(Fx_display_list, x_create_tip_frame): Likewise.
	* xmenu.c (menubar_id_to_frame, single_keymap_panes)
	(Fx_popup_menu, Fx_popup_dialog): Likewise.
	* xselect.c (x_own_selection, x_get_local_selection)
	(x_handle_selection_request, x_handle_selection_clear)
	(x_clear_frame_selections, wait_for_property_change_unwind)
	(wait_for_property_change, x_handle_property_notify)
	(copy_multiple_data, x_get_foreign_selection)
	(lisp_data_to_selection_data, clean_local_selection_data)
	(x_handle_selection_notify, Fx_get_selection_internal)
	(x_disown_buffer_selections): Likewise.
	* xterm.c (x_window_to_scroll_bar, XTread_socket, x_list_fonts)
	(x_load_font, x_find_ccl_program, x_term_init, x_delete_display):
	Likewise.

	* alloc.c (make_float, make_pure_float, Fpurecopy): Use
	XFLOAT_DATA.
	* bytecode.c (Fbyte_code): Likewise.
	* floatfns.c (extract_float, Fexpt, Fabs, rounding_driver)
	(fmod_float): Likewise.

1999-09-11  Richard Stallman  <rms@gnu.org>

	* xdisp.c (run_window_scroll_functions): If hook functions switch
	buffers, switch back after.

1999-09-11  Ken Raeburn  <raeburn@gnu.org>

	* charset.h (GET_TRANSLATION_TABLE): Use XCDR.
	* frame.h (FOR_EACH_FRAME): Use XCAR and XCDR.
	(PIXEL_X_FROM_CANON_X, PIXEL_Y_FROM_CANON_Y): Use XFLOAT_DATA.
	* keyboard.h (EVENT_HEAD, EVENT_START, EVENT_END, POSN_WINDOW)
	(POSN_BUFFER_POSN, POSN_WINDOW_POSN, POSN_TIMESTAMP): Use XCAR and
	XCDR.
	* syntax.h (SYNTAX, SYNTAX_WITH_FLAGS, SYNTAX_MATCH): Use XCAR and
	XCDR.

1999-09-10  Richard Stallman  <rms@gnu.org>

	* xterm.c (XTread_socket): In XSetInputFocus, use RevertToParent,
	not RevertToPointerRoot.
	(XTset_vertical_scroll_bar) [!USE_TOOLKIT_SCROLL_BARS]:
	Fix the code to clear around the scroll bar.

1999-09-10  Keisuke Nishida  <kxn30@po.cwru.edu>

	* print.c: Support print-circle and related features.
	(Vprint_gensym_alist): Removed.
	(Vprint_circle, Vprint_continuous_numbering, print_number_index)
	(Vprint_number_table): New variables.
	(PRINT_NUMBER_OBJECT, PRINT_NUMBER_STATUS): New macros.
	(PRINTPREPARE, PRINTFINISH): Don't set Vprint_gensym_alist.
	(print, print_preprocess, print_preprocess_string, print_object):
	New/modified functions with print-circle feature.  Use
	Vprint_number_table instead of Vprint_gensym_alist for print-gensym.
	(syms_of_print): Defined new Lisp variables `print-circle',
	`print-continuous-numbering', `print-number-table'.

1999-09-10  Gerd Moellmann  <gerd@gnu.org>

	* xfns.c (x_build_heuristic_mask): Accept a list `(R G B)'
	as background color specification instead of an integer.
	(image-cache-eviction-delay): Replaces image-eviction-seconds.
	(Vimage_cache_eviction_delay): Replaces Vimage_eviction_seconds.
	(clear_image_cache, syms_of_xfns): Use it.
	(Qpostscript): Replaces Qghostscript.
	(gs_type): Use it.
	(gs_image_p): Ditto.
	(syms_of_xfns): Initialize Qpostscript.

1999-09-10  Richard Stallman  <rms@gnu.org>

	* buffer.c (Ferase_buffer): Don't erase the minibuffer prompt.

1999-09-09  Richard Stallman  <rms@gnu.org>

	* editfns.c (Fline_beginning_position): Handle minibuffer prompt here.

	* cmds.c (Fbeginning_of_line): Don't handle minibuffer prompt here.

1999-09-09  Gerd Moellmann  <gerd@gnu.org>

	* fns.c (Fmakehash): Accept just one optional argument TEST.

	* xfns.c (QCindex): New.
	(syms_of_xfns): Initialize QCindex.
	(gif_load): Use it instead of `:image'.

1999-09-09  Richard Stallman  <rms@gnu.org>

	* fileio.c (Fwrite_region): Finish renaming CONFIRM to MUSTBENEW.
	(Fwrite_region) [DOS_NT]: Handle `excl' here too.

1999-09-08  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (Qwhen): Replaces QCwhen.
	(syms_of_xdisp): Initialized it instead of QCwhen.
	(handle_single_display_prop): Use it instead of QCwhen.

1999-09-08  Ken'ichi Handa  <handa@gnu.org>

	* charset.c (translate_char): Reset MSBs of arguments of
	MAKE_CHAR.
	(CHAR_COMPONENTS_VALID_P): Fix for ASCII.

1999-09-08  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	* editfns.c (Fbufsize): Accept an extra BUFFER parameter.

	* fns.c (Fbase64_decode_region): Don't place point outside of the
	current accessible portion.

1999-09-07  Richard Stallman  <rms@gnu.org>

	* keymap.c (fix_submap_inheritance): Do nothing if the proper
	parent is an ancestor of SUBMAP; otherwise, add it as the
	ultimate ancestor.

1999-09-07  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (handle_single_display_prop): Change conditional
	display property to `:when FORM . VALUE'.

1999-09-07  Richard Stallman  <rms@gnu.org>

	* fileio.c (Fwrite_region): Doc fix.

1999-09-07  Stefan Monnier  <monnier@cs.yale.edu>

	* fileio.c (Qexcl): New variable.
	(report_file_error): Handle EEXIST specially.
	(Fwrite_region): Special handling for CONFIRM = `excl'.
	(syms_of_fileio): Initialize Qexcl.

1999-09-07  Gerd Moellmann  <gerd@gnu.org>

	* xfns.c (x_set_foreground_color): Call
	update_face_from_frame_parameter.
	(x_set_background_color): Ditto.
	(x_set_mouse_color): Ditto.
	(x_set_cursor_color): Ditto.
	(x_set_border_color): Ditto.
	(x_set_scroll_bar_foreground): Ditto.
	(x_set_scroll_bar_background): Ditto.

	* xfaces.c (recompute_basic_faces): Clear face cache.
	(Finternal_set_lisp_face_attribute): Modify frame parameters
	if attributes of certain faces are changed.
	(update_face_from_frame_parameter): New.

	* xfaces.c (realize_basic_faces): Realize new basic faces.

	* dispextern.h (SCROLL_BAR_FACE_ID, BORDER_FACE_ID)
	(CURSOR_FACE_ID, MOUSE_FACE_ID): New.

	* xfaces.c (Qscroll_bar, Qcursor, Qborder, Qmouse): New.
	(syms_of_xfaces): Initialize new symbols.

	* fns.c (Fmakehash): Take one argument, test, make all the
	rest keyword arguments.

	* window.c (Fset_window_margins): Make window the first argument.
	(set_window_buffer): Call Fset_window_margins with window as first
	argument.

1999-09-07  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (Qfringe): Replaces Qmargin.

1999-09-07  Kenichi Handa  <handa@etl.go.jp>

	* charset.h: Lots of comments fixed.
	(PARSE_MULTIBYTE_SEQ): Make it work also for ASCII string.
	(STRING_CHAR_AND_CHAR_LENGTH): This macro removed.

	* charset.c : Lots of comments fixed.
	(SPLIT_MULTIBYTE_SEQ): Make it work also for ASCII string.
	(CHAR_COMPONENTS_VALID_P): Name changed from
	CHAR_COMPONENT_VALID_P.  Caller changed.

1999-09-06  Richard Stallman  <rms@gnu.org>

	* insdel.c (syms_of_insdel): Define Lisp variable
	inhibit-modification-hooks.

1999-09-06  Michael Sperber [Mr. Preprocessor]  <sperber@informatik.uni-tuebingen.de>

	* s/aix4-2.h (ALIGN_DATA_RELOC): Undefined to support new
	unexaix.c.

	* s/aix3-1.h (ALIGN_DATA_RELOC): Defined to support new unexaix.c.

1999-09-06  Dave Love  <fx@gnu.org>

	* unexaix.c: New version incorporating Michael Sperber's changes
	from XEmacs.  Should solve problems on AIX 4.3.

	* lread.c (Vbyte_boolean_vars): New variable.
	(defvar_bool, syms_of_lread): Use it.

1999-09-05  Richard Stallman  <rms@gnu.org>

	* minibuf.c (read_minibuf): Put all three properties on the
	same range, the whole prompt.

1999-09-05  Gerd Moellmann  <gerd@gnu.org>

	* sound.c (Qplay_sound_functions): Replaces Qplay_sound_hook.
	(Fplay_sound, syms_of_sound): Use it.
	(parse_sound): Allow float volume values in the range [0, 1].
	(Fplay_sound): Ditto.

	* window.c (Fset_window_vscroll): Make window the first argument,
	amount to scroll the second.  Take non-negative vscroll as
	argument.
	(Fwindow_vscroll): Return non-negative vscroll.

	* xfns.c (Fx_show_tip): Improve documentation.

1999-09-05  Gerd Moellmann  <gerd@gnu.org>

	* buffer.c, buffer.h, dispextern.h, dispnew.c, keyboard.c,
	window.c, xdisp.c, xfaces.c, xterm.c, keyboard.h: Change
	`top-line' and `top_line' to `header-line' and `header_line'.
	Likewise for similar spellings.

1999-09-05  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (row_containing_pos): New.
	(try_window_id): Use it.

	* alloc.c, dispextern.h, dispnew.c, frame.c, frame.h, keyboard.c,
	lisp.h, termhooks.h, window.c xdisp.c, xfaces.c, xfns.c, xterm.c:
	Change spelling of `toolbar' to `tool_bar' or `tool-bar'.
	Likewise for upper-case etc.

1999-09-05  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (XTset_vertical_scroll_bar) [!USE_TOOLKIT_SCROLL_BARS]:
	Fix reference to renamed variable.

1999-09-04  Gerd Moellmann  <gerd@gnu.org>

	* window.c (Qwindow_size_fixed): Replaces Qfixed_window_size.
	(window_fixed_size_p): Use Qwindow_size_fixed instead of
	Qfixed_window_size.
	(syms_of_window): Ditto.

	* fns.c (Fmakehash): Exchange optional test and size arguments.

1999-09-03  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (XTset_vertical_scroll_bar): Block input when clearing
	under newly created scroll bar.
	(expose_window): If window is not yet fully initialized, do
	nothing.  This can happen when toolkit scroll bars are used and a
	window is split.  Reconfiguring the scroll bars will generate an
	expose for a newly created window.

	* frame.h (struct frame): New member `gamma'.

	* xfns.c: Include math.h.  Add extern declaration for atof in case
	we don't see one.
	(Qscreen_gamma): New.
	(struct x_frame_parm_table): Add prototypes, add
	x_set_screen_gamma.
	(gamma_correct): New function.
	(defined_color): Call it.
	(x_set_screen_gamma): New.
	(x_set_title): Add parameter old_value.
	(RES_TYPE_FLOAT): New.
	(x_get_arg): Handle RES_TYPE_FLOAT.
	(Fx_create_frame): Call x_default_parameter for `screen-gamma'.
	(lookup_pixel_color): Change call to x_alloc_nearest_color to
	new prototype.
	(lookup_rgb_color): Ditto.
	(syms_of_xfns): Initialize Qscreen_gamma.

	* xterm.c (x_alloc_nearest_color_for_widget) [USE_X_TOOLKIT]:
	New.  Allocate color for lwlib widgets.
	(x_alloc_nearest_color): Change parameter list include the
	frame on which to allocate colors.  Gamma-correct colors.
	(x_alloc_lighter_color): Call x_alloc_lighter_color with new
	parameter list.

	* xterm.h: Change prototype of x_alloc_nearest_color.

1999-09-03  Richard Stallman  <rms@gnu.org>

	* callproc.c: Delete the system-independent include of stdlib.h.
	(leaving only the one in the WINDOWSNT conditional).

1999-09-03  Andrew Choi  <choi@cs.hku.hk>

	* callproc.c (call-process) [macintosh]: Call mac_run_command in
	sysdep.c.  The Mac code is modeled after the DOS code.

	* dispextern.h [macintosh]: Include macterm.h to define substitute X
	Window types and macros.

	* frame.h: Do nothing if included a second time.
	(enum output_method): Add mac_output frame type.
	(union output_data): Add new alternative `mac'.
	(FRAME_MAC_P): New macro.

	* frame.c (Fframep) [macintosh]: Handle mac frame type.
	(syms_of_frame_1): Initialize Qmac.
	(make_terminal_frame) [macintosh]: Initialize output_data.mac fields.
	(Fmake_terminal_frame) [macintosh]: Add an alternate error check.
	(Fmodify_frame_parameters) [macintosh]:
	Call mac_set_frame_parameter in macterm.c.

	* keyboard.c [macintosh]: Set KBD_BUFFER_SIZE to a smaller value (512)
	because Mac compilers limit local data of a function to 32K.

	* make-docfiles.c: Correctly handle input files with Mac-style eol's.

	* sysdep.c: Define numerous routines to emulate Unix system calls.

	* xfaces.c: On MacOS, define the set of colors listed in rgb.txt
	file of an X Window environment.

	* xfaces.c: On MacOS, define the Lisp functions x-display-color-p,
	x-display-grayscale, x-color-defined-p, and x-color-values.

	* sysdep.c [macintosh] (stat, fstat, mkdir, rmdir, utime, access)
	(open, creat, unlink, read, write, rename, fopen, pause, alarm)
	(signal, sleep, gmtime, localtime, ctime, time, index, mktemp)
	(getpwuid, getpwnam, dup, dup2, isatty, getgid, getegid, getuid)
	(geteuid, getpid, getenv, uname, opendir, closedir, readdir, getwd.):
	New functions, replacing POSIX features.

	* sysdep.c [macintosh] (Mac2UnixPathname, Unix2MacPathname, CheckAlarm)
	(InitMyPasswd, GetTempDirName, mystrchr, mystrtok, mystrcpy):
	(InitEmacsPasswdDir, run_mac_command): New subroutines.

	* sysdep.c [macintosh] (targetTicks, alarm_signal_func, myPasswdName)
	(myPasswd, emacsPasswdDir, emacsPasswd, myPasswdInited, mask)
	(myPasswdDir, TempDirName, sys_siglist): New variables.

	* sysdep.c [macintosh] (execvp, wait, croak, fork, kill, sigsetmask)
	(sigblock, request_sigio, unrequest_sigio, setpgrp, pipe, symlink)
	(link, lstat, readlink, umask, chmod, sbrk, fsync, ioctl):
	Define empty stubs so Emacs will link.

1999-09-03  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c: Use XCAR and XCDR instead of XCONS.

	* window.h: New member frozen_window_start_p.

	* window.c (foreach_window, foreach_window_1): New.
	(freeze_window_start, freeze_window_starts): New.
	(make_window): Initialize frozen_window_start_p.
	(replace_window): Ditto.
	(Fset_window_point): Remove references to deleted variables.
	(Fset_window_start): Ditto.

	* xdisp.c (Vresize_mini_config, resize_mini_frame)
	(resize_mini_initial_height): Removed.
	(syms_of_xdisp): Remove references to these variables.
	(resize_mini_window): Don't save window configuration, freeze
	window starts instead.  Enlarge window until displaying an empty
	buffer, then shrink it.  Make the function externally visible.
	(redisplay_window): Treat frozen window start like forced start,
	but accept point outside of the window.

	* dispextern.h: Add function prototype for resize_mini_window.

	* minibuf.c (read_minibuf_unwind): Resize mini-window when
	reaching minibuf_level 0.

	* lisp.h: Remove extern declarations for variables deleted from
	xdisp.c.

	* dispnew.c (adjust_frame_glyphs): Remove reference to
	Vresize_mini_config.

1999-09-03  Gerd Moellmann  <gerd@gnu.org>

	* xfns.c (x_set_scroll_bar_width): Change conditional compilation
	to USE_TOOLKIT_SCROLL_BARS.

	* xterm.c (x_scroll_bar_create): Don't clear under scroll bar
	here.
	(XTset_vertical_scroll_bar): Clarify position computations.  Clear
	under newly created scroll bar.  Put toolkit scroll bars in the
	middle of the area reserved for the scroll bar.

1999-09-03  Kenichi Handa  <handa@etl.go.jp>

	The following changes are for the new handling of multibyte
	sequence.  Now, except for a composite character, no multibyte
	character in string/buffer has trailing garbage bytes.  For
	instance, the length of string "\201\300\300" is now 2, the first
	character is Latin-1 A-grave, the second is raw \300.

	* charset.h (MAKE_NON_ASCII_CHAR): Handle the case that C1 or C2
	are negative.
	(MAKE_CHAR): Don't set MSBs of C1 and C2 to 0.
	(VALID_MULTIBYTE_CHAR_P): This macro deleted.
	(PARSE_COMPOSITE_SEQ): New macro.
	(PARSE_CHARACTER_SEQ): New macro.
	(PARSE_MULTIBYTE_SEQ): New macro.
	(CHAR_PRINTABLE_P): New macro.
	(STRING_CHAR): Adjusted for the change of string_to_non_ascii_char.
	(STRING_CHAR_AND_LENGTH): Likewise.
	(STRING_CHAR_AND_CHAR_LENGTH): Define it as STRING_CHAR_AND_LENGTH.
	(INC_POS): Use the macro PARSE_MULTIBYTE_SEQ.
	(DEC_POS, BUF_INC_POS, BUF_DEC_POS): Likewise,

	* charset.c (SPLIT_COMPOSITE_SEQ): New macro.
	(SPLIT_CHARACTER_SEQ): New macro.
	(SPLIT_MULTIBYTE_SEQ): New macro.
	(CHAR_COMPONENT_VALID_P): New macro.
	(non_ascii_char_to_string): Generate a multibyte sequence as far
	as possible.
	(string_to_non_ascii_char): The 4th arg exclude_tail_garbage is
	deleted.  Caller changed.  Use the macro SPLIT_MULTIBYTE_SEQ.
	(split_non_ascii_string): Likewise.
	(multibyte_form_length): Use the macro PARSE_MULTIBYTE_SEQ.
	(char_printable_p): New function.
	(translate_char): Check character by NATNUMP instead of INTEGERP.
	(unibyte_char_to_multibyte): Call char_valid_p instead of
	VALID_MULTIBYTE_CHAR_P.
	(Fmake_char_internal): Check the arguments more rigidly.
	(Fcharset_after): Use the macro SPLIT_MULTIBYTE_SEQ.
	(char_valid_p): Check the validity by CHAR_COMPONENT_VALID_P.
	(Fmultibyte_char_to_unibyte): Check the validity of character by
	CHAR_VALID_P.
	(chars_in_text): Call multibyte_chars_in_text.
	(multibyte_chars_in_text): Use the macro PARSE_MULTIBYTE_SEQ.
	(Fcompose_string): Use the macro STRING_CHAR_AND_LENGTH instead of
	STRING_CHAR_AND_CHAR_LENGTH (which is obsolete now).

	* data.c (Faset): Adjust the way to check byte-combining
	possibility for the new handling of multibyte sequence.

	* editfns.c (Fsubst_char_in_region): Likewise.

	* fns.c (count_combining): Use the macro PARSE_MULTIBYTE_SEQ.
	(string_char_to_byte): Likewise.
	(string_byte_to_char): Likewise.

	* indent.c (MULTIBYTE_BYTES_WIDTH): Delete the 2nd arg C.  Use the
	macro STRING_CHAR_AND_LENGTH.  Caller changed.

	* insdel.c (count_combining_composition): New function.
	(count_combining_before): Adjust the way to check byte-combining
	possibility for the new handling of multibyte sequence.  Call
	count_combining_composition for a composite character.
	(count_combining_after): Likewise.

	* print.c (print_string): Use the macro STRING_CHAR_AND_LENGTH.
	(print): Likewise.

	* dispextern.h (struct it): Change the size of the member
	`ctl_chars'.

	* xdisp.c (get_next_display_element): Display incomplete multibyte
	sequence (e.g. \222\300) by octal form.

1999-09-02  Gerd Moellmann  <gerd@gnu.org>

	* xterm.h (VERTICAL_SCROLL_BAR_WIDTH_TRIM): Change from 2 to 0.

	* fns.c (Fhash_table_weakness): Replaces Fhash_table_weak.
	(cmpfn_eql, sxhash): Use XFLOAT_DATA.

1999-09-02  Gerd Moellmann  <gerd@gnu.org>

	* buffer.c (set_buffer_internal): Never set
	windows_or_buffers_changed.

	* xdisp.c (try_window_id): Reset first_unchanged_at_end_row
	if we have displayed to the bottom of the window.

	* syntax.c (Fforward_word): Stop at a mini-buffer prompt end
	in both directions.  Extend documentation.

1999-09-01  Gerd Moellmann  <gerd@gnu.org>

	* minibuf.c (read_minibuf): Flush display after setting cursor to
	column 0.

1999-08-31  Gerd Moellmann  <gerd@gnu.org>

	* s/freebsd.h (__FreeBSD_version): Don't define it if it is
	already defined.  This avoids a warning from buffer.c.

1999-08-30  Gerd Moellmann  <gerd@gnu.org>

	* xterm.h (FRAME_X_FLAGS_AREA_COLS): Define it as the total width
	of both margins.
	(FRAME_X_FLAGS_AREA_WIDTH): Likewise.
	(FRAME_X_LEFT_FLAGS_AREA_WIDTH): New.
	(FRAME_X_RIGHT_FLAGS_AREA_WIDTH): New.

	* frame.h (FRAME_WINDOW_WIDTH_ARG): Add in FRAME_FLAGS_AREA_COLS
	once instead of twice.
	(FRAME_LEFT_FLAGS_AREA_WIDTH): New.

	* xterm.c: Remove unused bitmaps.
	(continued_bits, continuation_bits, overlay_bits): Change images.
	(x_draw_vertical_border): Use FRAME_X_RIGHT_FLAGS_AREA_WIDTH
	instead of FRAME_X_FLAGS_AREA_WIDTH.
	(x_after_update_window_line): Ditto.
	(x_draw_bitmap): Likewise.
	(x_draw_row_bitmaps): Likewise.
	(x_draw_glyph_string_box): Likewise.
	(x_draw_glyphs): Likewise.
	(x_scroll_run): Likewise.
	(expose_window_tree): Likewise.
	(note_mode_line_highlight): Likewise.
	(XTset_vertical_scroll_bar): Likewise.
	(x_clip_to_row): Likewise.
	(x_set_window_size): Likewise.

	* xfns.c (x_figure_window_size): Use FRAME_FLAGS_AREA_COLS instead
	of 2 * that value.

	* xdisp.c (window_box_width): Use FRAME_FLAGS_AREA_COLS instead of
	2 * that value.
	(window_box_left): Use FRAME_LEFT_FLAGS_AREA_WIDTH instead of
	FRAME_FLAGS_AREA_WIDTH.

	* window.c (coordinates_in_window): Use
	FRAME_LEFT_FLAGS_AREA_WIDTH instead of FRAME_FLAGS_AREA_WIDTH.
	(window_internal_width): Subtract FRAME_FLAGS_AREA_WIDTH once
	instead of twice.

	* widget.c (set_frame_size): Set flags_area_extra to
	FRAME_FLAGS_AREA_WIDTH instead of 2 * that width.
	(EmacsFrameSetCharSize): Ditto.

	* dispnew.c (mode_line_string): Add FRAME_LEFT_FLAGS_AREA_WIDTH
	instead of FRAME_FLAGS_AREA_WIDTH.

	* dispextern.h (WINDOW_DISPLAY_PIXEL_WIDTH): Subtract
	FRAME_FLAGS_AREA_COLS once.
	(WINDOW_DISPLAY_LEFT_EDGE_PIXEL_X): Add
	FRAME_LEFT_FLAGS_AREA_WIDTH instead of FRAME_FLAGS_AREA_WIDTH.

1999-08-30  Gerd Moellmann  <gerd@gnu.org>

	* freebsd.h (C_SWITCH_SYSTEM): Added to let configure find headers
	in /usr/X11R6/include which are checked for with AC_CHECK_HEADER.

1999-08-30  Gerd Moellmann  <gerd@gnu.org>

	* fns.c (QCweakness): Replaces QCweak.
	(Fmake_hash_table): Ditto.
	(Fmakehash): Ditto.
	(syms_of_fns): Ditto.

1999-08-29  Richard Stallman  <rms@gnu.org>

	* search.c (compile_pattern_1): Enable RE_CHAR_CLASSES for regexp.

	* sysdep.c (read_input_waiting): Pass read_socket_hook just 4 args.

	* syntax.h (SYNTAX_COMMENT_NESTED, SYNTAX_FLAGS_COMMENT_NESTED):
	Add support for nested comments.

	* syntax.c (Fforward_comment, scan_lists, scan_sexps_forward):
	Consolidate the forward comment code into the new `forw_comment'.
	(forw_comment): New subroutine.  Added support for nested comments.
	(lisp_parse_state, back_comment, Fmodify_syntax_entry)
	(Fparse_partial_sexp): Add support for nested comments.

1999-08-28  Ken Raeburn  <raeburn@gnu.org>

	* lisp.h (struct Lisp_Cons, XCAR, XCDR, struct Lisp_Float): Change
	names of structure elements if HIDE_LISP_IMPLEMENTATION is
	defined, to help detect code that uses knowledge of the Lisp
	internals that it shouldn't have.
	(XFLOAT_DATA): New macro.

1999-08-25  Gerd Moellmann  <gerd@gnu.org>

	* syntax.c (Fforward_word): If in a mini-buffer and moving
	backwards, stop in front of the prompt to prevent accidentally
	moving into the read-only prompt.

	* window.c (Frecenter): Clear frame if called with nil or no arg.

	* xdisp.c (resize_mini_window): Don't resize if
	Vmax_mini_window_height is nil.  Otherwise, use a default if
	Vmax_mini_window_height is not ot a number.
	(syms_of_xdisp): Extend documentation of Vmax_mini_window_height.

1999-08-25  Alexandre Oliva  <oliva@dcc.unicamp.br>

	* unexelf.c: Merge IRIX debugging info patch from unexsgi.c.
	* m/iris4d.h: Use unexelf for IRIX 5.*.
	* m/iris5d.h: Use unexelf for IRIX 6.*.
	* unexsgi.c: Deleted.

	* unexelf.c: Auto-detect .sbss section.
	(round_up): Make it static.
	(unexec): Declare alignment as Elf Word.  Skip ``Program
	segment above .bss'' test on MIPS without .sbss.
	Copy sections .got and .sdata1 sections.  Adjust offsets in
	sections .sdata, .lit4, .lit8, .got and .sdata1.

1999-08-25  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (try_window_id): Remove typo.

1999-08-24  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (try_window_id): Recognize case that PT == ZV and in
	unchanged text at the bottom when computing the cursor position.
	(message3_nolog): Raise frame only if minibuffer_auto_raise is
	set.

	* lisp.h (PVEC_TYPE_MASK): Add the bit for hash tables.

1999-08-24  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (Qmargin): Replacement for Qbitmap_area.
	(realize_basic_faces): Replace Qmargin for Qbitmap_area.
	(syms_of_xfaces): Ditto.

	* window.c (Fset_window_point): Reset Vresize_mini_config.
	(Fset_window_start): Ditto.
	(set_window_buffer): Ditto.

	* dispnew.c (adjust_frame_glyphs): Reset Vresize_mini_config.

	* xdisp.c (redisplay_window): Don't ever test just_this_one_p
	before calling try_window.
	(echo_area_display): If height has changed, update other windows.
	(resize_mini_frame, resize_mini_initial_height): New.
	(resize_mini_window): Save/restore window configuration
	differently.

	* lisp.h (Vresize_mini_config, resize_mini_frame)
	(resize_mini_initial_height): Add extern declarations.

	* xterm.c (expose_window_tree): Fix typo CANON_Y_UNIT to
	CANON_X_UNIT.

	* xfns.c [HAVE_JPEG]: Work around a warning about HAVE_STDLIB_H
	being redefined in jconfig.h.

1999-08-23  Ken'ichi Handa  <handa@gnu.org>

	* coding.h: Include "ccl.h" instead of "../src/ccl.h".

1999-08-22  Gerd Moellmann  <gerd@gnu.org>

	* alloc.c (mark_glyph_matrix): Mark strings only.

	* xdisp.c (redisplay_internal): Clear garbaged frames after
	resizing mini-window.

1999-08-22  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (unwind_with_echo_area_buffer): Use
	set_buffer_internal_1 instead of set_buffer_internal.
	(with_echo_area_buffer): Ditto.

	* buffer.c (set_buffer_internal): Set windows_or_buffers_changed
	only if buffer is displayed somewhere.

	* buffer.h (BUF_COMPUTE_UNCHANGED): New.

	* insdel.c (gap_left): Use BUF_COMPUTE_UNCHANGED.
	(gap_right): Ditto.
	(modify_region): Ditto.

	* buffer.c (modify_overlay): Use BUF_COMPUTE_UNCHANGED.

	* xdisp.c (Vresize_mini_config): New.
	(resize_mini_window): Use it to save restore original window
	configuration.
	(syms_of_xdisp): Initialize it.

	* buffer.h (struct buffer): Add prevent_redisplay_optimizations_p.

	* dispextern.h (struct glyph_matrix): Add buffer, begv, and zv.

	* xdisp.c (reconsider_clip_changes): New.
	(redisplay_internal, redisplay_window): Call it.
	(mark_window_display_accurate, redisplay_internal): Set current
	matrix' buffer, begv, zv.

	* window.c (Fset_window_hscroll): Set
	prevent_redisplay_optimizations_p instead of clip_changed.
	(Fset_window_hscroll): Ditto.
	(temp_output_buffer_show): Ditto.
	(Fset_window_vscroll): Ditto.

	* buffer.c (reset_buffer): Set clip_changed to 0 and
	prevent_redisplay_optimizations_p to 1.
	(Fget_buffer_create): Set prevent_redisplay_optimizations_p to 1.

	* buffer.h (BUF_UNCHANGED_MODIFIED, UNCHANGED_MODIFIED)
	(BUF_OVERLAY_UNCHANGED_MODIFIED, OVERLAY_UNCHANGED_MODIFIED)
	(BUF_BEG_UNCHANGED, BEG_UNCHANGED, BUF_END_UNCHANGED)
	(END_UNCHANGED): New.
	(struct buffer_text): Add beg_unchanged, end_unchanged,
	unchanged_modified, overlay_unchanged_modified.

	* window.h (beg_unchanged, end_unchanged, unchanged_modified)
	(overlay_unchanged_modified): Removed.
	(with_echo_area_unwind_data): Don't save beg/end_unchanged.
	(unwind_with_echo_area_buffer): Don't restore them.
	(debug_beg_unchanged, debug_end_unchanged) [GLYPH_DEBUG]: Removed.
	(text_outside_line_unchanged_p, redisplay_internal)
	(try_scrolling): Use/set buffer-specific beg/end_unchanged.
	(redisplay_window): Let try_window_id be called if more than one
	window is displayed.  Use/set buffer-specific beg/end_unchanged.
	(get_last_unchanged_at_beg_row, get_first_unchanged_at_end_row)
	(try_window_id):
	Use buffer-specific beg/end_unchanged.

	* window.h (beg_unchanged, end_unchanged, unchanged_modified)
	(overlay_unchanged_modified): Remove extern declarations.

	* keyboard.c (command_loop_1): Set beg/end_unchanged per buffer.

	* insdel.c (gap_left): Compute beg/end_unchanged per buffer.
	(gap_right): Ditto.
	(adjust_after_replace): Likewise.
	(replace_range, del_range_2, modify_region): Likewise.

	* dispnew.c (direct_output_for_insert): Set beg_unchanged
	and unchanged_modified per buffer.

	* coding.c (code_convert_region): Compute beg/end_unchanged per
	buffer.

	* buffer.c (modify_overlay): Compute beg/end_unchanged
	per buffer.
	(Fget_buffer_create): Initialize new members of the buffer
	structure.

1999-08-22  Gerd Moellmann  <gerd@gnu.org>

	* lisp.h: Add prototype for copy_hash_table and Fcopy_hash_table.

	* fns.c (Qkey, Qvalue): Renamed from Qkey_weak, and Qvalue_weak.
	(Qkey_value_weak): Removed.
	(make_hash_table): Use nil, `key', `value', t for weakness.
	(Fmake_hash_table): Ditto.
	(copy_hash_table): New.
	(Fcopy_hash_table): New.

1999-08-22  Gerd Moellmann  <gerd@gnu.org>

	* xfns.c: Call change_frame_size and do_pending_window_change with
	new parameter.

1999-08-21  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (resize_mini_window): Do it for truncate-lines t as
	well.
	(redisplay_internal): Resize mini-window only if text might
	have changed.
	(display_echo_area): Reset displayed echo_area_buffer to nil
	at the end if we're displaying a nil message.

1999-08-21  Gerd Moellmann  <gerd@gnu.org>

	* fns.c (hash_lookup): Test with EQ before calling key comparison
	function.
	(hash_remove): Ditto.
	(cmpfn_eq): Removed.
	(cmpfn_eql): Don't test with EQ.
	(cmpfn_equal): Ditto.
	(make_hash_table): Set comparison function for `eq' to null.

	* buffer.c, cmds.c, editfns.c, indent.c, insdel.c, buffer.h:
	Remove conditional compilation on NO_PROMPT_IN_BUFFER.

	* dispextern.h (NO_PROMPT_IN_BUFFER): Removed.

	* window.c, widget.c, process.c, keyboard.c, frame.c, xdisp.c,
	xterm.c: Call change_frame_size and do_pending_window_change with
	new parameter.

	* dispnew.c (do_pending_window_change): Add parameter `safe'.
	(change_frame_size): Ditto.
	(change_frame_size_1): Ditto.  Delay size changes if redisplaying
	and not called from a safe place.
	(window_change_signal): Call change_frame_size with new parameter.

	* dispextern.h: Change prototypes for do_pending_window_change
	and change_frame_size.

	* xfaces.c (face_at_buffer_position): Don't xassert that
	window's buffers equals current_buffer; this is not the
	case during echo area display.

1999-08-21  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c, minibuf.c: Remove conditional compilation on
	NO_PROMPT_IN_BUFFER.

	* minibuf.c (Fminibuffer_prompt_end): New.
	(syms_of_minibuf): Defsubr it.  Remove
	minibuffer-prompt-in-buffer.
	(Fminibuffer_prompt_width): Return 0 if not in mini-buffer.
	Extend documentation.

	* xdisp.c (get_next_display_element): Display \r as ^M.

	* xterm.c (x_scroll_bar_create) [USE_TOOLKIT_SCROLL_BARS]: Clear
	under scroll bar widget.

1999-08-21  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (minibuffer_scroll_overlap): Removed because not used
	anywhere.
	(unwind_redisplay): Return nil.
	(clear_garbaged_frames): New.
	(redisplay_internal): Use it.
	(echo_area_display): Ditto.
	(resize_mini_window): Mew.
	(display_echo_area_1): Use it to resize echo area window.
	(redisplay_internal): Use it to resize active mini-window.

	* dispextern.h, lisp.h: Add function prototypes.

	* dispnew.c (set_window_cursor_after_update): Do the
	cursor_in_echo_area case only for a mini-window showing
	a message.  Don't let cursor end up after the end of a row.

	* xdisp.c (echo_area_glyphs, echo_area_message)
	(echo_area_glyphs_length, previous_echo_glyphs)
	(previous_echo_area_message, previous_echo_area_glyphs_length):
	Removed.
	(Vmessage_stack, echo_area_buffer, echo_buffer)
	(display_last_displayed_message_p, Vwith_echo_area_save_vector): New.
	(message2_nolog): Use set_message and clear_message.
	(message3): Rename parameter len to nbytes to make clear what it is.
	(message3_nolog): Ditto.  Use set_message and clear_message.
	(update_echo_area): Rewritten.
	(with_echo_area_buffer): New.
	(with_echo_area_buffer_unwind_data, unwind_with_area_buffer): New.
	(setup_echo_area_for_printing): New.
	(display_echo_area, display_echo_area_1): New.
	(current_message, current_message_1): New.
	(push_message, restore_message, pop_message, check_message_stack): New.
	(truncate_echo_area): Rewritten.
	(truncate_message_1): New.
	(set_message, set_message_1, clear_message): New.
	(echo_area_display): Rewritten.
	(redisplay_internal): Check for needed echo area update
	differently.
	(redisplay_preserve_echo_area): Rewritten.
	(redisplay_window): Check for mini-window displaying echo area
	message differently.
	(syms_of_xdisp): Initialize Vmessage_stack and echo area buffers.
	Remove initialization of removed variables.
	(init_xdisp): Remove references to removed variables.

	* dispnew.c (adjust_frame_message_buffer): Removed references
	to echo_area_glyphs and previous_echo_glyphs.
	(direct_output_for_insert): Check for mini-window displaying
	echo area message differently.
	(update_frame): Likewise.
	(set_window_cursor_after_update): Likewise.  In echo area,
	don't try to set cursor on rows that aren't enabled.

	* print.c: Remove conditional compilation on `standalone'.
	(glyph_len, str_to_glyph_cpy, str_to_glyph_ncpy)
	(glyph_to_str_cpy): Remove that section because GLYPHs are no
	longer used in that way.
	(PRINTDECLARE): Add multibyte.
	(PRINTPREPARE, PRINTFINISH): Handle printcharfun t differently.
	(printbufidx): Removed.
	(printchar, strout): Rewritten.

	* keyboard.c (ok_to_echo_at_next_pause): Make it a pointer to
	a struct kboard.
	(echo_kboard): New.
	(echo_now): Set echo_kboard to the current kboard.
	(cancel_echoing): Set echo_kboard to null.
	(cmd_error_internal): Use clear_message, remove references
	to echo_area_glyphs and echo_area_message.
	(command_loop_1): Check for echo area messages differently.
	(read_char): Likewise.
	(record_menu_key): Use clear_message.
	(Fexecute_extended_command): Check for echo area messages
	differently.  Use push_message, restore_message, pop_message.

	* alloc.c (Fgarbage_collect): Use push_message, restore_message,
	pop_message.

	* emacs.c (shut_down_emacs): Call check_message_stack.

	* lisp.h: Add function prototypes and extern declarations for
	new functions and variables.

	* fileio.c (Fdo_auto_save): Use push_message, restore_message,
	pop_message.

	* minibuf.c (read_minibuf): Use clear_message instead of
	setting echo_area_glyphs.
	(Fminibuffer_completion_help): Ditto.

	* editfns.c (Fcurrent_message): Rewritten.

	* frame.c, window.h: Remove references to echo_area_glyphs
	and previous_echo_glyphs.

1999-08-21  Dave Love  <fx@gnu.org>

	* aix3-2-5.h (C_DEBUG_SWITCH): Use -g -O.
	* aix4-1.h: Likewise.

	* irix6-5.h (C_DEBUG_SWITCH): Set for debug and optimize.

1999-08-20  Gerd Moellmann  <gerd@gnu.org>

	* xfns.c: Remove tiff34 prefix from include.

1999-08-20  Dave Love  <fx@gnu.org>

	* cm.c: Revert previous change.

1999-08-19  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (XTset_vertical_scroll_bar): Fix previous change.  Clear
	under scroll bar with width FRAME_SCROLL_BAR_COLS.

1999-08-18  Dave Love  <fx@gnu.org>

	* callproc.c, filelock.c, insdel.c, sysdep.c, xmenu.c: Use
	stdlib.h.

	* doprnt.c: Use stdlib.h, unistd.h.

	* config.in: Add HAVE_TERMCAP_H.

	* cm.c: Use termcap.h.

1999-08-18  Gerd Moellmann  <gerd@gnu.org>

	* xfns.c (x_window) [USE_X_TOOLKIT]: Remove test for
	FRAME_X_WINDOW (f) being null at the of the function.  If widgets
	cannot be created we will already have crashed earlier.  Call
	lw_set_main_areas with a null menu-bar widget, so that we have
	a reasonable default.
	(Fx_create_frame): Rearranged so that Lisp errors during frame
	initialization cause less damage.  Initialize menu bar widget
	here.

1999-08-18  Gerd Moellmann  <gerd@gnu.org>

	* dispnew.c (update_frame_line): Fix previous change.  If writing
	whole line clear to end of frame.

1999-08-17  Gerd Moellmann  <gerd@gnu.org>

	* window.c (Fcoordinates_in_window_p): Return `left-bitmap-area'
	and `right-bitmap-area' if position is in the bitmap areas.  This
	avoids an error when clicking on the bitmap areas.  Instead, they
	are currently treated like clicks inside the window.
	(coordinates_in_window): Return 5 and 6 for bitmap areas.
	(Qleft_bitmap_area, Qright_bitmap_area): New.
	(syms_of_window): Initialize new symbols.

	* dispnew.c (update_frame_line): If writing whole line,
	don't write trailing spaces unless we must.

	* xdisp.c (unwind_redisplay): New.  Resets flag redisplaying_p.
	(redisplay_internal): Register unwind_redisplay with
	register_unwind_protect.
	(try_window_reusing_current_matrix): If new start > old start,
	give up if start pos of first reusable row is not equal to new
	start.

	* eval.c (Fsignal): Don't reset redisplaying_p here.

	* xterm.c (expose_area): If row extends face to end of line,
	write the whole line.

1999-08-16  Gerd Moellmann  <gerd@gnu.org>

	* dispextern.h (struct it): Remove member
	show_trailing_whitespace_p.

	* dispnew.c (direct_output_for_insert): Use
	Vshow_trailing_whitespace instead of former iterator member
	show_trailing_whitespace_p.
	(direct_output_forward_char): Don't do it if highlighting
	trailing whitespace.

	* xdisp.c (Qshow_trailing_whitespace): Removed.
	(Vshow_trailing_whitespace): Added.
	(init_iterator): Remove initialization code for
	show_trailing_whitespace_p.
	(redisplay_internal): Don't try cursor movement in this_line
	if showing trailing whitespace.
	(redisplay_window): Likewise for cursor movement in current
	matrix and try_window_id.
	(try_window_reusing_current_matrix): Likewise.
	(trailing_whitespace_p): Return 0 if trailing whitespace is
	in front of point.
	(display_line): Use Vshow_trailing_whitespace instead of
	former iterator member show_trailing_whitespace_p.
	(syms_of_xdisp): Add DEFVAR_LISP for show-trailing-whitespace.

1999-08-16  Gerd Moellmann  <gerd@gnu.org>

	* window.c (Fpos_visible_in_window_p): Rewritten.

	* xfaces.c (add_to_log): Renamed from display_message.
	Don't display messages in echo area.

	* xterm.c (x_draw_glyph_string_box): Use the background width
	of the glyph string for the width of the box.

1999-08-16  Stefan Monnier  <monnier@cs.yale.edu>

	* syntax.c (Fforward_comment): Set comstyle for Scomment_fence.

1999-08-16  Geoff Voelker  <voelker@cs.washington.edu>

	* xfns.c, w32fns.c (x_set_frame_parameters): Set foreground and
	background first, and then set other parameters that might
	depend upon their new values.

1999-08-15  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (Vfont_list_limit): New.
	(syms_of_xfaces): Make it a user-variable.
	(DEFAULT_FONT_LIST_LIMIT): New.
	(sorted_font_list): If Vfont_list_limit is an integer > 0, list
	maximally that number of fonts, otherwise use
	DEFAULT_FONT_LIST_LIMIT.
	(Fx_font_family_list): Bind `font-list-limit' to higher values
	until we have all fonts.
	(Fxfont_list): Additionally return the full names of fonts and
	their registry and encoding.

	* xterm.c (XTset_vertical_scroll_bar) [USE_TOOLKIT_SCROLL_BARS]:
	Simplify clearing "under" scroll bar.

	* window.c (Qfixed_window_size): New.
	(syms_of_window): Initialize it.
	(check_all_windows): Add return type void.
	(window_fixed_size_p): New.  Return non-zero if window
	is fixed-size.
	(window_min_size_1): New.
	(window_min_size): Handle fixed-size windows.
	(size_window): New.  Rewritten combination of set_window_height and
	set_window_width that handles fixed-size windows.
	(set_window_height): Call it.
	(set_window_width): Call it.
	(Fsplit_window): Give an error on attempt to split a fixed-size
	window.
	(change_window_height): Partly rewritten to handle fixed-size
	windows.

1999-08-13  Wolfgang Rupprecht  <wolfgang@wsrcc.com>

	* process.c (Fopen_network_stream): Fix previous change.

1999-08-13  Karl Heuer  <kwzh@gnu.org>

	* xdisp.c (line_number_display_limit_width): New var.
	(decode_mode_spec): Use it instead of hardcoded value.
	(syms_of_xdisp): Defvar it.

1999-08-13  Richard M. Stallman  <rms@gnu.org>

	* eval.c (run_hook_list_with_args): Gcpro `globals'.
	(run_hook_with_args): Likewise.

	* window.h (struct window): New field too_small_ok.

	* window.c (set_window_height, set_window_width):
	If window starts out "too small", set its too_small_ok flag.
	If window's too_small_ok flag is set, don't delete it
	unless it is so small it would cause a crash.

1999-08-13  Gerd Moellmann  <gerd@gnu.org>

	* window.c (MINSIZE): Removed.
	(window_min_size): New.
	(set_window_height): Use window_min_size.
	(change_window_height): Ditto.

1999-08-12  Gerd Moellmann  <gerd@gnu.org>

	* indent.c (vmotion): Don't add in mini-buffer prompt width
	if prompts are inserted into mini-buffer.

1999-08-12  Wolfgang Rupprecht  <wolfgang@wsrcc.com>

	* config.in: Add HAVE_GETADDRINFO.
	* process.c (Fopen_network_stream): Use getaddrinfo.

1999-08-11  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (get_overlay_arrow_glyph_row): Set the charpos of
	glyphs to -1.

	* xdisp.c (face_before_or_after_it_pos): If position after
	or before iterator's current position in the buffer is out
	of bounds, return the iterator's original face id.

	* dispnew.c (mirror_make_current): If desired row isn't enabled,
	just swap glyphs pointers between current and desired row.
	(build_frame_matrix_from_leaf_window) [GLYPH_DEBUG]: Copy
	desired matrix method string to current matrix.

1999-08-11  Kenichi Handa  <handa@etl.go.jp>

	* lisp.h (CHAR_MODIFIER_MASK): New macro.

	* lread.c (read_escape): For Control modifier, pay attention to
	multibyte character.
	(read1): Likewise.  Signal error or a multibyte character which
	has a modifier bit.  Check validity of Shift modifier.

	* charset.c (non_ascii_char_to_string): Handle modifier bits as
	the same as Lisp reader.

1999-08-10  Richard M. Stallman  <rms@gnu.org>

	* charset.h (BCOPY_SHORT): Fix typo `unsigined'.

1999-08-10  Alexandre Oliva  <oliva@dcc.unicamp.br>

	* unexelf.c [__linux__ && __alpha__] (HAS_SBSS_SECTION): Define.

1999-08-10  Eli Zaretskii  <eliz@gnu.org>

	* msdos.c (IT_set_face): Abort if the default face is not realized
	and cached.
	(IT_write_glyphs): Reset the screen face to the default face
	before writing glyphs.

	* xfaces.c (realize_default_face) [MSDOS]: Don't take default
	colors from the frame here.
	(realize_tty_face) [MSDOS]: Do it here.  Update the face
	attributes with the actual name of the color taken from the
	frame.

	* dosfns.c (msdos_stdcolor_name): Remove const from return value.
	* dosfns.h (msdos_stdcolor_name): Ditto for the prototype.

	* frame.c (Fframe_parameters): Swap foreground and background
	colors returned in frame parameters if the frame has reverse in
	its parameter alist.
	(Fmake_terminal_frame): Make a unique copy of face_alist for
	each frame.

1999-08-07  Richard Stallman  <rms@gnu.org>

	* buffer.c (Fprevious_overlay_change): Just return
	the answer obtained from overlays_at.

	* xfns.c (xpm_load) [!XpmAllocCloseColors]:
	Use XpmCloseness and attrs.closeness instead.

1999-08-06  Richard Stallman  <rms@gnu.org>

	* lread.c (Feval_buffer): New arg DO_ALLOW_PRINT.

1999-08-06  Geoff Voelker  <voelker@cs.washington.edu>

	* dired.c (directory_files_internal, Fdirectory_files_and_attributes)
	(Ffile_attributes_lessp): New functions.
	(Fdirectory_files): Use directory_files_internal.
	(syms_of_dired): Initialize Fdirectory_files_and_attributes,
	Ffile_attributes_lessp.

	* w32.c (stat): Check for directory ending in separator when
	doing readdir fast path.

	* w32fns.c (x_set_icon_type): Support setting frame icons.
	* w32term.c (x_bitmap_icon): New function.
	(x_make_frame_visible, x_iconify_frame): Invoke x_bitmap_icon.

1999-08-06  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (set_iterator_to_next): After delivering a character
	from a display vector, restore face and charset to what they were
	before the display vector was processed.

1999-08-06  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (reseat_at_next_visible_line_start): New parameter
	on_newline_p.
	(set_iterator_to_next): After delivering last char
	from display vector, reseat on next visible line start if
	dpvec_char_len < 0.
	(next_element_from_buffer): Set dpvec_char_len to -1 for
	selective display.

1999-08-06  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (compute_line_metrics): If first line's physical ascent
	is larger than its logical ascent, use the physical ascent, and
	make the row taller.  Set row's overlapping_p flag.

	* dispnew.c (redraw_overlapping_rows): Use flag overlapping_p.
	(direct_output_for_insert): Ditto.

	* dispextern.h (struct glyph_row): Add overlapping_p.

	* xterm.c (x_draw_phys_cursor_glyph): Redraw overlaps.

	* dispextern.h (MATRIX_ROW_OVERLAPS_PRED_P): New.
	(MATRIX_ROW_OVERLAPS_SUCC_P): New.

	* dispnew.c (direct_output_for_insert): Don't use this method if
	row is overlapped by others.
	(update_text_area): Write full line if current line is overlapped.
	(redraw_overlapped_rows): New.
	(update_window): Call it.
	(redraw_overlapping_rows): New.
	(update_window): Call it.
	(scrolling_window): Make sure overlapped_p flag in current rows is
	unchanged.
	(row_equal_p): Take rows overlapped_p flag into account.

	* dispextern.h (struct glyph_row): Add flag overlapped_p.

	* xterm.c (x_fix_overlapping_area): New.
	(x_redisplay_interface): Add x_fix_overlapping_area.

	* dispnew.c (adjust_glyphs): Block input while adjusting matrices.

1999-08-06  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (x_draw_glyphs): Add parameter overlaps_p.
	(struct glyph_string): Add member for_overlaps_p.
	(x_get_glyph_string_clip_rect): If glyph string draws foreground
	of overlapping rows, clip to window bottom.
	(x_fill_glyph_string): Add parameter overlaps_p.
	(x_fill_composite_glyph_string): Ditto.
	(BUILD_GLYPH_STRINGS): Ditto.
	(BUILD_CHAR_GLYPH_STRINGS): Ditto.
	(x_draw_glyph_string): Don't draw anything but the foreground
	if glyph string draws row overlaps.

	* dispnew.c (direct_output_for_insert): Don't use this
	optimization for rows that overlap others.
	(update_window_line): Return non-zero if display has changed.
	(update_text_area): Ditto.
	(update_window): Record if display has been changed.

	* dispextern.h (MATRIX_ROW_OVERLAPPING_P): New.

	* dispextern.h (struct redisplay_interface): Add
	fix_overlapping_area.

	* xterm.c (x_append_glyph): Set glyph flag overlaps_vertically_p.

	* dispextern.h (struct glyph): Add overlaps_vertically_p.

	* xterm.c (x_produce_image_glyph): Compute iterator's physical
	ascent and descent.
	(x_produce_stretch_glyph): Ditto.
	(x_produce_glyphs): Ditto.

	* xdisp.c (init_iterator): Reset physical line height info
	after producing special glyphs.
	(display_toolbar_line): Set physical line height info.
	(compute_line_metrics): Ditto.
	(display_line): Ditto.
	(display_string): Ditto.

	* term.c (produce_glyphs): Set iterator's physical height
	information.

	* dispnew.c (blank_row): Compute glyph row's physical height.
	(row_equal_p): Take physical row heights into account.
	(direct_output_for_insert): Ditto.
	(update_text_area): Ditto.

	* dispextern.h (struct glyph_row): Add phys_ascent and
	phys_height.
	(struct it): Add phys_ascent, phys_descent, max_phys_ascent,
	max_phys_descent.

1999-08-04  Stefan Monnier  <monnier@cs.yale.edu>

	* buffer.c (switch_to_buffer_1): New subroutine, taken out from
	Fswitch_to_buffer.
	(no_switch_buffer): New function.
	(Fswitch_to_buffer): Call them.  Don't get confused
	by "same-window" buffers in a dedicated frame.

	* window.c (display-buffer): Don't get confused
	by "same-window" buffers in a dedicated frame.

1999-08-04  Andreas Schwab  <schwab@gnu.org>

	* insdel.c (insert_from_string_1): Check gap size against number
	of outgoing bytes, not incoming bytes.

1999-08-03  Tom Breton  <tob@world.std.com>

	* lread.c (read1): Added circular reading code to #N=.
	(SUBSTITUTE): New macro.
	(seen_list): New variable.
	(substitute_object_in_subtree): New function.
	(substitute_object_recurse): New function.
	(substitute_in_interval): New function.

1999-08-02  Eli Zaretskii  <eliz@gnu.org>

	* Makefile.in (frame.o, sysdep.o, xfaces.o): Depend on dosfns.h.

	* frame.c (make_terminal_frame): Don't call init_frame_faces if
	noninteractive, for termcap frames as well.

	* sysdep.c (init_sys_modes): Call init_frame_faces for termcap
	frames.

1999-08-01  Richard Stallman  <rms@gnu.org>

	* fns.c (internal_equal): Correct overlay comparison.

1999-07-31  Richard M. Stallman  <rms@gnu.org>

	* xfns.c (x_set_internal_border_width):
	Call do_pending_window_change.  Don't block input, don't call XFlush.
	(x_set_vertical_scroll_bars): Call do_pending_window_change.
	(x_set_scroll_bar_width, x_set_font): Likewise.

	* frame.c (Fset_frame_height): Call do_pending_window_change.
	(Fset_frame_width, Fset_frame_size): Likewise.

	* xterm.c (x_set_window_size): When calling change_frame_size,
	specify 1 for DELAY.

	* widget.c (EmacsFrameSetCharSize): Don't call
	do_pending_window_change here.

1999-07-30  Dave Love  <fx@gnu.org>

	* config.in: Add HAVE_STDLIB_H.

1999-07-30  Richard M. Stallman  <rms@gnu.org>

	* process.c (create_process): Detect failure of `pipe'.

1999-07-30  Keisuke Nishida  <kei@psn.net>

	* alloc.c (allocate_vectorlike): Add missing increment.

	* data.c (Fdefalias): Call Ffset instead of duplicating code.

	* keymap.c (get_keymap_1, get_keyelt): Check the type of OBJECT
	before calling indirect_function.

1999-07-30  Eli Zaretskii  <eliz@gnu.org>

	* dispextern.h (load_color, lookup_derived_face): Declare prototypes.

	* dispnew.c (init_display) [MSDOS]: Don't initialize frame faces,
	it will be done later.

	* frame.c (make_terminal_frame) [MSDOS]: Don't call
	init_frame_faces if non-interactive.
	(Fframe_parameters) [MSDOS]: Replace indexing into colornames[]
	array with a call to msdos_stdcolor_name.  The font name is now
	"ms-dos", consistent with realize_tty_face.

	* keyboard.c (cmd_error_internal): Don't kill Emacs if this is an
	MSDOS frame.

	* window.c (Fset_window_configuration) [MSDOS]: Don't call
	x_set_toolbar_lines.

	* xfaces.c (load_color): Remove static from definition and remove
	prototype.
	[MSDOS]: Add a DOS-specific version of load_color.
	(lookup_face): Replace FRAME_TERMCAP_P with !FRAME_WINDOW_P.
	(lookup_derived_face): New function.
	(realize_default_face): Support MSDOS frames.
	[MSDOS]: If fore/background colors are unspecified, inherit them
	from the frame.
	(realize_face): Support MSDOS frames.
	(realize_tty_face): Support MSDOS frames.
	[MSDOS]: If the face color is not in Vface_tty_color_alist, call
	load_color to try to find a suitable approximation.  If the face
	is inverse-video, swap the foreground and background colors.

	* dosfns.c (msdos_stdcolor_name, msdos_stdcolor_idx): New functions.

	* dosfns.h (msdos_stdcolor_name, msdos_stdcolor_idx): Declare.

	* msdos.h: Remove redundant declarations (most of them are now in
	dispextern.h).

	* msdos.c (IT_set_face): Rewritten for the new redisplay engine.
	Use default frame colors if the face doesn't specify them; invert
	the colors if highlight is ON.
	(IT_write_glyphs): Rewritten for the new redisplay engine.
	(IT_change_line_highlight): Add (unused) parameter Y, since that's
	how the hook is called by term.c.
	(IT_copy_glyphs): New function, copies an area of the display in
	video RAM.
	(IT_insert_glyphs): Rewritten to DTRT instead of aborting, since
	redisplay now calls it even if char_ins_del_ok is zero.
	(IT_set_frame_parameters): Prototype changed.  Calls the new
	load_color.  Puts the new fore/background colors into the default
	face on current frame.
	(IT_menu_display): Rewritten to handle the new struct glyph
	instead of a char array.
	(XMenuActivate): Call lookup_derived_face to create and use
	special faces for the pop-up and drop-down menus.

1999-07-29  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (x_set_toolkit_scroll_bar_thumb): Don't call
	XawScrollbarSetThumb if thumb parameters haven't changed because
	that function apparently isn't optimized for this case.

1999-07-29  Eli Zaretskii  <eliz@gnu.org>

	* msdos.c (getdefdir): Don't return failure indication when
	_fixpath sets errno to ENOSYS.

1999-07-28  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (string_char_and_length): New.  Use it everywhere
	instead of STRING_CHAR_AND_LENGTH in xdisp.c.

1999-07-28  Kenichi Handa  <handa@etl.go.jp>

	* fns.c (count_combining): New function.
	(struct textprop_rec): New structure.
	(concat): Copy text properties correctly when byte combining
	occurs.

1999-07-28  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (x_setup_relief_color): Don't try smart color allocation
	if display is mono.
	(x_draw_row_bitmaps): If face has stipple, don't switch
	to foreground color for clearing areas, and set the fill style.

	* xfaces.c (load_face_colors): Load background color if setting
	stipple, too.
	(prepare_face_for_display): Use FillOpaqueStippled instead of
	FillStippled.

1999-07-26  Ken'ichi Handa  <handa@gnu.org>

	* xterm.c (x_find_ccl_program): Add casting.

	* w32fns.c (w32_find_ccl_program): Add casting.

1999-07-27  Gerd Moellmann  <gerd@gnu.org>

	* dispextern.h (struct glyph_row): Flag internal_border_p removed.

	* xfns.c (x_create_tip_frame): Don't set bitmapIcon resource
	because this will try to access a nonexistent widget.

1999-07-26  Markus Rost  <rost@gnu.org>

	* fns.c (Fgethash): Fix order of variables (patch by gerd).
	(Fputhash): Ditto.
	(Fremhash): Ditto.

1999-07-26  Gerd Moellmann  <gerd@gnu.org>

	* widget.c (EmacsFrameSetCharSize): Don't add XtNborderWidth
	value to frame width and height.

	* xterm.c (x_get_glyph_string_clip_rect): Take internal border
	into account for full-width windows.  Don't add scroll bar width
	to width of clip rect.
	(x_draw_glyph_string_box): Add 1 to right x of full width lines.
	(x_set_glyph_string_background_width): Add 1 to background width.
	(x_draw_glyphs): Take internal border into account for full-width
	lines.

1999-07-26  Richard M. Stallman  <rms@gnu.org>

	* xfns.c (x_set_mouse_color): Always unload the old color.
	Don't allow nil as color value.
	(x_set_cursor_color, x_set_background_color, x_set_foreground_color):
	Always unload the old color.

	* indent.c (Fmove_to_column): Extend end of line only if FORCE is t.

1999-07-26  Karl Heuer  <kwzh@gnu.org>

	* fns.c (Fy_or_n_p): Doc fix.

1999-07-26  Kenichi Handa  <handa@etl.go.jp>

	* ccl.h (setup_ccl_program): The type is changed to `int'.

	* ccl.c (ccl_driver) <CCL_Call>: Now CCL program ID to call may be
	stored in the following CCL code.  Adjusted for the change of
	Vccl_program_table.
	(resolve_symbol_ccl_program): Adjusted for the new style of
	embedded symbols (SYMBOL . PROP) in CCL compiled code.   Return Qt
	is resolving failed.
	(ccl_get_compiled_code): New function.
	(setup_ccl_program): Function type changed from `void' to `int'.
	Resolve symbols in CCL_PROG.
	(Fccl_program_p): New function.
	(Fccl_execute): Get compiled CCL code by just calling
	setup_ccl_program.
	(Fccl_execute_on_string): Likewise.
	(Fregister_ccl_program): Adjusted for the change of
	Vccl_program_table.

	* coding.c (setup_coding_system): Get compiled CCL code by just
	calling setup_ccl_program.

	* xterm.c (x_find_ccl_program): Get compiled CCL code by just
	calling setup_ccl_program.

	* w32fns.c (w32_find_ccl_program): Get compiled CCL code by just
	calling setup_ccl_program.

1999-07-23  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (frame_update_line_height): Just use the height of the
	frame's fontset or font, instead of taking face fonts into
	account.

	* xdisp.c (get_next_display_element): Display DEL as `^?'.

1999-07-23  Richard M. Stallman  <rms@gnu.org>

	* window.c (Fsplit_window): For default size, round up for left window.

1999-07-21  Joe Ramey  <ramey@ti.com>

	* filelock.c (lock_if_free): Return -1 if check_lock_owner
	has returned -1 (lockfile exists but is not a symlink?).

1999-07-20  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (x_draw_bar_cursor): Use scratch_cursor_gc to
	because of a change in cursor_gc made in 20.4.

1999-07-19  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (x_calc_absolute_position): Subtract menu bar height
	for YNegative, if using X toolkit.

	* xfns.c (x_real_positions): Don't subtract window borders
	from positions returned.

1999-07-17  Gerd Moellmann  <gerd@gnu.org>

	* xrdb.c (x_load_resources): Set double-click time defaults
	for Motif list boxes from double-click-time.

	* fns.c (Vhash_table_tests): Removed.
	(Qhash_table_test): New.
	(syms_of_fns): Initialize Qhash_table_test.
	(Fmake_hash_table): Look up user-defined tests in symbol prop
	`hash-table-test'.
	(Fdefine_hash_table_test): Store test and hash function as
	symbol prop `hash-table-test'.
	(make_hash_table): Add parameters user_test and user_hash.

	* window.c (set_window_buffer): Set window margins for tty
	frames, too.
	(Fset_window_margins): Ditto.

	* term.c (append_glyph): Use glyph area of iterator instead of
	always TEXT_AREA.

	* dispnew.c (update_frame_1): Add left margin width to cursor
	hpos.
	(direct_output_for_insert): Ditto.
	(direct_output_forward_char): Ditto.

	* dispnew.c (adjust_glyph_matrix): Set glyph matrix' top_line_p.

	* dispextern.h (struct glyph_matrix): Add top_line_p.

1999-07-16  Gerd Moellmann  <gerd@gnu.org>

	* frame.h (FRAME_WINDOW_REDISPLAY_P): Removed.  Use FRAME_WINDOW_P
	instead.

	* fns.c (cmpfn_eq): Add hash code parameters.
	(cmpfn_eql): Ditto.
	(cmpfn_equal): Ditto, and compare hash codes before calling Fequal.
	(cmpfn_user_defined): Likewise.

1999-07-15  Gerd Moellmann  <gerd@gnu.org>

	* lisp.h (DEFAULT_REHASH_THRESHOLD): Changed to 0.8.

	* fns.c (maybe_resize_hash_table): Correct computation of
	index vector size.
	(make_hash_table): Ditto.
	(Fmakehash): New.

	* xdisp.c (echo_area_display): Don't call redraw_garbaged_frames.

	* alloc.c (gc_sweep): Call sweep_weak_hash_tables.
	(survives_gc_p): Make it externally visible.
	(mark_object): Ditto.

	* fns.c (remove_hash_entry): Removed.
	(sweep_weak_hash_tables): New.

	* print.c (print): Print more information about hash tables.

	* xfns.c (image_spec_hash): Removed.
	(lookup_image): Use sxhash instead of image_spec_hash.
	(image_spec_equal_p): Removed.
	(lookup_image): Use Fequal instead of image_spec_equal_p.

1999-07-14  Gerd Moellmann  <gerd@gnu.org>

	* lisp.h (P_): Moved to top of file.

	* fns.c (make_hash_table): Set new members.

	* alloc.c (mark_object): Mark hash table's user_hash_function.
	Mark index vector for weak hash tables.

	* lisp.h (struct Lisp_Hash_Table): Add user_cmp_function,
	user_hash_function, cmpfn, and hashfn.

	* fns.c (build_hash): Removed.
	(hash_test): Removed.
	(cmpfn_eq, cmpfn_eql, cmpfn_equal, cmpfn_user_defined): New.
	(hashfn_eq, hashfn_eql, hashfn_equal, hashfn_user_defined): New.

1999-07-13  Gerd Moellmann  <gerd@gnu.org>

	* alloc.c (survives_gc_p): New.

	* print.c (print): Add hash table handling.

	* alloc.c (mark_object): Add code to mark hash tables.

	* lisp.h (GC_HASH_TABLE_P): New.

	* emacs.c (main): Call init_fns.

	* fns.c (init_fns): New.

	* fns.c: Add hash table implementation.

	* lisp.h (PVEC_HASH_TABLE): New.
	(struct Lisp_Hash_Table): New.
	(XHASH_TABLE): New.
	(XSET_HASH_TABLE): New.
	(HASH_TABLE_P): New.
	(CHECK_HASH_TABLE): New.
	(DEFAULT_HASH_SIZE): New.
	(DEFAULT_REHASH_THRESHOLD): New.
	(DEFAULT_REHASH_SIZE): New.

	* xterm.c (x_draw_glyphs): Add parameters real_start and real_end.
	(x_write_glyphs): Compute overwritten cursor using real start
	and end positions of display.
	(x_insert_glyphs): Ditto.

1999-07-10  Gerd Moellmann  <gerd@gnu.org>

	* keyboard.c (read_char): Use message3_nolog to show help-echo.

	* dispnew.c (blank_row): Add y-position as parameter.
	Compute visible height.

	* xdisp.c (next_element_from_string): Give padding spaces
	a position of -1.

	* dispnew.c (adjust_glyph_matrix): Some work to support
	marginals areas on tty frames in a future version.
	(allocate_matrices_for_frame_redisplay): Ditto.

	* xdisp.c (display_line): At ZV, set glyph row's displays_text_p
	to zero if number of glyphs in the row is <= 1.

1999-07-09  Gerd Moellmann  <gerd@gnu.org>

	* dispnew.c (buffer_posn_from_coords): Take left marginal area
	into account.

	* xdisp.c (handle_display_prop): Don't reset area if handing
	a property from a string that came from a `display' property.
	(handle_single_display_prop): Don't handle recursive `display'
	properties.
	(handle_single_display_prop): Handle some display property
	forms for terminal frames.
	(Qimage): Moved here from xfns.c.

	* dispextern.h (struct it): New field string_from_display_prop_p.

	* xterm.c (x_clip_to_row): Don't let clip_rect include top
	line.

1999-07-08  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (handle_single_display_prop): Handle `:when FORM'.

	* window.c (set_window_buffer): Set window's vscroll to zero.

	* xdisp.c (QCwhen): New.
	(display_prop_end): New.
	(handle_single_display_prop): Use it.
	(debug_method_add): Print buffer name if tracing.
	(try_window_reusing_current_matrix): Compute visible height
	of reused rows.  Fix cursor position calculation in case of
	top-line.

	* dispextern.h (struct redisplay_interface): Add parameter
	cursor_on_p to update_window_end_hook.

	* xterm.c (x_update_window_end): Add parameter cursor_on_p.

1999-07-07  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (redisplay_internal): Ensure that redisplayinp_p
	doesn't become negative when decrementing it.

	* eval.c (Fsignal): Reset redisplaying_p to zero.

	* xdisp.c (try_window_reusing_current_matrix): Call hooks
	for window update.
	(try_window_id): Ditto.

	* xterm.c (x_clear_end_of_line): Handle top-line correctly.
	(x_scroll_run): Ditto.
	(any_help_event_p): New.
	(x_initialize): Set it to zero.
	(XTread_socket): Clear help echo only if any_help_event_p.

	* xdisp.c (init_iterator): Set top_line_p.
	(start_display): Use correct initial y if top-line is present.
	(make_cursor_line_fully_visible): Bug fixes for top-line.
	(try_scrolling): Ditto.
	(try_window_reusing_current_matrix): Ditto.

	* dispextern.h (struct it): Add top_line_p.

	* dispnew.c (shift_glyph_matrix): Move some computations out
	of the loop.

	* dispnew.c (margin_glyphs_to_reserve): Use NUMBERP and
	XFLOATINT.

1999-07-06  Gerd Moellmann  <gerd@gnu.org>

	* dispnew.c (update_frame_1): When setting cursor in echo area,
	skip only over padding spaces at the end.

	* xfaces.c (realize_tty_face): Set face's font_name field to
	"tty".

	* term.c (update_end): Turn cursor on only if selected window's
	cursor_off_p flag is not set.

1999-07-05  Gerd Moellmann  <gerd@gnu.org>

	* term.c (TS_cursor_visible): Renamed from TS_visual_mode.
	(TS_cursor_normal): Renamed from TS_end_visual_mode.
	(TS_cursor_invisible): New.
	(term_init): Initialize TS_cursor_invisible.
	(tty_hide_cursor): New.
	(tty_show_cursor): New.
	(update_end): Show tty cursor.
	(update_begin): Hide tty cursor to prevent cursor flickering
	during redisplays triggered by timers (stealth fontification).

	* keyboard.c (make_lispy_event) <TOOLBAR_EVENT>: Apply modifiers.

	* xterm.c (XTread_socket) [USE_MOTIF] <KeyPress>: Catch events
	in scroll bars.
	(x_handle_toolbar_click): Set modifier bits.

1999-07-04  Gerd Moellmann  <gerd@gnu.org>

	* keyboard.c (kbd_store_ptr): Declare it as a volatile pointer
	instead of a pointer to a volatile input_event.
	(kbd_buffer_store_event): Remove volatile modifier from
	declaration of local variable `sp'.
	(Fdiscard_input): Don't cast when assigning kbd_store_ptr
	to kbd_fetch_ptr.

1999-07-03  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (try_window_id): Set beg_unchanged and end_unchanged
	only if buffer is modified.  Return quickly if changes are
	above window start.

1999-07-02  Gerd Moellmann  <gerd@gnu.org>

	* dispextern.h (HSCROLL_WINDOWS): Removed.

	* xdisp.c (mark_window_display_accurate): Don't set
	w->region_showing.
	(redisplay_internal): Don't call redraw_garbaged_frames.

1999-07-01  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (echo_area_display): Don't display truncation marks
	for messages because 20.4 doesn't do it either.
	(redisplay_window): Case same window start.  Instead of giving
	up when cursor is partially visible, make it fully visible.
	(mark_window_display_accurate): Some cleanup.  Record window's
	last cursor information.
	(debug_method_add): Improved.
	(redisplay_internal): Record last cursor info only if not
	consider_all_windows_p.

	* dispnew.c (update_window): Update top line after scrolling.
	(blank_row): Renamed from make_empty_enabled_row.
	(increment_glyph_row_buffer_positions): Increment positions
	in buffers, only.

	* window.c (Fcoordinates_in_window_p): Add top-line to doc
	string.

1999-06-30  Gerd Moellmann  <gerd@gnu.org>

	* dispnew.c (update_window): Check that updated row is visible.

	* xterm.c (x_draw_row_bitmaps): Check for invisible rows at
	top of window differently.

	* xdisp.c (try_window_reusing_current_matrix): Don't do it
	if region is showing.

	* dispnew.c (adjust_glyph_matrix): Check w->vscroll when
	avoiding matrix reallocation.  Set window_vscroll in matrix.

	* dispextern.h (struct glyph_matrix): Add member window_vscroll.

	* xdisp.c (debug_method_add): New.
	(debug_redisplay_method): Removed.
	(try_window_reusing_current_matrix): Handle case where old
	window start is the same as new window start.

	* dispextern.h (struct glyph_matrix) [GLYPH_DEBUG]: Make `method'
	an array instead of a pointer.

	* xfns.c (Fx_show_tip): Undo previous change.

	* xterm.c (x_append_glyph): Clear glyph->u.val.

	* dispextern.h (struct glyph): Increase size of face_id bit-field
	for CHAR_GLYPH to 12.

1999-06-29  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (x_charset_registry): Make it externally visible.

1999-06-28  Gerd Moellmann  <gerd@gnu.org>

	* dispnew.c (update_window): Use mode_line_p flag of rows
	instead of WINDOW_WANTS_MODELINE_P.

	* xterm.c (clear_mouse_face): Make externally visible.

	* xfns.c (Fx_show_tip): Clear mouse face before showing tip.

	* xterm.c (expose_line): Handle exposure of top-lines.

	* xterm.c (XTframe_up_to_date): Don't call note_mouse_highlight
	if mouse_face_mouse_frame is null.

	* xdisp.c (redisplay_window): If window is echo_area_window,
	and update_mode_line is set, update menubar and toolbar.

	* dispnew.c (space_glyph): Set its charpos to -1.
	(update_frame_1): Ignore trailing padding spaces.

	* xdisp.c (next_element_from_c_string): Set position of padding
	glyphs to -1.

1999-06-27  Gerd Moellmann  <gerd@gnu.org>

	* xfns.c (x_laplace_read_row): Use XQueryColors instead of
	XQueryColor.

	* xdisp.c (display_menu_bar): Remove unwarranted assertion.
	(set_cursor_from_row): Skip over glyphs having a null object at
	the start of rows.
	(insert_left_trunc_glyphs): Use charpos < 0 to indicate truncation
	glyphs.
	(handle_invisible_prop): Compute next change only when needed.
	(handle_face_prop): Don't correct DEFAULT_FACE_ID if in the mode
	line.

1999-06-26  Gerd Moellmann  <gerd@gnu.org>

	* xrdb.c (x_load_resources): Don't set resource for double-click
	time.

	* xdisp.c (try_window_id): Return quickly if all changes are
	below the window's current matrix end.

	* dispextern.h (MATRIX_ROW_PARTIALLY_VISIBLE_P): Remove window
	parameter.

	* xdisp.c (try_window_reusing_current_matrix): Set no_scrolling_p
	in desired not in current matrix.
	(try_window_reusing_current_matrix): Rotate matrices starting
	at start_vpos instead of 0.

	* xterm.c (expose_window): Use window_text_bottom_y.
	(fast_find_position): Ditto.

	* xdisp.c (redisplay_window): Use window_text_bottom_y.
	(try_window_reusing_current_matrix): Ditto.
	(get_last_unchanged_at_beg_row): Ditto.
	(init_iterator): Ditto.

	* dispnew.c (allocate_matrices_for_window_redisplay): Allocate one
	more row.
	(check_matrix_invariants): Use window_text_bottom_y.
	(update_window): Ditto.
	(scrolling_window): Ditto.

	* xdisp.c (window_text_bottom_y): New.

1999-06-25  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (XTread_socket): Set mouse_face_frame to zero after
	clearing mouse face.
	(XTread_socket) <EnterNotify> [LESSTIF_VERSION]:
	If event.xcrossing.focus is not set, and focus is in the menu bar,
	set focus frame as if event.xcrossing.focus were set.

1999-06-24  Gerd Moellmann  <gerd@gnu.org>

	* keyboard.c (make_lispy_event): Handle mouse on top lines.
	* keyboard.c (make_lispy_movement): Ditto.

	* window.c (coordinates_in_window): Return 4 if on top line.
	(Fcoordinates_in_window_p): Return `top-line' if on top line.

	* xdisp.c (window_box_height): Subtract top line height.
	(window_box): Add top line height to top y position if top line
	exists.
	(init_iterator): If base_face_id is TOP_LINE_FACE_ID, set row to
	the top line row of the window.  Set initial y-position to
	window's top line height plus delta.
	(start_display): Choose start glyph row depending on whether
	window has a top line.
	(try_scrolling): Take top line height into account for aggressive
	scrolling.
	(compute_window_start_on_continuation_line): Take top line into
	account.
	(redisplay_window): Ditto.  If top line height has changed,
	trigger a new redisplay.
	(try_window_reusing_current_matrix): Take top line into account.
	(find_last_row_displaying_text): Ditto.
	(get_last_unchanged_at_beg_row): DItto.
	(try_window_id): Ditto.
	(compute_line_metrics): Ditto.

	* dispnew.c (shift_glyph_matrix): Compute visible row height
	taking top line of window into account.
	(update_window): Update top line.  If scrolling_window detects
	that all rows are equal, only set cursor.
	(update_window_line): Call after_update_window_line_hook if
	mode_line_p flag of rows has changed.
	(scrolling_window): Add parameter top_line_p.  Return -1 if
	all rows are equal.
	(mode_line_string): Add parameter mode_line_p.  Handle strings
	in top lines.

	* dispextern.h (MATRIX_TOP_LINE_ROW): New.
	(MATRIX_FIRST_TEXT_ROW): New.
	(MATRIX_ROW_PARTIALLY_VISIBLE_P): Use row's visible_height.
	(MATRIX_ROW_PARTIALLY_VISIBLE_AT_TOP_P): New.
	(MATRIX_ROW_PARTIALLY_VISIBLE_AT_BOTTOM_P): New.
	(MATRIX_TOP_LINE_HEIGHT): New.
	(CURRENT_MODE_LINE_HEIGHT): Use estimate_mode_line_height.
	(CURRENT_TOP_LINE_HEIGHT): New.
	(DESIRED_TOP_LINE_HEIGHT): New.
	(WINDOW_DISPLAY_TOP_LINE_HEIGHT): New.
	(WINDOW_DISPLAY_HEIGHT_NO_MODE_LINE): Replaces
	WINDOW_DISPLAY_TEXT_AREA_PIXEL_HEIGHT.
	(WINDOW_DISPLAY_TEXT_HEIGHT): New.

	* xterm.c (x_after_update_window_line): Don't draw bitmaps for top
	lines.
	(x_draw_row_bitmaps): Take top line into account when clearing
	bitmap area.
	(x_estimate_mode_line_height): Replacement for
	x_frame_mode_line_height.
	(x_get_glyph_string_clip_rect): Take top line into account.
	(x_clear_end_of_line): Ditto.
	(note_mode_line_highlight): Add parameter mode_line_p.  Handle
	top lines.
	(note_mouse_highlight): Call note_mode_line_highlight for top lines.
	(x_erase_phys_cursor): Take top line into account.

	* xdisp.c (window_box_height): Subtract top line height if
	window wants a top line.
	(display_mode_lines): New.
	(redisplay_window): Call it.
	(display_mode_line): Add parameters face_id and format.

	* dispextern.h (CURRENT_TOP_LINE_HEIGHT): New.
	(MATRIX_TOP_LINE_HEIGHT): New.

	* xterm.c (x_frame_mode_line_height): Add parameter face_id.

	* term.c (estimate_mode_line_height): Renamed from
	frame_mode_line_height.  Add parameter face_id.
	(estimate_mode_line_height_hook): Renamed from
	frame_mode_line_height_hook.
	(produce_special_glyphs_hook): Removed.
	(produce_glyphs_hook): Removed.

1999-06-23  Gerd Moellmann  <gerd@gnu.org>

	* dispextern.h (WINDOW_WANTS_TOP_LINE_P): New.
	(struct glyph_row): Add mode_line_p.

	* xfaces.c (realize_basic_faces): Realize face `top-line'.
	(Qtop_line): New.
	(syms_of_xfaces): Initialize Qtop_line.

	* dispextern.h (TOP_LINE_FACE_ID): New.

	* buffer.c (init_buffer_once): Set default for
	top_line_format to nil.
	(init_buffer_once): Init top_line_format.
	(default-top-line-format): New.
	(top-line-format): New buffer-local variable.

	* buffer.h: Add top_line_format.

	* xdisp.c (overlay_arrow_changed_p): Removed because not used.

1999-06-17  Dave Love  <fx@gnu.org>

	* xfns.c: Move the PNG section before the JPEG one to avoid
	problems surrounding setjmp.h/png.h on GNU/Linux.

1999-06-17  Gerd Moellmann  <gerd@gnu.org>

	* xfns.c (x_kill_gs_process): Don't free colors.

1999-06-17  Dave Love  <fx@gnu.org>

	* s/gnu-linux.h: Zap spurious ~.

1999-06-16  Gerd Moellmann  <gerd@gnu.org>

	* xfns.c (gif_load): Improve multi-image support.

1999-06-15  Gerd Moellmann  <gerd@gnu.org>

	* xfns.c (gif_load): Support multi-image files.

	* Makefile.in (LIBGIF): Use libungif.

	* xdisp.c (compute_window_start_on_continuation_line): Don't
	do it if line start is too far away from window start.

1999-06-14  Gerd Moellmann  <gerd@gnu.org>

	* buffer.c (init_buffer_once): Set buffer_local_flags for
	scroll_*_aggressively.
	(syms_of_buffer): Add DEFVAR_PER_BUFFER for scroll-*-aggressively.
	(init_buffer_once): Set defaults for these variables.
	(syms_of_buffer): Add default-scroll-*-aggressively.

	* buffer.h (scroll_up_aggressively): New.
	(scroll_down_aggressively): New.

	* Makefile.in (LIBPNG): Add -lz -lm in case we're linking with
	a static PNG library.

	* configure.in (HAVE_PNG): Add -lz -lm when checking for PNG lib
	in case it's a static library.

	* Makefile.in (ctagsfiles): Split so that files starting
	with an `x' are found before files starting with `w32'.
	(ctagsfiles1): New.
	(ctagsfiles2): New.
	(TAGS): Use ctagsfiles[12] instead of ctagsfiles.

	* xdisp.c (compute_window_start_on_continuation_line): New.
	(redisplay_window): Use it.
	(INFINITY): New.
	(reseat_to_string): Use it.
	(hscroll_window_tree): Ditto.
	(compute_window_start_on_continuation_line): Ditto.
	(redisplay_window): Don't force display with a new window start.

1999-06-06  Gerd Moellmann  <gerd@gnu.org>

	* xfns.c (x_report_frame_params): Don't report `outer-window-id'
	if widget not present.

	* xdisp.c (prepare_menu_bars): Ignore tooltip frame.

1999-06-04  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (recompute_basic_faces) [GLYPH_DEBUG]: Check return
	value of realize_basic_faces.
	(load_face_font_or_fontset): Store full font name in face.
	(realize_default_face): Use full font name.

	* xterm.c (x_produce_glyphs): Set member char_to_display.
	(x_append_glyph): Store char_to_display in glyphs.

	* dispextern.h (struct it): Add char_to_display.

	* xfns.c (x_set_font): Don't call face-set-after-frame-default
	if faces haven't been initialized.
	(Fx_create_frame): Call face-set-after-frame-default after
	faces have been initialized, and widget has been created.

	* puresize.h (BASE_PURESIZE): Increased.

1999-06-01  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (set_lface_from_font_name): Add parameter force_p.
	(Finternal_set_lisp_face_attribute): If frame is t when
	:font attribute is set, use the selected frame.
	(clear_face_cache): Add parameter clear_fonts_p.
	(Fclear_face_cache): Add optional parameter thorougly.

	* xfaces.c (face_numeric_value): Return -1 if symbol is not
	in table.
	(Fclear_face_cache): New.
	(choose_face_fontset_font): If fontset doesn't contain font
	pattern for the given charset, use CHARSET_ASCII.
	(Finternal_set_lisp_face_attribute): Fix handling of nil
	stipple attribute.
	(Finternal_set_lisp_face_attribute): Fix handling of changing
	font-related face attributes of the default face.
	(set_lface_from_font_name): Set only attributes that aren't
	specified.

1999-05-31  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (SCALABLE_FONTS): Define this to enable scalable
	font support.
	(Vscalable_fonts_allowed) [SCALABLE_FONTS]: New.
	(x_face_list_fonts): Add parameter scalable_fonts_p.  Handle
	scalable fonts depending on the setting of SCALABLE_FONTS.
	(first_font_matching): List more than one font to find the
	first non-scalable matching font.
	(sorted_font_list): Let x_face_list_fonts return scalable fonts
	depending on SCALABLE_FONTS.
	(better_font_p): New parameter compare_pt_p.  If zero, don't
	compare point sizes of fonts.
	(exact_face_match_p) [SCALABLE_FONTS]: New.
	(build_scalable_font_name) [SCALABLE_FONTS]: New.
	(may_use_scalable_font_p) [SCALABLE_FONTS]: New.
	(best_matching_font) [SCALABLE_FONTS]: Handle scalable fonts.
	(syms_of_xfaces): Add scalable-fonts-allowed.

1999-05-26  Gerd Moellmann  <gerd@gnu.org>

	* xfns.c (png_load): Let PNG lib handle gamma.  Construct
	mask only if image contains simple transparency information.
	Otherwise, combine image with frame background color.

	* configure.in (--with-png, HAVE_PNG): New.

	* config.in (HAVE_PNG): New.

	* Makefile.in: Add PNG library.

	* xfns.c: Add PNG support.

1999-05-25  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (init_xdisp): Initialize echo_area_message and
	previous_echo_area_message to nil.

	* keyboard.c (read_char): Rename local variable echo_area_message
	because it shadows the global one.

1999-05-05  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (note_mode_line_highlight): Restructured.

	* window.c (coordinates_in_window): Handle windows that don't have
	a mode line because their buffer's mode-line-format is nil.
	Recognize the mode line under x positions that correspond to
	flags areas and left scroll bar.

1999-05-02  Dave Love  <fx@gnu.org>

	* xterm.c (note_mouse_highlight): Separate help-echo processing
	from check on mouse-face so that it works generally.

1999-04-21  Gerd Moellmann  <gerd@gnu.org>

	* sound.c (Fplay_sound): Run hook play-sound-hook.
	(Qplay_sound_hook): New.

1999-04-20  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (update_echo_area): Handle echo_area_message.

1999-04-19  Gerd Moellmann  <gerd@gnu.org>

	* editfns.c (Fmessage): Use message3.

	* print.c (printchar): Set echo_area_message to nil.
	(strout): Ditto.

	* minibuf.c (read_minibuf): Reset echo message strings to nil.
	(Fminibuffer_completion_help): Ditto.

	* keyboard.c (cmd_error_internal): Set echo_area_message.
	(command_loop_1): Test echo_area_message.
	(read_char): Ditto.
	(record_menu_key): Set echo_area_message to nil.
	(Fexecute_extended_command): Test echo_area_message.
	(Fexecute_extended_command): Handle echo_area_message.

	* fileio.c (Fdo_auto_save): Handle the case that echo_area_message
	is set.

	* editfns.c (Fcurrent_message): If echo_area_message is set,
	return a substring of that string.

	* dispnew.c (direct_output_for_insert): Test echo_area_message
	in addition to echo_area_glyphs.
	(set_window_cursor_after_update): Ditto.
	(update_frame_1): Ditto.

	* alloc.c (Fgarbage_collect): Use message3_nolog to display
	old Lisp message string.

	* xdisp.c (echo_area_message): New.
	(previous_echo_area_message): New.
	(syms_of_xdisp): Initialize and staticpro new variables.
	(echo_area_display): Display echo_area_message if set.
	(message2_nolog): Set echo_area_message and
	previous_echo_area_message.
	(echo_area_display): Set previous_echo_area_message.
	(redisplay_internal): Display echo area if echo_area_message
	or previous_echo_area_message are set.
	(redisplay_preserve_echo_area): Test/set echo_area_message and
	previous_echo_area_message.
	(redisplay_window): Test echo_area_message.
	(message3_nolog): New.
	(message3): New.

	* editfns.c (Fformat): Add text properties to the result string
	from properties of the format string and properties of string
	arguments.

	* textprop.c (text_property_list): New.
	(add_text_properties_from_list): New.
	(extend_property_ranges): New.

1999-03-29  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (Qraised, Qsunken, QCshadow): Removed.
	(QCline_width, QCstyle, Qpressed_button, Qreleased_button): New.
	Use these symbols for the box face attribute instead of the
	removed ones.

1999-03-12  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (realize_tty_face): Don't set alt_char_p of face.
	Correct wrong test for slant.

1999-03-10  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c: Use `unspecified' for unspecified face attributes,
	use t and nil for on/off.

1999-03-06  Gerd Moellmann  <gerd@gnu.org>

	* buffer.c (syms_of_buffer): Extend doc string of
	mode-line-format.

	* xfaces.c (x_face_list_fonts): New parameter try_alternatives_p.
	(first_font_matching): New.
	(set_lface_from_font_name): Use it if font name is a pattern.
	(font_field_wildcard_p): Removed.

	* dispnew.c (shift_glyph_matrix): Add `window' parameter.
	Recompute visible height of rows.

	* xterm.c (note_mouse_highlight): Reorder code for help-echo.
	Don't accept non-strings for help-echo from overlays.

1999-03-04  Dave Love  <fx@gnu.org>

	* xterm.c (note_mouse_highlight): Check overlays for help-text
	property.
	(XTread_socket): Fix compiler warning.

1999-03-05  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (note_mouse_highlight): Don't restrict number of
	overlay to 10.  Call overlays_at so that it doesn't try to
	extend the vector.

	* xdisp.c (compute_line_metrics): Compute glyph row's visible
	height.

	* dispnew.c (row_equal_p): Compare visible row height, only.
	(update_text_area): Draw whole line if visible heights of
	rows differ.
	(update_window_line): Call after_update_window_line_hook
	if visible row height has changed.

	* dispextern.h (MATRIX_ROW_VISIBLE_HEIGHT): Removed.
	(struct glyph_row): New member visible_height.

	* xfaces.c (font_field_wildcard_p): New.
	(set_lface_from_font_name): Remove parameter force_p.  Accept
	font names containing wildcards.

1999-03-04  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (x_after_update_window_line): Clear internal border
	when windows_or_buffers_changed.

	* dispextern.h (WINDOW_WANTS_MODELINE_P): Return zero if window's
	buffer has a nil mode_line_format.

1999-03-03  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (x_setup_relief_colors): Use either background color
	or specified color.

	* xfaces.c (realize_x_face): Set face->use_box_color_for_shadows_p.

	* dispextern.h (struct face): Add use_box_color_for_shadows_p.

	* xterm.c (x_draw_box_rect): New.
	(x_draw_glyph_string_box): Renamed from
	x_draw_glyph_string_relief.  Call x_draw_box_rect.

	* xfns.c (QCrelief): New.
	(syms_of_xfns): Initialize it.

	* dispextern.h (struct glyph): Rename left_shadow_p to
	left_box_line_p, right_shadow_p to right_box_line_p.
	(MAX_RELIEF_THICKNESS): Removed.
	(struct it): Rename members having `relief' in their names
	to contain `box' instead.

	* xfaces.c (realize_x_face): Handle new box attribute values.
	(QCrelief, Qbox): Removed.
	(QCshadow, QCcolor, Qraised, Qsunken): New.
	(syms_of_xfaces): Initialize new symbols.

1999-03-02  Gerd Moellmann  <gerd@gnu.org>

	* dispextern.h (LFACE_RELIEF_INDEX): Removed.

	* xfaces.c (LFACE_RELIEF): Removed.
	(merge_face_vector_with_property): Remove handling of `:relief'.
	(Finternal_set_lisp_face_attribute): Ditto.
	(Finternal_set_lisp_face_attribute_from_resource): Ditto.
	(Finternal_get_lisp_face_attribute): Ditto.
	(realize_default_face): Ditto.
	(lface_hash): Don't compute hash from relief.

	* dispextern.h (struct face): Replace member `relief' by
	`box_line_width'.  Add member `box'.
	(face_box_type): New.

	* xterm.c (x_produce_glyphs): If face has overline, add overline
	thickness + 1 to ascent.

1999-03-01  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (x_draw_glyph_string): Draw underline, overline,
	strike-through, and boxes.
	(x_draw_glyph_string_underline): Removed.

	* xfaces.c (QCoverline, QCstrike_through, QCbox): New.
	(Qoverline, Qstrike_through, Qbox): New.
	(syms_of_xfaces): Define these symbols.
	(check_lface_attrs): Add checks for overline, strike-through,
	and box.
	(Finternal_set_lisp_face_attribute): Set new attributes.
	(LFACE_OVERLINE, LFACE_STRIKE_THROUGH, LFACE_BOX): New.
	(load_color): Handle new attributes.
	(realize_x_face): Ditto.
	(merge_face_vector_with_property): Ditto.
	(free_face_colors): Ditto.
	(Finternal_set_lisp_face_attribute_from_resource): Ditto.
	(Finternal_get_lisp_face_attribute): Ditto.
	(Finternal_lisp_face_attribute_values): Ditto.

	* dispextern.h (lface_attribute_index): Add enumerators for
	overstrike, strike-through, and box.
	(struct face): Add members for overline, strike-through, and
	box.

1999-02-17  Dave Love  <fx@gnu.org>

	* s/gnu-linux.h s/gnu.h s/irix5-0.h s/netbsd.h s/sco4.h s/sco5.h
	s/template.h (NARROWPROTO): Define on the basis of relevant X cf
	files.

1999-02-16  Gerd Moellmann  <gerd@gnu.org>

	* keyboard.c (toolbar_items): Call access_keymap with third
	parameter 1, so that we don't get inherited toolbar item
	definitions.

	* xdisp.c (redisplay_internal): In optimization 1, don't decrement
	the window end vpos when in empty first line of window.

1999-02-15  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (set_font_frame_param): New.
	(Finternal_set_lisp_face_attribute): Call it.

1999-02-14  Masatake Yamato  <masata-y@is.aist-nara.ac.jp>

	* xfaces.c (Finternal_set_lisp_face_attribute_from_resource):
	Accept specifications of color for underline.

1999-02-13  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (Finternal_set_lisp_face_attribute): If parameter
	`frame' is t, operate on face defaults for new frames.  If it
	is nil, operate on the selected frame.

1999-02-12  Gerd Moellmann  <gerd@gnu.org>

	* dispnew.c (check_matrix_invariants): Put it in #if 0.
	(update_window): Put the call to check_matrix_invariants in #if 0.

1999-02-07  Masatake Yamato  <masata-y@is.aist-nara.ac.jp>

	* dispextern.h: Remove all else block of UNDERLINE_COLOR.
	Remove definition of UNDERLINE_COLOR.

1999-01-04  Masatake Yamato  <masata-y@is.aist-nara.ac.jp>

	* xfaces.c (free_face_colors): Free the color for underline.

	* xterm.c (x_draw_glyph_string_underline): Set the color for underline
	to the GC.

1999-01-03  Masatake Yamato  <masata-y@is.aist-nara.ac.jp>

	* dispextern.h (UNDERLINE_COLOR): Defined.
	(struct face): Added two new members.
	underline_color, underline_defaulted_p.

	* xfaces.c (merge_face_vector_with_property):
	(check_lface_attrs): Accept the string value for underline.
	(Finternal_set_lisp_face_attribute): Likewise.

	* xfaces.c (load_color): Change the last argument type to enum
	lface_attribute_index from int.  And add code for underling coloring.
	(load_face_colors): Pass LFACE_*_INDEX to load_color.

1999-02-12  Gerd Moellmann  <gerd@gnu.org>

	* xfns.c (Fx_image_header): Removed.

1999-02-07  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c: Don't include <bitmaps/gray>.
	(x_term_init): Use gray_bitmap_width and gray_bitmap_height.

	* xfns.c (Fx_image_header): Add missing `\n\'.
	(gray_bitmap_width, gray_bitmap_height, gray_bitmap_bits): New.

1999-02-01  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (x_scroll_bar_create): Set background pixel from
	specified scroll bar color.
	(x_scroll_bar_set_handle): Use scroll bar foreground color.

	* xfns.c (x_set_scroll_bar_foreground): Remove all scroll bars.
	(x_set_scroll_bar_background): Ditto.

	* xterm.c (x_create_toolkit_scroll_bar): Set scroll bar colors.

	* xfns.c (x_default_scroll_bar_color_parameter): New.
	(Fx_create_frame): Call it.

1999-01-31  Gerd Moellmann  <gerd@gnu.org>

	* xfns.c (Fx_create_frame): Initialize scroll bar pixel color
	values in x_output structure.
	(Qscroll_bar_foreground, Qscroll_bar_background): New.
	(syms_of_xfns): Initialize these symbols.

	* xterm.h (struct x_output): Add scroll bar pixel colors.

	* xfns.c (x_frame_parms): Add entries for scroll bar colors.
	(x_set_scroll_bar_foreground): New.
	(x_set_scroll_bar_background): New.

1999-01-12  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (handle_single_display_prop): New.
	(handle_display_prop): Call it.
	(handle_raise_prop): Removed.
	(handle_height_prop): Removed.
	(handle_space_width_prop): Removed.
	(handle_face_prop): Remove handling of raised text.
	(handle_display_prop): Do it here.

	* dispextern.h (DISPLAY_PROP_IDX): Replaces GLYPH_PROP_IDX.
	(RAISE_PROP_IDX): Removed.
	(HEIGHT_PROP_IDX): Removed.
	(SPACE_WIDTH_PROP_IDX): Removed.

	* xdisp.c (Qdisplay): Replaces Qglyph.
	(handle_display_prop): Formerly handle_glyph_prop.

1999-01-11  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (reseat_to_string): Set position in display vector to -1.
	(handle_stop): Set position in display vector to -1.  Don't
	check overlay strings when set up to deliver characters from a
	display vector.
	(set_iterator_to_next): At the end of a run of characters from a
	display vector, check whether the display vector display replaces
	the display of a character.

1999-01-05  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (init_frame_faces): Don't realize faces if frame's
	X window hasn't been created yet.

1998-12-06  Gerd Moellmann  <gerd@gnu.org>

	* sound.c: New.

1998-12-04  Gerd Moellmann  <gerd@gnu.org>

	* config.in (HAVE_SOUND): New.

	* emacs.c (main): Call syms_of_sound and init_sound.

	* Makefile.in (obj): Add sound.o.

	* configure.in: Add checks for machine/soundcard.h and sys/soundcard.h.

	* config.in (HAVE_MACHINE_SOUNDCARD_H): New.
	(HAVE_SYS_SOUNDCARD_H): New.

1998-12-03  Gerd Moellmann  <gerd@gnu.org>

	* buffer.h (struct buffer): indicate_empty_lines renamed from
	indicate_zv_lines.

	* buffer.c (indicate-empty-lines): Renamed from indicate_zv_lines.
	(default-indicate-zv-lines): Likewise.

	* dispextern.h (struct glyph_row): Rename indicate_zv_line_p
	to indicate_empty_line_p.

	* xdisp.c (reseat_at_next_visible_line_start): Reset method
	to next_element_from_buffer.

	* frame.c (make_frame): Set n_current_toolbar_items to 0.

	* xdisp.c (handle_face_prop): Allow symbols of the form `N+'
	and `N-'.

	* xfns.c (xbm_scan): New.
	(xbm_read_hexint): Removed.
	(xbm_read_bitmap_file_data): Use xbm_scan.

	* fileio.c (Finsert_file_contents): Prevent redisplay optimizations.

1998-12-02  Gerd Moellmann  <gerd@gnu.org>

	* xfns.c (xbm_read_hexint): New.
	(xbm_read_bitmap_file_data): New.
	(xbm_load_image_from_file): Call xbm_read_bitmap_file_data
	instead of XReadBitmapFileData.

	* xdisp.c (handle_raise_prop): Compute voffset from current font.

	* xfaces.c (face_with_height): New.

	* xdisp.c (eval_handler): Renamed from eval_mode_handler.
	(eval_form): Renamed from eval_mode_element.
	(handle_face_prop): Use it.
	(Qheight): Replaces Qsmaller.
	(handle_height_prop): Replaces handle_smaller_prop.
	(handle_face_prop): If iterator's font_height is not an
	integer, evaluate it to get the font height to use.

	* dispextern.h (HEIGHT_PROP_IDX): Replaces SMALLER_PROP_IDX.
	(struct it): Use `font_height' instead of `smaller'.

1998-12-01  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (reseat_1): New.
	(reseat): Call it.
	(move_it_vertically_backward): Ditto.
	(redisplay_window): Don't abort when cursor not found in recenter.

1998-11-30  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (reseat_at_next_visible_line_start): When not
	currently delivering display elements from the current buffer,
	restore buffer position first.
	(init_from_display_pos): Don't set IT's position from the
	position passed to this function.

1998-11-28  Gerd Moellmann  <gerd@gnu.org>

	* config.in (PROTO): Removed.

	* xterm.h: Change PROTO to P_.

1998-11-26  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (take_vertical_position_into_account): New.
	(x_produce_image_glyph): Call it.
	(x_produce_stretch_glyph): Ditto.
	(x_produce_glyphs): Ditto.
	(x_fill_glyph_string): Adjust base line for glyph's voffset.
	(x_fill_composite_glyph_string): Ditto.
	(x_fill_image_glyph_string): Ditto.
	(x_fill_stretch_glyph_string): Ditto.

	* xdisp.c (display_line): Always compute row height from
	max_ascent and max_descent.

	* dispextern.h (struct glyph): Add voffset.
	(struct it): Replace height by descent, max_height by max_descent.

	* xterm.c (x_append_glyph): Set voffset.
	(x_append_stretch_glyph): Ditto.
	(x_produce_image_glyph): Ditto.
	(x_produce_glyphs): Take voffset into account.
	(x_produce_image_glyph): Ditto.
	(x_produce_stretch_glyph): Ditto.

	* dispextern.h (struct it): Add voffset.
	* xdisp.c (push_it): Save voffset.
	(pop_it): Restore it.

	* xdisp.c (it_props): Add entry for `raise'.
	(handle_raise_prop): New.

	* dispextern.h (RAISE_PROP_IDX): New.

	* xdisp.c (Qraise): New.
	(syms_of_xdisp): Define Qraised.

	* xterm.c (x_scroll_bar_move): Clear to the left and right
	of toolkit scroll bars differently.
	(x_scroll_bar_move): Removed.
	(XTset_vertical_scroll_bar): Move code from x_scroll_bar_move here.

	* dispextern.h: Make it compilable --with-x=no.
	* alloc.c: Ditto.
	* emacs.c: Ditto.
	* dispnew.c: Ditto.
	* keyboard.c: Ditto.
	* term.c: Ditto.
	* xdisp.c: Ditto.
	* xfaces.c: Ditto.
	* xfns.c: Ditto.
	* xmenu.c: Ditto.

1998-11-25  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (XTread_socket): Cancel help-echo when leaving frame.

1998-11-24  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (x_set_toolkit_scroll_bar_thumb): When dragging,
	update slider size, only.
	(xm_scroll_callback): Set dragging member of the scroll bar.
	(xt_action_hook): Reset last_scroll_bar_part.
	(XTredeem_scroll_bar): Reset bar->dragging to nil.

	* xfns.c (Fx_hide_busy_cursor): Don't try to hide busy cursor
	window on newly created frames that don't have one.

1998-11-23  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (restore_overlay_strings): Removed.
	(restore_dpvec): Removed.
	(init_from_display_pos): Inline both functions above.

	* xfns.c (IMAGE_NON_NEGATIVE_INTEGER_VALUE): New.
	(parse_image_spec): Handle it.
	(xbm_format): Use it.
	(xpm_format): Ditto.
	(pbm_format): Ditto.
	(jpeg_format): Ditto.
	(tiff_format): Ditto.
	(gif_format): Ditto.
	(gs_format): Ditto.

	* xdisp.c (set_window_cursor): Removed.
	(redisplay_internal): Case cursor motion in cursor line of
	selected window; use set_cursor_from_row.

1998-11-22  Gerd Moellmann  <gerd@gnu.org>

	* widget.c (EmacsFrameSetCharSize): Take widget's border width
	into account.

1998-11-21  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (expose_frame): Redraw menu bar window.

	* xdisp.c (display_menu_bar): Record hpos instead of x-position
	in menu item.

	* dispnew.c (change_frame_size_1): Use FRAME_TOP_MARGIN instead
	of FRAME_TOOLBAR_LINES.  Use `f' instead of `frame'.

	* widget.c (set_frame_size): Use FRAME_SCROLL_BAR_COLS
	to determine vertical_scroll_bar_extra.
	(EmacsFrameSetCharSize): Ditto.
	* xfns.c (x_figure_window_size): Ditto.

	* xterm.c (x_draw_row_bitmaps): Draw in `bitmap-area' face.
	(x_draw_bitmap): Ditto.

	* dispextern.h (face_id): New id BITMAP_AREA_FACE_ID.
	* xfaces.c (realize_basic_faces): Realize it.

1998-11-20  Gerd Moellmann  <gerd@gnu.org>

	* xmenu.c (xmenu_show): Add workaround for remaining button grab
	under LessTif   Use the widget of the frame as parent for the
	menu, again.

1998-11-19  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (XTread_socket): Inhibit busy cursor for EnterNotify.
	When EnterNotify, don't generate a mouse movement event if
	notification is from a busy-cursor child window.

	* xterm.h (struct x_output): Add busy_window, remove cursor.

	* xfns.c (Fx_show_busy_cursor): Formerly Fx_display_busy_cursor.
	Use a transparent window to display the busy-cursor.
	(Fx_hide_busy_cursor): Formerly Fx_undisplay_busy_cursor.

1998-11-17  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (check_window_end): New, for debugging.
	(CHECK_WINDOW_END): New.
	(try_window_id): Use it.

	* xterm.c (process_expose_from_menu): Return int.

	* keyboard.c (kbd_buffer_get_event): Set flag to prevent recording
	TOOLBAR_EVENT events in last_nonmenu_event.

1998-11-16  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (redisplay_window): If windows_or_buffers_changed,
	window end isn't reliable, so set window_end_valid to nil.
	(redisplay_internal): If overlay arrow has changed, set
	windows_or_buffers_changed to redisplay thoroughly.

	* dispnew.c (adjust_glyph_matrix): Invalidate window end, if
	necessary.

	* xfns.c (file_dialog_cb): New.
	(Fx_file_dialog): New.
	* fileio.c (Fread_file_name): Call it.

	* xrdb.c (x_load_resources): Add default resources for file
	selection dialog.

1998-11-14  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (note_mouse_highlight): Don't highlight when popup
	is active.

	* keyboard.c (timer_check): Inhibit busy cursor around calls to
	timer-event-handler.  This busy cursor tends to be annoying if
	fontifying stealthily.

	* dispnew.c (direct_output_for_insert): Give up if current row
	contains trailing whitespace.

1998-11-13  Gerd Moellmann  <gerd@gnu.org>

	* dispextern.h (prop_idx): Add FONTIFIED_PROP_IDX.

	* xdisp.c (handle_fontified_prop): New.
	(Vfontification_functions): New.
	(Qfontification_functions): New.
	(it_props): Add handle_fontified_prop.

1998-11-12  Gerd Moellmann  <gerd@gnu.org>

	* xmenu.c (xmenu_show): Use the frame's edit_widget as parent.
	Otherwise, under LessTif, after the popup has gone, all button
	press events come in for the frame's widget, and release events
	come in for the edit_widget.
	* xterm.c (XTread_socket): Remove workaround for that problem.
	(x_set_toolkit_scroll_bar_thumb): Add workaround for LessTif
	XmScrollBarSetValues.
	(SET_SAVED_MENU_EVENT): Give it statement form.

	* xfaces.c (display_message): If waiting_for_input, don't display
	the message.

	* window.c (scroll_command): If not acting on current_buffer,
	make redisplay consider all windows.

	* xfns.c (Fx_hide_tip): Return t if tooltip was open.

	* xdisp.c (handle_glyph_prop): Set it->object for images to
	the object having the glyph property.

	* xterm.c (x_draw_row_bitmaps): Don't draw if row is completely
	invisible.

1998-11-11  Gerd Moellmann  <gerd@gnu.org>

	* xterm.h (struct x_display_info): Add gray pixmap.
	* xterm.c (x_term_init): Create the gray pixmap.
	(x_setup_relief_color): Use it.
	(x_get_glyph_string_clip_rect): Draw a toolbar window over the
	internal border at the top of a frame.
	(x_init_glyph_string): Likewise.
	(x_draw_glyph_string_relief): Correct right x by 1 pixel for
	full-width lines.
	(XTflash): Don't flash the toolbar window.

	* xterm.c (XTread_socket): Workaround for LessTif popup menus
	in case of ButtonPress events.

1998-11-10  Gerd Moellmann  <gerd@gnu.org>

	* xrdb.c (x_load_resources): Add gray background colors as
	defaults for menus, scroll bars, and dialogs.

	* insdel.c (prepare_to_modify_buffer): Move setting
	windows_or_buffers_changed from modify_region here.

	* xfns.c (Fx_show_tip): Inhibit redisplay.
	(Fx_hide_tip): Ditto.
	(Fx_image_header): New.

1998-11-09  Gerd Moellmann  <gerd@gnu.org>

	* dispnew.c (clear_window_matrices): Set window_end_valid to nil
	when clearing current window matrices.

1998-11-08  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (handle_glyph_prop): Don't set an iterator's buffer
	position from a string position.  Use the right end position
	if the property spans a whole overlay string.

1998-11-07  Gerd Moellmann  <gerd@gnu.org>

	* xmenu.c (menubar_selection_callback): Remove workaround for
	Lesstif not calling XmNpopdownCallback because it doesn't
	handle the case where users don't select any menu item.

	* insdel.c (modify_region): Set windows_or_buffers_changed.

	* buffer.c (set_buffer_internal): Don't set
	windows_or_buffers_changed.

	* xmenu.c (HAVE_BOXES): Define if USE_X_TOOLKIT.

	* xmenu.c (menubar_selection_callback): Add workaround for
	Lesstif not calling XmNpopdownCallback.

	* xdisp.c (eval_mode_element): New.
	(eval_mode_handler): New.
	(display_mode_element): Use eval_mode_element.

	* xdisp.c (display_mode_element): Allow `(:eval FORM)'.
	Remove code looking at text props of default value.

	* xmenu.c (HAVE_BOXES): Define if using Lucid menus.

1998-11-06  Gerd Moellmann  <gerd@gnu.org>

	* xmenu.c (single_submenu): Set button_type of menu to
	BUTTON_TYPE_NONE.
	(single_submenu): Likewise for panes and menu items.
	(set_frame_menubar): Set button_type of menu bar to none.
	(xmenu_show): Likewise.
	(single_submenu): Set widget values selected slot.
	(xmenu_show): Likewise.

	* xmenu.c (push_menu_item): Add parameters `type' and
	`selected'.  Store it in menu_items.
	(MENU_ITEMS_ITEM_TYPE): New.
	(MENU_ITEMS_ITEM_SELECTED): New.
	(MENU_ITEMS_ITEM_LENGTH): Increase by two.

	* xfns.c (clear_image_cache): Get the current time, before
	doing anything.
	(cache_image): Set prev pointer of next image.
	(clear_image_cache): Clear current matrices if any image was
	freed.

	* xterm.c (XTread_socket): Set inhibit_busy_cursor.

	* xfns.c (x_set_cursor): New.
	(Fx_display_busy_cursor): New.
	(Fx_undisplay_busy_cursor): New.

	* xterm.h (struct x_output): Add busy_cursor.

	* xfns.c (Vx_busy_pointer_shape): New.
	(x_set_mouse_color): Create busy cursor.

	* process.c (wait_reading_process_input): Show and hide busy
	cursor.

	* keyboard.c (command_loop_1): Display busy cursor.

	* eval.c (Fsignal): Hide busy cursor.

	* buffer.c (set_buffer_internal): Don't set
	windows_or_buffers_changed.

	* xterm.c (redo_mouse_highlight): New.

1998-11-04  Gerd Moellmann  <gerd@gnu.org>

	* xfns.c (x_create_x_image_and_pixmap): Add depth parameter.
	(x_build_heuritic_mask): New.
	(lookup_image): Call it.

	* xterm.c (note_toolbar_highlight): Always set up help_echo.
	(previous_help_echo): New.
	(XTread_socket): Generate help event with nil message when
	leaving a region with help-echo.
	(note_mouse_highlight): Handle `help-echo' over text.
	(XTread_socket): Dispatch VisibilityNotify, CirculateNotify,
	CirculateRequest.
	(clear_mouse_face): Don't clear if tooltip is shown.
	(XTread_socket): Redo mouse-highlight after tooltip is gone.
	Avoid SET_FRAME_GARBAGED when tooltip is mapped.

	* keyboard.c (Vshow_help_function): New.
	(read_char): Use it.

1998-11-03  Gerd Moellmann  <gerd@gnu.org>

	* xfns.c (x_create_tip_frame): New.
	(Fx_show_tip): New.
	(Fx_hide_tip): New.

	* xterm.c (x_destroy_window): Handle case that we don't have
	a widget.

	* dispextern.h (struct glyph_row): Rename no_marginal_areas_p
	to full_width_p.  Add internal_border_p.

1998-11-02  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (note_mode_line_highlight): Check the charpos of
	the glyph under the mouse pointer before accessing text
	properties at that position.

1998-11-01  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (x_draw_image_relief): Handle toolbar_button_relief.

	* xdisp.c (auto-raise-toolbar-buttons): New.
	(build_desired_toolbar_string): Handle the flag.
	(toolbar-button-margin): New.
	(toolbar-button-relief): New.
	(build_desired_toolbar_string): Use margin and relief.

	* xterm.c (x_set_toolkit_scroll_bar_thumb): Remove workaround
	for FreeBSD.
	(note_mode_line_highlight): New.
	(note_mouse_highlight): Call it.

1998-10-31  Gerd Moellmann  <gerd@gnu.org>

	* s/freebsd.h (NARROWPROTO): New.

	* xdisp.c (display_string): New parameter face_string.
	(display_mode_element): When displaying a symbol with a string
	value, use text properties from the symbol's default value, maybe.

	* xrdb.c (x_load_resources): Add font defaults for menus and
	dialogs.

1998-10-30  Gerd Moellmann  <gerd@gnu.org>

	* xfns.c (Fx_create_frame): Try 12pt Courier font first.

1998-10-29  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (x_produce_glyphs): Fix bug causing glyphs to be
	produced for characters with codes < 32 under certain
	circumstances.

	* xdisp.c (redisplay_window): Handle values of PT in front
	of invisible, intangible text.
	(try_window_id): Set overlay_arrow_seen to zero before
	displaying lines.
	(display_mode_element): Assign to glyphs written for a mode
	line spec `%x' as object the Lisp format string, as position
	the position of the `%' in that string.
	(display_string): If displaying a C string, optionally get
	the face to use from a Lisp string.

	* xterm.c (expose_window_tree): Include mode line height.

	* xfns.c (Fx_create_frame): Add toolbar height to frame height.

1998-10-27  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (note_mouse_highlight): Change mouse pointer shape
	over mode line.

1998-10-26  Gerd Moellmann  <gerd@gnu.org>

	* window.c (coordinates_in_window): Use CURRENT_MODE_LINE_HEIGHT.

	* xdisp.c (redisplay_window): If mode line height has changed,
	arrange for a thorough immediate redisplay using the correct mode
	line height.
	(window_box_height): Use CURRENT_MODE_LINE_HEIGHT.

	* dispextern.h (MATRIX_MODE_LINE_HEIGHT): New.
	(CURRENT_MODE_LINE_HEIGHT): New.
	(DESIRED_MODE_LINE_HEIGHT): New.

	* keyboard.c (make_lispy_event): Add string and string position
	info to mouse-click events.
	(read_key_sequence): Handle `local-map' property of mode line
	strings.

	* keyboard.h (POSN_STRING): New.

1998-10-25  Gerd Moellmann  <gerd@gnu.org>

	* dispnew.c (mode_line_string): Mew.

	* xterm.c (xt_action_hook): New.
	(x_create_toolkit_scroll_bar): Add action hook.
	(xm_scroll_callback): Implement dragging.

	* keyboard.c (Qend_scroll): New.
	(scroll_bar_parts): Add it.

	* termhooks.h (scroll_bar_end_scroll): New.

	* xterm.c (XTread_socket): Bug fix.

1998-10-24  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (redisplay_window): Finish scroll bars after
	redisplaying toolbar.

	* keyboard.c (scroll_bar_parts): Add Qtop and Qbottom.
	(syms_of_keyboard): Add Qbottom.

	* termhooks.h (scroll_bar_to_top): New.
	(scroll_bar_to_bottom): New.

	* xdisp.c (redisplay_window): Always resize toolbar window if
	auto_resize_toolbar_p is non-zero.
	(auto_resize_toolbar_p): Renamed from auto_resize_toolbar.
	(window_box): New.
	(window_box_height): New.
	(window_box_width): New.
	(window_box_left): New.
	(window_box_right): New.
	(window_box_edges): New.

1998-10-23  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (x_set_toolkit_scroll_bar_thumb): Kluge for call to
	XawScrollbarSetThumb in FreeBSD.
	(x_create_toolkit_scroll_bar): Set resource "beNiceToColormap"
	to true.

	* window.c (get_phys_cursor_glyph): Return null if cursor vpos
	is out of range.

	* xterm.c (x_create_toolkit_scroll_bar): Set scroll_bar_pixel.
	(x_term_init): Initialize it.

	* xterm.h (struct x_display_info): Add scroll_bar_pixel.

	* xterm.c (x_create_toolkit_scroll_bar): Set LessTif scroll bar's
	cursor.

1998-10-22  Gerd Moellmann  <gerd@gnu.org>

	* keyboard.c (make_lispy_event): Handle scroll_bar_click
	differently when using toolkit scroll bars.

	* xterm.c (x_send_scroll_bar_event): New.
	(x_scroll_bar_to_input_event): New.
	(xaw3d_scroll_callback): New.
	(xaw3d_jump_callback): New.
	(xm_scroll_callback): New.
	(x_toolkit_scroll_p): New.
	(XTread_socket): Handle scroll bar client message.
	(x_term_init): Initialize Xatom_Scrollbar.
	(x_scroll_bar_create): Set cursor.
	(xm_scroll_callback):
	(x_create_toolkit_scroll_bar): New.
	(x_set_toolkit_scroll_bar_thumb): New.
	(x_scroll_bar_create): Call x_create_toolkit_scroll_bar.
	(XTset_vertical_scroll_bar): Call x_set_toolkit_scroll_bar_thumb.

	* xterm.h (struct x_display_info): Add Xatom_Scrollbar.

1998-10-21  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (x_scroll_bar_remove): Handle toolkit scroll bars.
	(XTread_socket): Don't handle mouse button events for scroll bars
	if using toolkit scroll bars.
	(XTset_vertical_scroll_bar): Set thumb size and position for
	Athena scroll bar.

	* xterm.h (scroll_bar): Add x_widget_low and x_widget_high.

	* xterm.c (XTread_socket): Dispatch expose event to widget
	if using toolkit scroll bars.
	(x_scroll_bar_expose): Make no-op for toolkit scroll bars.
	(x_scroll_bar_create): Create and show a scroll bar widget
	if using toolkit scroll bars.
	(x_scroll_bar_move): Handle tookit scroll bars.

	* Makefile.in (LIBW): Use Xaw3d if present.

	* configure.in (USE_TOOLKIT_SCROLL_BARS): New.
	(HAVE_XAW3D): New.

	* config.in (USE_TOOLKIT_SCROLL_BARS): New.
	(HAVE_XAW3D): New.

	* xterm.c (XTset_vertical_scroll_bar): Correct position of
	right vertical scroll bar.

1998-10-20  Gerd Moellmann  <gerd@gnu.org>

	* xfns.c (xpm_load): Support reading XPM images from string
	buffers containing data in the same format as an XPM file.
	Support `:color-symbols'.
	(xpm_format): Add `:data'.
	(xpm_keyword_index): Add XPM_DATA.
	(syms_of_xfns): Add `:color-symbols'.
	(xpm_keyword_index): Add XPM_COLOR_SYMBOLS.
	(xpm_valid_color_symbols_p): New.
	(xpm_image_p): Call it.

	* xdisp.c (build_desired_toolbar_string): Add `:algorithm'
	attribute to the image if item is not enabled.

	* xfns.c (x_laplace): New.
	(x_laplace_read_row): New.
	(x_laplace_write_row): New.
	(lookup_image): Handle common image attributes here.  New
	attribute `:algorithm'.

	* xfaces.c (clear_face_cache): Call clear_image_cache.

	* xterm.c (x_inverted_image_mask): Removed.
	(x_draw_image_foreground_1): New.
	(x_draw_image_glyph_string): Draw images with mask to a temporary
	pixmap to reduce flickering.

	* xdisp.c (redisplay_toolbar): Handle auto-resize-toolbars.
	(display_toolbar_line): Remove parameter `margin'.

1998-10-19  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (toolbar_lines_needed): New.
	(auto-resize-toolbars): New.

	* xfns.c (cache_image): Correct call to xrealloc.

	* dispnew.c (Fset_toolbar_height): Removed.

	* xdisp.c (init_xdisp): Use FRAME_TOP_MARGIN instead of
	FRAME_MENU_BAR_LINES.

	* window.c (Fdelete_other_windows): Use FRAME_TOP_MARGIN
	instead of FRAME_MENU_BAR_LINES.
	(check_frame_size): Ditto.

	* dispnew.c (adjust_frame_glyphs_initially): Use FRAME_TOP_MARGIN
	instead of FRAME_MENU_BAR_LINES.
	(adjust_frame_glyphs_for_frame_redisplay): Ditto.
	(build_frame_matrix): Ditto.
	(change_frame_size_1): Ditto.

	* frame.h (FRAME_TOOLBAR_LINES): New.
	(FRAME_TOP_MARGIN): New.

	* window.c (struct save_window_data): Add frame_toolbar_lines.
	(Fset_window_configuration): Handle toolbar lines.
	(Fcurrent_window_configuration): Save toolbar lines.

	* frame.c (syms_of_frame_1): Add Qtoolbar_lines.

	* xfns.c (Fx_create_frame): Add default parameter for toolbar.

	* frame.h (struct frame): Rename top_margin to toolbar_lines.

	* xfns.c (x_frame_parms): Add `toolbar-lines'.
	(x_set_toolbar_lines): New.

	* keyboard.c (cmd_error_internal): Bug fix.

	* xterm.c: Remove double include of syssignal.h.

1998-10-18  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (x_toolbar_item): New.
	(x_handle_toolbar_click): Use it.
	(note_toolbar_highlight): Use it.

	* keyboard.c (syms_of_keyboard): Staticpro toolbar_item_properties
	and toolbar_items_vectors.

	* xterm.c (help_echo): New.
	(draw_glyphs_face): Add DRAW_IMAGE_RAISED and DRAW_IMAGE_SUNKEN.
	(x_set_glyph_string_gc): Handle them.
	(x_after_update_window_line): Don't do anything in pseudo-windows.
	(x_produce_image_glyph): Take image margin and face relief into
	account.
	(x_get_glyph_string_clip_rect): Handle pseudo-windows.
	(x_draw_glyph_string_background): Optimize case when face has
	relief.
	(x_setup_relief_color): Take frame instead of glyph string
	parameter.
	(x_draw_relief_rect): New.
	(x_draw_glyph_string_relief): Call it.
	(x_draw_image_glyph_string_foreground): Handle margin and image
	relief.
	(x_draw_image_glyph_string_background): Ditto.
	(expose_frame): Redraw toolbar window.
	(expose_window): Don't draw cursor for pseudo-windows.
	(x_y_to_hpos_vpos): Handle pseudo-windows.
	(frame_to_window_pixel_xy): New.
	(note_mouse_highlight): Call note_toolbar_highlight.
	(x_handle_toolbar_click): New.
	(note_toolbar_highlight): New.
	(show_mouse_face): Change int parameter `hl' to parameter of
	type enum draw_glyphs_face.  Handle image highlighting.
	(XTread_socket): Return a HELP_EVENT input event if help_echo is
	non-nil.  Use x_handle_toolbar_click.

	* termhooks.h (event_kind): Add HELP_EVENT, TOOLBAR_EVENT.

	* xfns.c (image_value_type): Add IMAGE_INTEGER_VALUE,
	IMAGE_BOOL_VALUE.
	(parse_image_spec): Handle them.
	(image_spec_value): Additional parameter found.
	(free_image): Remove image from the vector `images' of the
	image cache.
	(clear_image_cache): Additional parameter force_p.
	(Fclear_image_cache): New.
	(x_find_image_file): New.
	(xbm_load): Handle `:margin' and `:relief'.  Use
	x_find_image_file.
	(xpm_load): Likewise.
	(pbm_load): Likewise.
	(jpeg_load): Likewise.
	(tiff_load): Likewise.
	(gif_load): Likewise.

	* keyboard.c (Qhelp_echo): New symbol.
	(read_char): Handle `toolbar' and `help_echo' events.
	(kbd_buffer_get_event): Handle HELP_ECHO input event.
	(make_lispy_event): Handle TOOLBAR_EVENT.
	(toolbar_items): New.
	(process_toolbar_item): New.
	(PROP): New.
	(init_toolbar_items): New.
	(append_toolbar_item): New.
	(read_char_x_menu_prompt): Handle `toolbar' event.
	(read_key_sequence): Ditto.

	* xfaces.c (Qtoolbar): New.
	(realize_basic_faces): Realize `toolbar' face.
	(face_at_string_position): Remove parameter modeline_p, add
	base_face_id.

	* xfns.c (xbm_load_image_from_file): Don't use Xmu function
	to read data.

1998-10-17  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (init_iterator): Replace parameter modeline_p with
	base_face_id.
	(next_element_from_string): Call get_next_display_element
	recursively after handling text properties.
	(prepare_menu_bars): Call update_toolbar.
	(update_toolbar): New.
	(build_desired_toolbar_string): New.
	(display_toolbar_line): New.
	(redisplay_toolbar): New.
	(toolbar_item_info): New.
	(redisplay_window): Call redisplay_toolbar.
	(Fdump_toolbar_row): New.  Defined if compiled with GLYPH_DEBUG.

	* dispnew.c (clear_current_matrices): Clear matrices of toolbar
	window.
	(clear_desired_matrices): Ditto.
	(adjust_frame_glyphs_for_window_redisplay): Make toolbar window.
	(free_glyphs): Free matrices of toolbar window.
	(update_frame): Update toolbar window.
	(change_frame_size_1): Take toolbar into account.
	(Fset_toolbar_height): New.

	* dispextern.h (struct it): Remove member modeline_p, add
	base_face_id.
	(struct image): Add members relief and margin.
	(IMAGE_ASCENT): Include margin in height.

1998-10-14  Gerd Moellmann  <gerd@gnu.org>

	* xfns.c (Fclear_image_cache): New.

	* xfaces.c (realize_basic_faces): Realize toolbar face.
	(face_at_string_position): Remove parameter modeline_p, add
	base_face_id.

	* dispextern.h (enum face_id): Add TOOLBAR_FACE_ID.

1998-10-13  Gerd Moellmann  <gerd@gnu.org>

	* keyboard.c (syms_of_keyboard): Intern `:help'.

1998-10-12  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (note_toolbar_highlight): New.
	(note_mouse_highlight): Call it.

	* window.c (window_from_coordinates): Additional parameter toolbar_p.
	(coordinates_in_window): Handle toolbar window.

	* keyboard.c (toolbar_items): New.
	(process_toolbar_item): New.
	(parse_toolbar_item): New.
	(init_toolbar_items): New.
	(append_toolbar_item): New.

	* dispextern.h (enum toolbar_item_idx): New.
	(enum toolbar_item_image): New.

	* frame.h (struct frame): Add toolbar-related members.

	* xfaces.c (face_at_string_position): Remove assertion that
	current_buffer == window's buffer.  This is not the case when
	called for the toolbar window.

	* frame.c (make_frame): Initialize toolbar members.

	* alloc.c (mark_object): Mark toolbar data of frames.

	* frame.h (struct frame): Add toolbar-related members
	toolbar_window, desired_toolbar_items, current_toolbar_items,
	desired_toolbar_string, current_toolbar_string,
	n_desired_toolbar_items, n_current_toolbar_items.  Add
	window_height.

	* xterm.c (x_after_update_window_line): Don't draw bitmap
	areas for pseudo-windows.
	(expose_frame): Handle toolbar window.
	(expose_window): Don't do cursor stuff for pseudo-windows.

	* xdisp.c (display_menu_bar): Correct calls to init_iterator.

1998-10-11  Gerd Moellmann  <gerd@gnu.org>

	* frame.c (make_frame): Initialize toolbar_window.

	* alloc.c (mark_object): Make the toolbar window.

	* dispnew.c (update_frame): Update frame's toolbar_window.
	(clear_current_matrices): Likewise.
	(clear_desired_matrices): Likewise.
	(adjust_frame_glyphs_for_window_redisplay): Make toolbar_window.
	(free_glyphs): Free the toolbar window and its matrices.

	* frame.h (struct frame): Add toolbar_window.

	* xterm.c (x_draw_glyph_string_relief): Handle mouse-face
	with relief.

1998-10-10  Gerd Moellmann  <gerd@gnu.org>

	* dispnew.c (buffer_posn_from_coords): Don't screw up if
	window start is not in the range BEGV..ZV.

1998-10-09  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (try_scrolling): Experimentally handle the case
	that scroll-preserve-screen-position is set to `always'.

	* window.c (Vscroll_preserve_screen_position): Replacement for
	scroll_preserve_screen_position.

1998-10-08  Gerd Moellmann  <gerd@gnu.org>

	* dispnew.c: Don't initialize auto structs; the HP/UX compiler
	doesn't like it.
	* xdisp.c: Ditto.

	* xdisp.c (make_cursor_line_fully_visible): Adjust this_line_y.

1998-10-06  Gerd Moellmann  <gerd@gnu.org>

	* minibuf.c (Fminibuffer_complete_word): Fix computation of
	i_byte when prompts are inserted into minibuffers.

	* dispextern.h (FRAME_INTERNAL_BORDER_WIDTH_SAFE): New.
	(WINDOW_DISPLAY_LEFT_EDGE_PIXEL_X): Use it.
	(WINDOW_DISPLAY_TOP_EDGE_PIXEL_Y): Ditto.

1998-10-04  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (make_cursor_line_fully_visible): New.
	(try_scrolling): New.
	(redisplay_window): Move scrolling code to try_scrolling.
	(make_cursor_line_fully_visible): Handle case of window too small
	to show a single line.
	(redisplay_window): Case forced window start---use
	make_cursor_line_fully_visible.
	(redisplay_window): Case cursor movement via current matrix.
	If ending up on a partially visible line, make it fully visible
	instead of recentering.
	(try_scrolling): Additional parameter scroll_smoothly.

	* xterm.c (x_draw_bitmap): Don't XClearArea under the pixmap.

1998-09-28  Gerd Moellmann  <gerd@gnu.org>

	* window.c (window_scroll_pixel_based): Bug fix: vpos used
	instead of y-position for scroll-preserved-screen-position.

1998-09-07  Gerd Moellmann  <gerd@gnu.org>

	* dispnew.c (update_frame_line): If current row is not enabled,
	write the whole line.

1998-09-06  Gerd Moellmann  <gerd@gnu.org>

	* lisp.h (HAVE_FACES): Removed.

	* dispextern.h (HAVE_FACES): Removed.

	* config.in (HAVE_FACES): Removed.

	* dispnew.c (HAVE_FACES): Removed.

	* xdisp.c (HAVE_FACES): Removed.

	* xfaces.c (HAVE_FACES): Removed.

1998-09-05  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (init_iterator): If face_change_count is non-zero,
	free realized faces.

	* xfaces.c (free_all_realized_faces): Make it externally visible.
	(Finternal_set_lisp_face_attribute): Increment
	windows_or_buffers_changed.

	* dispnew.c (direct_output_for_insert): Give up if
	face_change_count is non-zero.
	(direct_output_forward_char): Ditto.

	* xfaces.c (face_change_count): New.

1998-09-04  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (x_draw_bar_cursor): Don't draw if cursor hpos is out
	of range.

1998-09-03  Gerd Moellmann  <gerd@gnu.org>

	* term.c (Ftty_display_color_p): New.

1998-09-02  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (Ftty_defined_colors): New.

	* xterm.c (x_produce_glyphs): Fix computation of
	contains_overlapping_glyphs_p for ASCII.

	* dispnew.c (Fshow_cursor): Don't change cursor state while
	redisplaying.
	(direct_output_for_insert): If a glyph with lbearing or rbearing
	is among the new glyphs, set row flag contains_overlapping_glyph_p.

1998-09-01  Gerd Moellmann  <gerd@gnu.org>

	* term.c (OUTPUT_IF): Make replacement text have statement form.
	(OUTPUT1_IF): Ditto.
	(TS_italic_mode, TS_end_italic_mode): Removed.
	(TS_bold_mode): Removed.
	(TS_underscore_mode, TS_end_underscore_mode): Removed.
	(TS_enter_bold_mode, TS_enter_dim_mode, TS_enter_blink_mode): New.
	(TS_enter_reverse_mode): New.
	(TS_enter_underline_mode, TS_exit_underline_mode): New.
	(TN_magic_cookie_glitch_ul): New.
	(TS_enter_alt_charset_mode, TS_exit_alt_charset_mode): New.
	(TS_exit_attribute_mode): New.
	(TN_max_colors, TN_max_pairs, TS_orig_pairs): New.
	(TS_set_foreground, TS_set_background): New.
	(reset_terminal_modes): Switch colors back to default.
	(write_glyphs): Turn face on before writing text, turn it off
	afterwards.
	(insert_glyphs): Ditto.
	(term_init): Initialize new terminal capability variables.
	(turn_on_face): Turn a face on.
	(turn_off_face): Turn a face off.

	* lisp.h (MAKE_GLYPH): Remove test for frame type.
	(GLYPH_CHAR): Ditto.
	(GLYPH_FACE): Ditto.

	* xfaces.c (Vface_tty_color_alist): New.
	(face-register-tty-color): New.
	(face-clear-tty-colors): New.

	* dispextern.h (FACE_TTY_DEFAULT_COLOR): New.
	(struct it): Remove member faces_p since we now always have faces.

1998-08-31  Gerd Moellmann  <gerd@gnu.org>

	* dispextern.h (struct face): Add tty appearance flags.

	* xdisp.c (init_iterator): Always handle faces.
	(extend_face_to_end_of_line): Handle tty frames.

	* dispnew.c (clear_glyph_matrix): Allow a null matrix to be
	passed in.

1998-08-30  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (realize_default_face): Use empty strings to indicate
	that the face should use the default foreground/background
	color of the terminal.  Fill font-related attributes with
	appropriate values for tty frames.

	* emacs.c (main): Call syms_of_xfaces before init_window_once.

	* xfaces.c (realize_default_face): If face `default' is not
	yet known, create it.

	* frame.c (make_terminal_frame): Call init_frame_faces
	unconditionally.

	* xfaces.c (init_frame_faces): Make it work for tty frames.
	(free_frame_faces): Ditto.
	(clear_face_cache): Ditto.
	(recompute_basic_faces): Ditto.
	(Fframe_face_alist): Ditto.
	(free_realized_face): Ditto.
	(prepare_face_for_display): Ditto.
	(clear_face_gcs): Ditto.
	(lookup_face): Ditto.
	(smaller_face): Ditto.
	(realize_default_face): Ditto.
	(realize_face): Ditto.
	(realize_face): Dispatch to functions depending on the frame type.
	(realize_x_face): X way of realizing faces.
	(realize_tty_face): TTY way of realizing faces.

1998-08-29  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (realize_face): Remove parameter unibyte_registry,
	compute it instead.
	(lookup_face): Remove local variable unibyte_registry.

1998-08-22  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (x_draw_glyph_string_relief): Draw top and bottom lines
	1 pixel longer.

	* xdisp.c (face_before_or_after_it_pos): Fix computation
	of face in buffer.

	* editfns.c (make_buffer_string_both): If prompt in buffer,
	prevent start > end.

	* indent.c (Fvertical_motion): Set current_buffer to window's
	buffer if it isn't already.

1998-08-21  Gerd Moellmann  <gerd@gnu.org>

	* dispextern.h (GLYPH_DEBUG): Use default 0.

	* xdisp.c (it_props): New member `smaller'.
	(init_iterator): Initialize it.
	(Qsmaller): New.
	(push_it): Save value of `smaller' value on the stack.
	(pop_it): Restore `smaller' from the stack.
	(handle_smaller_prop): New.
	(handle_face_prop): Use `smaller' text property to select a
	suitable face.

	* dispextern.h (SMALLER_PROP_IDX): New.
	(struct it): Add member `smaller'.

	* xfaces.c (smaller_face): New.

	* frame.h (FRAME_WINDOW_WIDTH_ARG): Add bitmap area widths.

	* dispnew.c (allocate_matrices_for_window_redisplay): Compute
	total pixel width of window differently.

	* xdisp.c (init_iterator): Compute width of mode line differently.

	* dispextern.h (WINDOW_DISPLAY_PIXEL_WIDTH): Subtract width
	of bitmap areas.

	* window.c (Fsplit_window): Include width of bitmap areas in
	window width.
	(window_internal_width): Subtract width of bitmap areas from
	total width.

1998-08-18  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c: Functions reordered for better readability.

	* dispnew.c (update_text_area): Handle glyphs with arbitrary
	lbearing.
	(update_window_tree): Parameter no_scrolling_p removed.
	(update_single_window): Ditto.

	* xterm.c (x_get_char_font_and_encoding): Renamed to
	x_get_char_face_and_encoding.

	* dispnew.c (update_text_area): Don't call get_glyph_overhangs
	if end of current row reached.

	* xterm.c (x_get_glyph_face_and_encoding): New.
	(x_get_glyph_overhangs): Call it.

	* xdisp.c (Qshow_trailing_whitespace): New.
	(Qtrailing_whitespace): New.
	(enum prop_handled): New.
	(struct props, it_props): New.
	(next_overlay_change): New.  Works like Fnext_overlay_change
	but doesn't use xmalloc.
	(handle_stop): Restructured.
	(face_before_or_after_it_pos): Case iteration over a string: fix
	handling of face before current position.

1998-08-16  Gerd Moellmann  <gerd@gnu.org>

	* dispnew.c (adjust_glyph_matrix): Don't optimize matrix
	reallocation matrix if fonts_changed_p.
	(update_text_area): Handle glyphs with lbearing.

1998-08-14  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (struct props): New.
	(it_props): New.
	(compute_prop_info): New.
	(handle_stop): New.

	* textprop.c (validate_interval_range): Make it externally
	visible.

	* dispnew.c (direct_output_for_insert): Remove calls
	to compute_stop_pos.

	* dispextern.h (struct it): Remove check_charpos,
	next_overlay_pos.  Add what_changes.

1998-08-10  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (note_mouse_highlight): Set BEGV_BYTE, ZV_BYTE.

	* xfaces.c (Vx_unibyte_registry_and_encoding): Removed.  Use
	face_default_registry instead.

	* syntax.c (scan_sexps_forward): Set up syntax table before
	jumping to initial state label.

1998-08-09  Gerd Moellmann  <gerd@gnu.org>

	* dispnew.c (check_matrix_invariants): Handle case of row end pos
	>= ZV specially.

1998-08-08  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (redisplay_window): Case cursor movement---if cursor
	ends up in partially visible row, try to scroll.  Case forced
	window start---handle windows not tall enough to show a single
	line.

	* window.h (struct window): Member dy renamed vscroll.

	* xterm.c (x_list_fonts): Re-activate suppression of scalable
	fonts.
	(x_draw_stretch_glyph_string): Set clipping if using GC that
	hasn't set it yet.

	* xdisp.c (redisplay_window): Case forced window start -
	don't let cursor end on partially visible row.  Use desired
	matrix to find a suitable PT if it doesn't appear.
	(decode_mode_spec): Merged with 20.2.97.
	(try_window_reusing_current_matrix): Give up if old or
	new display is vscrolled.
	(redisplay_window): Reset vscrolling if forced window start,
	or if recentering.

1998-08-06  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (realize_default_face): Use the fontset name instead of
	the alias for the family attribute of the default face because we
	can't easily determine a good alias from fontset-alias-alist.
	(face_fontset): Use Fquery_fontset to find the fontset.
	(font_list): Additional pattern parameter.
	(try_font_list): Ditto.
	(set_lface_from_font_name): Set face family from font foundry
	and family.
	(font_list): If family contains a hyphen, build pattern differently.

1998-08-05  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (free_realized_faces): Increment windows_or_buffers_-
	changed instead of setting the frame garbaged.

	* xfaces.c (lface_equal_p): Don't assume equal Lisp types for
	all attribute values.  This is wrong if values are unspecified,
	i.e. nil.

	* xdisp.c (try_window_id): Give up if window start changed.

	* xfaces.c (make_realized_face): Store registry as Lisp object.
	(load_face_font_or_fontset): Compute registry of a face
	differently.  Make it `eq' to Vx_unibyte_registry_and_encoding if
	possible.

	* dispextern.h (FACE_SUITABLE_FOR_CHARSET_P): Compare registries
	differently.

	* alloc.c (mark_face_cache): Mark the registry member of faces.

	* dispextern.h (struct face): Make registry a Lisp string.

1998-08-04  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (x_get_char_font_and_encoding): Additional parameter
	multibyte_p.  Handle unibyte text.
	(x_append_glyph): Set the multibyte_p flag of glyphs.
	(x_produce_image_glyph): Ditto.
	(x_append_stretch_glyph): Ditto.
	(x_produce_glyphs): Handle unibyte text like ASCII.

	* xdisp.c (push_it): Save the multibyte flag of an iterator on the
	stack.
	(pop_it): Restore it.
	(face_before_or_after_it_pos): Handle the case that the string or
	buffer is unibyte.
	(get_overlay_strings): Set the multibyte flag of the iterator if
	the new overlay string is multibyte.
	(get_glyph_property): Likewise.
	(get_next_display_element): Don't check for charset changes in
	unibyte text.
	(append_space): Compute face differently for unibyte text.
	(extend_face_to_end_of_line): Don't return quickly if face has
	stipple.

	* xfaces.c (load_face_font_or_fontset): Store registry and
	encoding of the font in the registry member of the face.
	(make_realized_face): Additional parameter `registry'.
	(free_realized_face): Free the registry of a realized face.
	(face_suitable_for_charset_p): Function form of the macro
	with the same name in uppercase.
	(lookup_face): Use Vx_unibyte_registry_and_encoding if charset < 0.
	(choose_face_font): New parameter unibyte_registry.
	(choose_face_fontset_font): Ditto.
	(realize_default_face): Remember the registry and encoding of
	the specified frame font in Vx_unibyte_registry_and_encoding.
	(face_at_buffer_position): Handle unibyte.
	(face_at_string_position): Likewise.
	(realize_face): New parameter unibyte_registry.
	(compute_char_face): Handle the unibyte case.

	* dispextern.h (struct glyph): Add bit multibyte_p.
	(struct face): New member registry holding the registry and
	encoding of the X font of the face.
	(FACE_UNIBYTE_P): Value is non-zero if face is for unibyte text.
	(enum face_id): Add BASIC_FACE_ID_SENTINEL.
	(FACE_SUITABLE_FOR_CHARSET_P): Handle charset < 0 meaning unibyte
	text.
	(struct iterator_stack_entry): Add multibyte_p.

	* xdisp.c (string_pos): Use string_char_to_byte.
	(char_charset): Removed.

1998-08-03  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (x_draw_image_glyph_string_foreground): Draw a
	rectangle for a block cursor over an image without a mask.
	(x_stretch_block_cursor): Added.  Non-zero means don't draw
	a block cursor over a stretch as wide as that stretch.
	(x_draw_stretch_glyph_string): Use it.
	(x_draw_hollow_cursor): Ditto.

	* minibuf.c (read_minibuf): Use minibuf_prompt instead of prompt.
	(read_minibuf): Add front-sticky text property for prompt.

	* xdisp.c (char_charset): Return charset of a character,
	depending on whether or not multi-byte characters are enabled.

	* xfaces.c (Fset_face_charset_registry): Removed.
	(x_charset_registry): Determine registry from charset plist.

1998-08-02  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (get_next_display_element): Don't check for charset
	changes if multi-byte characters are not enabled.

	* xdisp.c (echo_area_display): Use the flush function from the
	redisplay interface.
	* keyboard.c (detect_input_pending_run_timers): Likewise.

	* dispextern.h (produce_*glyphs_hook): Removed.
	* term.c (produce_*glyphs): Ditto.
	(cursor_to): Remove pixel position parameters.

	* dispnew.c: Remove hooks for window-based redisplay, introduce
	a redisplay interface structure.

	* xterm.c (x_per_char_metric): Return default char metrics if per
	char metric exists but contains a zero width.  Adobe Courier seems
	to contain such characters.

	* xdisp.c (compute_line_metrics): Compute the width of rows
	without stopping at glyphs with zero width.

1998-08-01  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (display_mode_line): If nothing was displayed at all,
	display a space.
	(hscroll_window_tree): Don't subtract 1 from target point if equal
	to ZV and window is not the selected window.

	* dispnew.c (check_matrix_invariants): Remove check for window
	start at BEGV or after newline.  This happens in rare cases
	intentionally.

1998-07-31  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (x_charset_registry): Use STRING_BYTES.
	(syms_of_xfaces): Add Vface_default_registry.
	(x_charset_registry): Use it.

	* xdisp.c (run_window_scroll_functions): Run window scroll functions.
	(redisplay_window): Use it.

	* dispnew.c (update_text_area): Handle lbearing of deleted text
	by backing up one character.

1998-07-30  Gerd Moellmann  <gerd@gnu.org>

	* dispnew.c (adjust_glyph_matrix): Use a different check to
	decide to do nothing.

	* xfaces.c (face_at_string_position): Additional parameter
	mode_line_p.  If non-zero, merge with the mode line face
	instead of the default face.
	* dispextern.h (struct it): Add mode_line_p.
	* xdisp.c (init_iterator): Set it.
	(compute_face_in_string): Use it.
	(face_before_or_after_it_pos): Handle strings.
	(get_next_display_element): Don't look for relief end in C strings.
	(next_element_from_string): Deliver string position instead of
	buffer position.

	* xterm.c (x_flush): Flush X output buffer.
	(XTflash): Use it.

	* xfaces.c (lface_from_face_name): Renamed from lface_from_symbol.
	Allow strings as face names.

	* xfns.c (forall_images_in_image_cache): Check that frame is
	alive.

	* widget.c (EmacsFrameDestroy): Remove call to free_frame_faces;
	it's also called from x_destroy_window.  Since this function is
	called from X, freeing stuff allocated with xmalloc is dangerous
	here, anyway.

	* xfaces.c (free_realized_faces): Don't clear current matrices
	of a frame being destroyed.

	* frame.c (make_frame): Call set_window_buffer instead of
	Fset_window_buffer.

	* window.c (set_window_buffer): Extracted from Fset_window_buffer,
	with an additional argument specifying whether or not hooks may
	be called.
	(Fset_window_buffer): Call it.

	* dispnew.c (clear_desired_matrices): Check that frame has
	a valid root window before clearing matrices in the window tree.
	(clear_current_matrices): Ditto.
	(clear_window_matrices): If GLYPH_DEBUG, check that hchild and
	vchild are valid windows if not nil.

	* xfaces.c (merge_face_vector_with_property): Allow :reverse-video
	for :inverse-video.
	(Finternal_set_lisp_face_attribute): Ditto.
	(Finternal_set_lisp_face_attribute_from_resource): Ditto.
	(Finternal_get_lisp_face_attribute): Ditto.
	(Finternal_lisp_face_attribute_values): Ditto.
	(syms_of_xfaces): Define the symbol `:reverse-video'.

	* xdisp.c (get_glyph_property): Renamed from
	fill_iterator_from_glyph_property.
	(next_element_from_buffer): Handle case that no `glyph' property
	was found correctly.
	(display_line): Extend face to end of line only if we have faces.

1998-07-29  Gerd Moellmann  <gerd@gnu.org>

	* dispnew.c (Fshow_cursor): Renamed from blink_cursor.  Take
	additional window argument.

	* xdisp.c (reseat_at_previous_visible_line_start): Renamed from
	set_iterator_to_previous_visible_line_start.
	(reseat_at_next_visible_line_start): Likewise.
	(compute_stop_pos): Renamed from set_iterator_stop_pos.
	(face_before_or_after_it_pos): Renamed from get_face_at_it_pos.
	(compute_face_in_buffer): Renamed from
	compute_face_at_iterator_position.
	(compute_face_in_string): Renamed from
	compute_face_at_iterator_string_position.
	(get_space_width): Renamed from get_iterator_space_width.
	(next_overlay_string): Renamed from
	set_iterator_to_next_overlay_string.
	(get_overlay_strings): Renamed from
	get_overlay_strings_at_iterator_position.
	(restore_overlay_strings): Renamed from
	setup_overlay_strings_from_glyph_pos.
	(restore_dpvec): Renamed from setup_iterator_dpvec_from_glyph_pos.
	(init_from_display_pos): Renamed from init_iterator_from_glyph_pos.
	(init_to_row_start): Renamed from init_iterator_to_row_start.
	(init_to_row_end): Formerly init_iterator_to_next_row_start.

	* xterm.c: Merge with 20.2.97.
	(x_produce_glyphs): Use x_append_stretch_glyph for tabs.

	* dispextern.h (struct glyph): Replace text_pos position with
	simple charpos.

	* xdisp.c (this_line_start_pos): Use struct text_pos.
	(this_line_end_pos): Renamed from .*endpos; use struct text_pos.
	(enum move_it_result): Renamed from move_iterator_result.
	(string_pos_nchars_ahead): Compute text_pos in a string from a
	known text_pos plus a character delta.
	(string_pos): Compute text_pos in string from charpos.
	(c_string_pos): Likewise for a C string.
	(number_of_chars): Return number of characters in a possibly
	multi-byte C string.
	(check_it): Renamed from check_iterator.  Check that charpos and
	bytepos are in sync.
	(push_it): Renamed from save_iterator_settings.
	(pop_it): Renamed from restore_iterator_settings.
	(move_it_.*): Renamed from move_iterator_.*.
	(charset_at_position): Take charpos/bytepos into account.
	(back_to_previous_line_start): Set iterator to previous line start.
	(forward_to_next_line_start): Set iterator to next line start.
	(back_to_previous_visible_line_start): Renamed from
	move_iterator_previous_visible_line_start.
	(set_iterator_to_next_visible_line_start): Handle charpos/bytepos.
	(get_face_at_it_pos): Renamed from get_face_from_cursor_pos.
	Handle charpos/bytepos.
	(compute_face_at_iterator_position): Handle charpos/bytepos.
	(compute_face_at_iterator_string_position): Likewise.
	(get_iterator_space_width): Likewise.
	(load_overlay_strings): Likewise.
	(get_overlay_strings_at_iterator_position): Likewise.
	(reseat_iterator): Take a text_pos position argument.
	(setup_iterator_overlay_strings_from_glyph_pos): Handle charpos/
	bytepos.
	(init_iterator): Take additional bytepos parameter.
	(reseat_iterator_to_string): Handle charpos/bytepos.
	(start_display): Take a text_pos parameter.  Handle charpos/bytepos.
	(next_element_from_string): Handle charpos/bytepos.
	(next_element_from_c_string): Likewise.
	(fill_iterator_from_glyph_property): Likewise.
	(next_element_from_buffer): Likewise.
	(set_iterator_to_next): Increment charpos and bytepos of an iterator.
	(move_iterator_in_display_line_to): Handle charpos/bytepos.
	(move_it_to): Likewise.
	(move_it_vertically_backward): Likewise.
	(move_it_vertically): Likewise.
	(move_it_by_lines): Likewise.
	(hscroll_window_tree): Likewise.
	(redisplay_internal): Likewise.
	(set_cursor_from_row): Likewise.
	(redisplay_window): Likewise.
	(try_window): Take a text_pos parameter.  Handle charpos/bytepos.
	(try_window_reusing_current_matrix): Handle charpos/bytepos.
	(get_first_unchanged_at_end_row): Compute and return delta_bytes.
	(try_window_id): Handle charpos/bytepos.
	(Ftrace_redisplay_toggle): Return Qnil.
	(get_overlay_arrow_glyph_row): Handle charpos/bytepos.
	(insert_left_trunc_glyphs): Likewise.

	* dispnew.c: `Merge' with 20.2.97 (it's really too different to
	do a real merge).
	(increment_glyph_matrix_buffer_positions): Add parameter delta_bytes.
	(increment_glyph_row_buffer_positions): Ditto.
	(copy_glyph_row_contents): Ditto.
	(check_matrix_invariants): Add additional checks for charpos/
	bytepos consistency.
	(direct_output_for_insert): Changed for charpos/bytepos.
	(buffer_posn_from_coords): Likewise.  Put code dealing with
	`direction-reversed' in #if 0.

	* xterm.h: Merge with 20.2.97.

	* frame.h: Merge with 20.2.97.

	* window.h: Merge with 20.2.97.  Add window_end_bytepos.

	* dispextern.h (MATRIX_ROW_START_CHARPOS): Get charpos of a row
	start.
	(MATRIX_ROW_START_BYTEPOS): Likewise for the byte position.
	(MATRIX_ROW_END_CHARPOS): Likewise for the row end.
	(MATRIX_ROW_END_BYTEPOS): Likewise for the row end byte position.
	(struct it): Various members renamed from .*pos to .*charpos.
	(IT_CHARPOS): Access current buffer character position of an
	iterator.
	(IT_BYTEPOS): Access current buffer byte position of an iterator.
	(IT_STRING_CHARPOS): Access current string character position of
	an iterator.
	(IT_STRING_BYTEPOS): Access current string byte position of
	an iterator.
	(globally): Add function prototypes from 20.2.97.

	* everywhere: Use P_ instead of PROTO for function prototypes
	because everyone else seems to use P_.

	* dispextern.h (struct text_pos): Structure describing a charpos/
	bytepos position in text.
	(BYTEPOS): Access the byte position part of a text_pos.
	(CHARPOS): Likewise for the character position.
	(SET_TEXT_POS): Set a text_pos from a character and byte position.
	(INC_TEXT_POS, DEC_TEXT_POS): Increment/decrement a text position.
	(SET_TEXT_POS_FROM_MARKER): Set a text_pos from a marker.
	(SET_MARKER_FROM_TEXT_POS): Set a marker from a text_pos.
	(TEXT_POS_EQUAL_P): Compare two text_pos structures for equality.
	(struct display_pos): Renamed from glyph_pos.  Use struct text_pos
	for buffer and string positions.
	(struct glyph): Use text_pos.
	(struct it): Renamed from display_iterator.  Use text_pos.

1998-07-23  Gerd Moellmann  <gerd@gnu.org>

	* xfns.c (x_kill_gs_process): Get image colors from XImage of a
	pixmap.

1998-07-21  Gerd Moellmann  <gerd@gnu.org>

	* dispextern.h (struct glyph_row): New flag indicate_zv_line_p.
	* xterm.c (x_draw_row_bitmaps): Use it.
	* dispnew.c (row_equal_p): Ditto.
	(update_window_line): Ditto.

	* xfns.c (prepare_image_for_display): Don't set loading_failed_p
	flag of images.

	* dispextern.h (struct image): Removed member loading_failed_p.
	It's probably better to have the chance to try to load an image
	again.

1998-07-20  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (x_draw_bitmap): Draw bitmap for empty lines ending
	at ZV if `indicate-zv-lines' is non-nil.
	(x_draw_row_bitmaps): Compute bitmap for `indicate-zv-lines'.

	* dispnew.c (row_equal_p): Compare displays_text_p and
	ends_at_zv_p flags of rows.
	(update_window_line): Ditto.

	* buffer.h (struct buffer): New member indicate_zv_lines.

	* buffer.c (init_buffer_once): Add default for `indicate-zv-lines'.
	(init_buffer_once): New variable `default-indicate-zv-lines'.
	(syms_of_buffer): New buffer-local variable `indicate-zv-lines'.

	* xdisp.c (redisplay_window): Don't try moving the cursor
	if current glyph row w->last_cursor.vpos isn't enabled.

	* xterm.c (bitmap_type): Add ZV_LINE_BITMAP.

	* window.c (Fset_window_vscroll): Allow only negative scroll
	values.  Others don't seem to make sense, and this way it's easy
	to restore a vscroll of zero.

	* xterm.c (x_inverted_image_mask): Check that pixmap could be
	allocated.
	(x_draw_image_glyph_string_background): Don't clip if pixmap
	could not be created.

	* xfns.c (xbm_load_image_from_file): Check that pixmap could
	be created.
	(xbm_load): Ditto.
	(gs_load): Ditto.

	* xterm.c (x_get_glyph_overhangs): Take image and stretch
	glyphs into account.

	* xfaces.c (realize_default_face): Don't set font family of
	the default face from the fontset alias name for `fontset-startup'.

	* xfns.c (gs_load): Pass frame's pixel foreground and background
	color to the Lisp loader.

1998-07-19  Gerd Moellmann  <gerd@gnu.org>

	* xfns.c (tiff_image_p, tiff_load): Support TIFF images via
	libtiff34.

	* configure.in (--with-tiff, HAVE_TIFF): Added.

	* config.in (HAVE_TIFF): Added.

	* Makefile.in (LIBTIFF): Added.

	* xfns.c (jpeg_image_p, jpeg_load): Support JPEG images.

	* Makefile.in (LIBJPEG): Added.

	* xfns.c (resource_types): Enumerators renamed to RES_TYPE_NUMBER,
	RES_TYPE_BOOLEAN etc. because of conflict of `boolean' with
	jpeglib.h.

	* configure.in (HAVE_JPEG, --with-jpeg): Added.  On systems
	where the library is installed in /usr/local/lib, e.g. FreeBSD,
	configure must be run with `--x-includes=/usr/X11R6/include:
	/usr/local/include --x-libraries=/usr/X11R6/lib:/usr/local/lib'.

1998-07-18  Gerd Moellmann  <gerd@gnu.org>

	* config.in (HAVE_JPEG): Added.

	* xfns.c (ct_init): Initialize color table used to map RGB colors
	from images to X pixel colors.
	(ct_free): Free color table.
	(ct_lookup): Look an RGB color up.
	(ct_allocated_colors): Get vector of allocated colors.
	(pbm_image_p): Test if image specification is a valid PPM
	image specification.
	(pbm_scan_number): Scan a decimal ASCII number from a file.
	(pbm_load): Load a PPM image.

	* window.c (Fset_window_vscroll): Adjust glyph matrix if
	necessary.  Take canonical character units as parameter.
	(Fwindow_vscroll): Return canonical character units.

	* dispnew.c (allocate_matrices_for_window_redisplay): Add negative
	w->dy to display height for which glyph rows must be allocated.

1998-07-17  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (face_at_string_position): Merge in region face
	so that it won't overwrite the font in the region.
	(face_at_buffer_position): Ditto.
	(realize_basic_faces): Don't realize region face.

	* dispextern.h (enum face_id): REGION_FACE_ID removed.

	* xterm.c (x_set_glyph_string_background_width): Don't let
	cursor face extend to end of line.

	* xdisp.c (append_space): If adding space of default face,
	make sure glyph is produced with right face.

	* xterm.c (x_clear_glyph_string_rect): Draw a rectangle in the
	background color of a glyph string.
	(x_draw_glyph_string_background): Call it.
	(x_draw_glyph_string_bg_rect): Ditto.
	(x_draw_stretch_glyph_string): Ditto.

1998-07-15  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (init_iterator): Initialize it->current_y to the
	window's vscroll w->dy.

	* window.c (Fwindow_vscroll): Return number of pixels window
	is vscrolled smoothly.
	(Fset_window_vscroll): Set the number.

	* xdisp.c (move_iterator_to): Recognize case MOVE_TO_POS and
	to_pos in truncated part of a line.

1998-07-14  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (move_iterator_in_display_line_to): If very first glyph
	doesn't fit on the line, truncate it, despite truncate_lines nil.
	(display_line): Ditto.

	* xfns.c: Experimental support for Ghostscript images.

	* xterm.c (x_term_init): Initialize new atoms DONE and PAGE.
	(XTread_socket): React on events from Ghostscript.
	(expose_frame): If width or height are zero, redraw entire frame.
	(XTread_socket): Call expose_frame after receiving event from
	Ghostscript.

	* xterm.h (struct x_display_info): Add atoms DONE and PAGE
	for Ghostscript support.

	* xdisp.c (redisplay_internal): Return quickly if called
	recursively.

	* alloc.c (NSTATICS): Increased to 1024.

1998-07-08  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (x_append_stretch_glyph): Append a stretch glyph to an
	iterator's glyph row.
	(x_produce_stretch_glyph): Call it.
	(x_produce_glyphs): Handle `space-width' property; call
	x_append_stretch_glyph.

	* xdisp.c (syms_of_xdisp): Add symbol `space-width' used as a text
	property.
	(get_iterator_space_width): Determine value of `space-width'
	property at iterator's position.
	(reseat_iterator): Call it.
	(next_element_from_string): Ditto.
	(next_element_from_buffer): Ditto.
	(init_iterator): Initialize space_width of iterator.
	(redisplay_internal): Don't goto end_of_redisplay if PT hasn't
	moved, but cursor blinks.
	(redisplay_internal): Set w->last_cursor_off_p after update.

	* dispextern.h (enum iterator_prop_idx): Add SPACE_WIDTH_PROP_IDX.
	(struct display_iterator): Add new member space_width.

	* window.h (struct window): Add last_cursor_off_p.

1998-07-07  Gerd Moellmann  <gerd@gnu.org>

	* Saved.

	* window.c (Fpos_visible_in_window_p): Case window not up to
	date---return nil if iterator hasn't reached position.

1998-07-06  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (text_outside_line_unchanged_p): Fix case that
	overlays have changed.
	(redisplay_window): Case cursor movement.  Don't try it if
	last_cursor.vpos is out of range.

	* xdisp.c (set_cursor_from_row): Set this_line_.* variables.  This
	way, the display optimization for the line containing the cursor
	is used more frequently, esp. when we have a blinking cursor.
	(display_line): Don't set this_line_.* variables.

	* xterm.c (x_redraw_cursor): Removed.
	(x_display_and_set_cursor): Set cursor type depending on
	cursor_off_p flag of window.

	* dispnew.c (redraw_cursor_hook): Removed.
	(Fblink_cursor): Additional parameter on_p to set the cursor_off_p
	member of the selected window.

	* xfaces.c (Fface_font): Added for compatibility with 20.2.

	* xterm.c (x_y_to_hpos_vpos): Return null if not over text.
	Return glyph area under x/y.
	(note_mouse_highlight): Use x_y_to_hpos_vpos in its new form.

	* keyboard.c (detect_input_pending_run_timers): Call gobble_input
	after redisplaying.

1998-07-05  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (text_outside_line_unchanged_p): Test if changes
	are all outside of a line of text.
	(redisplay_internal): Use it.

1998-06-30  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (next_element_from_buffer): After skipping over
	invisible text, look for the `glyph' property.
	(set_iterator_stop_pos): Ignore check positions in front
	of an iterator's current position.

	* xterm.c (show_mouse_face): Don't act on rows that don't exist
	anymore or which are marked as not having valid contents.

	* xfaces.c (Finternal_set_lisp_face_attribute): Don't free
	realized faces if new attribute value is equal to old value.

1998-06-29  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (Finternal_make_lisp_face): Increment
	lface_id_to_name_size when lface_id_to_name is reallocated.

1998-06-27  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (set_iterator_stop_pos): Compute initial stop_pos
	as minimum of endpos and overlay_pos.
	(load_overlay_strings): Set next_overlay_pos of iterator to
	-1 if we don't have to check for more overlay strings.

1998-05-09  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (set_iterator_to_next_visible_line_start): Don't
	do anything if iterator is at ZV because scan_buffer doesn't
	work otherwise.

	* xterm.c (x_encode_char): Inline it.
	(x_get_char_font_and_encoding): Simplified.
	(x_per_char_metric): Inline it.

	* xterm.c (x_draw_glyph_string_relief): Use clipping.

	* xdisp.c (get_next_display_element): Check for end of relief
	face moved here from next_element_from_buffer.

	* xterm.c (x_produce_image_glyph): Add relief thickness.
	(x_produce_stretch_glyph): Ditto.

1998-05-08  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (fill_iterator_from_glyph_property): Handle glyph
	property value (space :width WIDTH :height HEIGHT :ascent ASCENT).

	* xterm.c (x_produce_stretch_glyph): Produce a stretch glyph
	from a glyph property.
	(x_produce_glyphs): Use it.

	* xdisp.c (set_iterator_to_next): Handle next_element_from_stretch.

	* xterm.c (x_produce_image_glyph): Add to current_x only if
	in text area.
	(x_produce_glyphs): Ditto.

	* xdisp.c (display_line): Compute row height from glyphs in
	marginal areas.

	* xterm.c (x_draw_image_glyph_string_background): Draw
	background of an image glyph string.
	(x_draw_glyph_string_bg_rect): Draw a rectangular region of
	the background of a glyph string.
	(x_draw_image_glyph_string_foreground): Draw the foreground of
	an image glyph string.
	(x_inverted_image_mask): Return the inverted mask of an image.

	* xfns.c (x_draw_image): Removed.

	* dispextern.h (struct image_type): Remove drawing function.

	* xfaces.c (load_face_colors): Swap colors if face is inverse.

	* xdisp.c (get_next_display_element): In marginal areas, translate
	newlines, tabs, etc. like normal control characters.

	* xfaces.c (Fface_color_supported_p): Transpose parameters frame
	and color.
	(free_realized_faces): Set frame garbaged.

	* xfaces.c (syms_of_xfaces): Add defsubr for
	internal-lisp-face-attribute-values.

1998-05-07  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (x_produce_image_glyph): Don't add glyph if area is
	full.
	(x_produce_image_glyph): Set IT->nglyphs to 1.
	(x_draw_image_glyph_string): Use inverted mask to draw background.

	* dispextern.h (struct image_type): Additional clipping rect
	parameters for drawing functions.

	* xterm.c (x_get_glyph_string_clip_rect): Get clip rect for
	a glyph string.
	(x_draw_image_glyph_string): Use it and pass the rect to the
	image drawing function.

	* xdisp.c (fill_iterator_from_glyph_property): Use position of
	first character with `glyph' property as image position.  Set
	iterator back to that position as long as the image hasn't been
	consumed with set_iterator_to_next.
	(set_cursor_from_row): Accept when glyph with given position is
	not found in the row.  Set cursor x to end of line in that case,
	so that we can hscroll.
	(redisplay_internal): Correct computation of delta by which
	positions have changed in redisplay optimization for cursor
	row of selected window.

	* xdisp.c (display_line): Remove start_pos.
	(display_line): Fix bug preventing display optimization for
	cursor line of selected window.
	(next_element_from_buffer): Avoid XSETBUFFER, use it->w->buffer
	instead.

	* dispnew.c (update_text_area): Use GLYPH_EQUAL_P.
	(update_text_area): Take glyph pixel width into account
	when trying to find a resync point.
	(row_equal_p): Compare glyphs in all areas.

1998-05-06  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (x_produce_glyphs): Don't add glyph if area is full.

	* dispextern.h (struct glyph_row): Use unsigned hash value.

	* xdisp.c (display_line): Simplified and made faster by setting
	the cursor with set_cursor_from_row.
	(set_cursor_from_row): Handle rows of desired matrix.

1998-05-05  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (set_cursor_from_row): Don't put cursor on glyphs
	with type != CHAR_GLYPH.
	(fill_iterator_from_glyph_property): Return void.  Set
	method to next_element_from_image.
	(next_element_from_image): Dummy function for delivering a
	single image id.
	(set_iterator_to_next): Add method next_element_from_image.
	(redisplay_window): When recentering, and cursor vpos is -1
	after display, assume middle of window is in first line displayed
	in window, and display again.
	(fill_iterator_from_glyph_property): Assign image glyph
	the position of the first character having the glyph property.

	* dispextern.h (IMAGE_ASCENT): Compute ascent of image.
	* xfns.c (x_draw_image): Use it.
	* xterm.c (x_produce_image_glyph): Use it.

	* xterm.c (x_produce_image_glyph): Set iterator's pixel_width.

	* Makefile.in: Extraneous #define of LIBXPM removed.

	* xterm.c (x_produce_glyphs): Produce a STRETCH_GLYPH for tabs.
	(x_fill_stretch_glyph_string): Fill a glyph string from a
	stretch glyph.
	(x_compute_glyph_string_overhangs): Compute overhangs only
	for text glyph strings.
	(x_draw_stretch_glyph_string): Draw a stretch glyph string.
	(x_draw_glyph_string): Call it.

	* dispextern.h (glyph_type): Add STRETCH_GLYPH.
	(struct glyph): Add sub-structure for stretchable glyphs.
	(GLYPH_EQUAL_P): Compare glyph type and u.val.

	* xdisp.c (get_overlay_arrow_glyph_row): Put face code into
	#ifdef HAVE_FACES.

	* xterm.c (x_produce_glyphs): Use ASCII face for spaces of a TAB.

	* xdisp.c (fill_iterator_from_glyph_property): Renamed from
	setup_iterator_from_glyph_property.  Don't do it for terminal
	frames.

	* xterm.c (x_produce_image_glyph): Produce glyph for image
	that can't be loaded.

	* xfns.c (lookup_image): If image can't be loaded, set its
	width and height so that we can draw a rectangle.
	(x_draw_image): Draw a rectangle for images that don't have
	a pixmap.
	(make_image): Set hash value.
	(image_spec_equal_p): Use image_spec_value.

	* xterm.c (expose_frame): Don't try to redraw if basic faces
	haven't benn realized yet.
	(x_draw_image_glyph_string): Fill background only if image
	is not as tall as row.

1998-05-04  Gerd Moellmann  <gerd@gnu.org>

	* Makefile.in (LIBXPM): If not already defined, define to -lXpm.
	(LIBX) [HAVE_X11]: Add LIBXPM.

	* xfns.c (xpm_image_p): Implementation of image type functions
	for XPM.
	(xpm_load): Ditto.

	* dispextern.h (struct image): Add mask pixmap for XPM.

	* xfns.c (x_draw_image): Handle images with masks.

	* configure.in: --with-xpm added.  Code detecting -lXpm added.

	* config.in: Add HAVE_XPM.

	* xfns.c (xbm_draw): Removed.
	(x_draw_image): Default implementation for drawing images.
	(xbm_keyword_index): Remove XBM_DEPTH.
	(xbm_format): Remove `:depth'.
	(xbm_image_spec_from_file): Removed to reduce consing.
	(xbm_load_image_from_file): Added for the same reason.

	* xterm.c (x_fill_image_glyph_string): Don't set ybase of
	glyph string.
	(x_draw_image_glyph_string): Pass ybase to image draw function.

	* xfns.c (make_image): Set default baseline.

	* xterm.c (x_produce_image_glyph): Compute ascent of image
	from its height and baseline percentage.

	* xfns.c (xbm_keyword_index): Add XBM_BASELINE.
	(xbm_format): Add description for `:baseline'.
	(xbm_image_spec_from_file): Add keywords from original spec to
	result.
	(xbm_load): Set baseline of image.
	(xbm_image_p): Check range for baseline.

	* dispextern.h (struct image): Add member baseline.

	* xdisp.c (dump_glyph_matrix): Handle image glyphs.

	* term.c (produce_glyphs): Change assertion to allow DISP_IMAGE.

	* xdisp.c (get_next_display_element): Do character translations
	only if delivering characters.

1998-05-03  Gerd Moellmann  <gerd@gnu.org>

	* dispextern.h (ITERATOR_AT_END_OF_LINE_P): Test for
	DISP_CHARACTER.

	* xterm.c (x_produce_image_glyph): Produce image glyphs.
	(x_produce_glyphs): Call x_produce_glyphs for DISP_IMAGE.

1998-05-02  Gerd Moellmann  <gerd@gnu.org>

	* xfns.c (prepare_image_for_display): Set image timestamp.
	(clear_image_cache): Clear images if image's timestamp +
	Vimage_eviction_seconds is > now.
	(syms_of_xfns): New variables image-eviction-seconds, and
	image-types.
	(add_image_format): Add to image-types.
	(xbm_load): Support new image spec format.
	(x_alloc_image_color): Allocate a color for an image.

	* dispextern.h (struct image): Add timestamp.

	* xfns.c (xbm_image_p): Allow bool-vectors, vectors of strings and
	vectors of bool-vectors.
	(xbm_lisp_object_from_file): Build new format image spec.

1998-05-01  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (init_frame_faces): Initialize image cache.
	(free_frame_faces): Free it.

	* xterm.c (x_delete_display): Don't free image cache.

	* emacs.c (main): Call init_xfns.

1998-04-30  Gerd Moellmann  <gerd@gnu.org>

	* alloc.c (mark_object): Mark objects in image cache.

	* xfns.c (x_set_internal_border_width): Correct call to
	widget_store_internal_border_width.

	* widget.c (widget_store_internal_border): Return void.

	* xfns.c (x_destroy_bitmap): Use xfree instead of free.  Return
	void.
	(init_x_parm_symbols): Return void.
	(x_report_frame_params): Ditto.
	(x_set_border_pixel): Ditto.
	(syms_of_xfns): Ditto.
	(x_destroy_all_bitmaps): Use xfree instead of free.

	* xterm.h (FRAME_X_IMAGE_CACHE): Access the image cache of a frame.

	* xterm.c (x_term_init): Initialize image_cache of display info.
	(x_delete_display): Free image cache.

	* xterm.h (struct x_display_info): Add image_cache.

	* xfns.c (make_image_cache): Allocate a new image cache.
	(free_image_cache): Free an image cache.
	(make_image): Allocate an image.
	(free_image): Free an image.

	* dispextern.h (struct image): Structure describing an image.
	(struct image_cache): Structure describing an image cache.

1998-04-29  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (check_iterator_glyph_property): Return int.  Value is
	non-zero if iterator is filled with something to return.
	(next_element_from_buffer): Immediately return if
	setup_iterator_from_glyph_prop has filled iterator with pixmap.
	(next_element_from_string): Likewise.

	* xfaces.c (load_pixmap): Allow to pass null for W_PTR and H_PTR.

	* dispextern.h (struct glyph): Add pixmap_id.
	(display_element_type): Add DISP_PIXMAP.

	* xmenu.c (popup_get_selection): Use xmalloc/xfree instead of
	malloc/free.

	* xfaces.c (clear_font_table): Free fonts not used by fontsets.
	(clear_face_cache): Call it.

	* xterm.c (x_query_font): Don't look at empty font table slots.
	(x_compute_min_glyph_bounds): Likewise.
	(x_term_init): Initialize font_table to null.
	(x_load_font): Change allocation of font_info structures so
	that it is possible to free fonts.

	* xfns.c (Fx_close_connection): Use xfree instead of free.
	Only free fonts from filled font table entries.

	* xfaces.c (best_matching_font): Support use of scalable fonts.
	(Fface_scalable_fonts_mode): Toggle use of scalable fonts.

	* xterm.h (struct x_display_info): Remove screen_dpi, add resx
	and resy.
	* xterm.c (x_term_init): Compute resx and resy.

	* xfaces.c (split_font_name): Don't reject scalable fonts.

	* xterm.c (x_list_fonts): Set code excluding scalable fonts
	in #if 0.

	* xfaces.c (xlfd_point_size): Return 0 for fonts whose real
	point size cannot be determined.

	* xterm.h (FRAME_SMALLEST_CHAR_WIDTH): Return smallest character
	width over all fonts on a frame.
	(FRAME_SMALLEST_FONT_HEIGHT): Likewise for font height.
	* dispnew.c (adjust_frame_glyphs_for_window_redisplay): Use these
	macros.

	* xterm.c (x_font_min_bounds): Moved here from xfaces.c.
	(x_compute_min_char_bounds): Formerly min_char_bounds in xfaces.c.
	(x_load_font): Use x_compute_min_char_bounds.

	* xterm.h (struct x_display_info): New members smallest_char_width
	and smallest_font_height.

1998-04-28  Gerd Moellmann  <gerd@gnu.org>

	* dispextern.h (PREPARE_FACE_FOR_DISPLAY): Call function with
	the same name if GC of face is zero.

	* dispextern.h (struct face): Member non_ascii_gc removed.

	* xterm.c (x_get_char_font_and_encoding): Return face's font
	for characters < 0177 in default face.  Prepare face for
	display before returning it.
	(x_produce_glyphs): Use it->charset.
	(x_get_char_font_and_encoding): Simplified.
	(x_encode_char): Remove parameter `font'.

	* xfaces.c (choose_face_font): If registry from charset symbol
	doesn't contain a `-', make it a pattern by appending "*-*".

	* xdisp.c (check_iterator_glyph_property): Adjust limit for
	glyph_check_pos computation to character boundary.

1998-04-27  Gerd Moellmann  <gerd@gnu.org>

	* fontset.h (FONT_INFO_FROM_ID): Return null if ID is invalid.

	* xfaces.c (ascii_face_of_lisp_face): Get the id of the realized
	ASCII face for a given Lisp face id.

	* xdisp.c (set_iterator_stop_pos): Take glyph_check_pos into
	account.
	(reseat_iterator): Set glyph_check_pos.  Handle case where
	new position is < original position.
	(check_iterator_glyph_property): Handle glyph property in strings.
	(next_element_from_string): Call above function.
	(next_element_from_display_vector): Handle faces in glyphs.
	(get_next_display_element): Set face_id of glyphs for
	control chars to zero.

	* Makefile.in (term.o): Add dependency on dispextern.h.

	* xdisp.c (syms_of_xdisp): Add symbol `glyph'.
	(display_line): Handle marginal areas.
	(move_iterator_in_display_line_to): Likewise.

	* xfaces.c (Finternal_make_lisp_face): Assign Lisp faces an id.

	* xfaces.c (face_at_buffer_position): Don't merge with nil
	text property.
	(face_at_string_position): Ditto.

	* dispextern.h (struct display_iterator): Use a stack of saved
	values instead of saving check positions etc. individually.

	* xdisp.c (set_iterator_to_next): If end of Lisp string reached,
	maybe pop the iterator's stack.
	(save_iterator_settings): Push a value on iterator's stack.
	(get_overlay_strings_at_iterator_position): Use it.
	(restore_iterator_settings): Pop the stack.
	(set_iterator_to_next_overlay_string): Use it.

	* xfaces.c (try_font_list): Use alternative font families.

1998-04-26  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (Fset_face_font_sort_order): Set the order in which
	font selection matches fonts.
	(Fface_font_sort_order): Return the font sort order.
	(best_matching_font): Find best matching font based on sort order.
	(cmp_font_names): Sort by given sort order.

	* dispextern.h (struct display_iterator): New member faces_p.
	* xdisp.c (init_iterator): Initialize it->faces_p.
	(compute_face_at_iterator_string_position): Use it.
	(compute_face_at_iterator_position): Use it.
	(init_iterator): Use it.
	(display_mode_line): Ditto.

	* xdisp.c (get_next_display_element): Put code choosing a face
	when the charset changes in #ifdef HAVE_FACES.

	* dispextern.h (FACE_FOR_CHARSET): Replacement for function
	lookup_face_for_charset.

	* xfaces.c (free_font_names): Renamed from free_split_font_names.
	(free_all_realized_faces): Renamed from remove_all_realized_faces.

1998-04-25  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (best_matching_font): Return the name of the best
	matching font in an array of font_name structures.
	(choose_face_font): Use it.
	(choose_face_fontset_font): Use it.
	(find_best_weight_font): If final font found has same weight as
	the font we started with, return the original font because it is a
	better match for the resolution of the display.
	(find_best_slant_font): Likewise.
	(merge_face_vector_with_property): Check more invalid attribute
	values.
	(lface_suitable_for_charset_p): Replaced by a macro with the same
	name in upper-case.

1998-04-24  Gerd Moellmann  <gerd@gnu.org>

	* dispextern.h (struct face): Member
	fontset_chosen_for_realization_p removed.

	* xfaces.c (cache_face): If face->fontset >= 0, add face to the
	end of the collision list, so that we find more specific faces
	first.
	(lookup_face_for_charset): Look up a new face if face->fontset >=
	0, and charset != CHARSET_COMPOSITION.

	* xfaces.c (split_font_name): Return zero if point size of font
	couldn't be computed.
	(realize_default_face): Use ASCII font of a fontset to determine
	font-related attributes of the default face.
	(face_fontset): Return fontset id for face family.
	(font_list): Additional parameter font_pattern.  If non-nil,
	return fonts matching that pattern.

1998-04-23  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (choose_face_fontset): If new fontset cannot be
	constructed, or fontset name cannot be split, return the id of the
	standard fontset.

	* xterm.c (XTframe_up_to_date): Check that frame is an X frame.
	When Emacs starts, it may be called for the initial frame which
	isn't an X frame.

	* dispextern.h (struct face): New members foreground_defaulted_p,
	background_defaulted_p.
	(struct face): Members `mask' and `cache' removed.

	* xfaces.c (load_color): Set them.
	(free_face_colors): Check them.
	(xlfd_point_size): Return -1 if resolution or point size of
	font unknown.

	* xfaces.c (free_font): Removed.
	(load_face_font_or_fontset): Renamed from load_font.
	(load_face_font_or_fontset): Use message2 instead of signaling.
	(load_color): Likewise.
	(load_pixmap): Likewise.

	* xterm.h (struct x_display_info): Add screen_dpi.
	* xterm.c (x_term_init): Initialize it.
	* xfaces.c (xlfd_point_size): Use it.
	(split_font_name): Compute numeric XLFD_RESY.
	(cmp_font_names): Make fonts with an y-resolution more
	similar to that of the frame appear first in the result.

	* xfaces.c (cache_face): If fontset_chosen_for_realization_p
	is set for the face to cache, add it to the end of the collision
	list.
	(try_font_list): If fonts for given family and registry cannot
	be found, first try to keep the registry, and choose a different
	family.
	(choose_face_font): Allow nfonts == 0.
	(try_font_list): Give up if no font matches given registry.

1998-04-22  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (x_get_char_font_and_encoding): Get font_info from
	font info id of the face.

	* xfaces.c (load_font): Set font_info_id.
	(realize_face): Ditto.

	* dispextern.h (struct face): Change member font_info to
	font_info_id.

	* fontset.h (FONT_INFO_ID): Build an ID from a font_info pointer.
	(FONT_INFO_FROM_ID): Get a font_info pointer from an ID.

	* xdisp.c (extend_face_to_end_of_line): If IT's current charset
	isn't ASCII, get the ASCII face before adding a space.
	(append_space): Likewise.
	(insert_left_trunc_glyphs): Initialize truncate_it's charset
	to -1 so that it will compute the right face for the truncation
	glyphs.

	* xfaces.c (realize_face): Set
	face->fontset_chosen_for_realization_p.
	(lookup_face_for_charset): If fontset wasn't specified originally
	and new charset != CHARSET_COMPOSITION, get a new face for that
	charset.

	* dispextern.h (struct face): New member
	fontset_chosen_for_realization_p_specified_p.  Set to 1 when
	realize_face has chosen a fontset to display composite characters
	for a Lisp face not specifying a fontset.

	* xdisp.c (extend_face_to_end_of_line): Move tests for default
	face and line already filled here.  Don't do anything if current
	face hasn't a relief or has a background equal to the frame
	background.

	* xfaces.c (split_font_name): Additional parameter numeric_p.
	Don't compute numeric values if it is non-zero.
	(choose_face_fontset): Call split_font_name with numeric_p == 0.
	(choose_face_fontset): Print a message if fontset contains a
	font whose name cannot be split into fields.

1998-04-21  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (try_font_list): Try to load a list of fonts,
	possibly using less restrictive patterns.
	(choose_face_font): Use it.

	* xterm.c (x_get_char_font_and_encoding): For charset !=
	CHARSET_ASCII use font_info of face if face hasn't a fontset set.

	* dispextern.h (struct face): New member font_info.

	* xfaces.c (load_font): Use FS_LOAD_FONT to load fonts for faces
	specifying a fontset as well as those not having a fontset.
	(free_font): Make it empty.
	(realize_face): Use changed load_font.

	* xterm.c (x_get_char_font_and_encoding): If face doesn't
	fit for charset, get the right one.

	* xfaces.c (load_font): Take frame and name parameter, return
	font.
	(free_font): Likewise.
	(split_font_name): Compute numeric values for height, swidth etc.
	(cmp_font_names): Use them.
	(find_best_width_font): Ditto.
	(find_best_height_font): Ditto.
	(find_best_weight_font): Ditto.
	(find_best_slant_font): Ditto.
	(lface_hash): Add weight, slant, swidth and relief to hash value.
	(lface_equal_p): Make it faster.
	(lface_from_symbol): Use assq_no_quit.
	(Fnote_default_face_changed): Removed.
	(cmp_font_names): Use strcmp instead of xstricmp.
	(face_charset_registries): Removed.

1998-04-20  Gerd Moellmann  <gerd@gnu.org>

	* frame.h (CHECK_FRAME): Give this macro a statement form.
	(CHECK_LIVE_FRAME): Ditto.

	* xfaces.c (find_best_width_font): Find the best matching font
	for a given width.
	(find_best_height_font): Likewise for height.
	(find_best_weight_font): Likewise for weight.
	(find_best_slant_font): Likewise for slant.
	(choose_face_font): Use them.
	(get_lface_attributes): Always return frame-local face attrs.
	(Finternal_merge_in_global_face): Merge local face with
	global face attributes.

	* xfaces.c (check_lface_attrs, check_lface): Check consistency of
	Lisp face attributes.

1998-04-19  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (Finternal_set_lisp_face_attribute): Add :bold
	and :italic for compatibility.
	(Finternal_set_lisp_face_attribute_from_resource): Handle
	:bold and :italic.  Handle boolean resource values for
	:underline and :italic.

	* xfns.c (display_x_get_resource): Make it externally visible.

	* xfaces.c (lface_from_symbol): Take a frame as parameter.
	If that frame is non-null, return the frame-local face.
	(Finternal_make_lisp_face): Additional frame argument.
	(lface_attributes): Get face attributes from global and frame-local
	definitions.
	(Finternal_lisp_face_equal_p): Additional frame argument.
	(merge_lisp_face_vector_with_property): Ditto.
	(Frealize_basic_faces): Removed.
	(Finternal_get_lisp_face_attribute): Additional frame argument.
	(Finternal_lisp_face_p): Ditto.
	(load_color) [MSDOS]: Removed because it isn't clear how
	to do this for MS-DOS.

	* xfaces.c (lface_from_symbol): Get global face definition
	from face-global-alist.

	* xfaces.c (Finternal_set_lisp_face_attribute): Allow `t'
	as values for :underline and :inverse-video.
	(Finternal_set_lisp_face_attribute): Allow nil values.

1998-04-17  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (Finternal_make_lisp_face): Return Lisp face vector.

	* xfaces.c (syms_of_xfaces): Add Vall_faces.
	(Finternal_make_lisp_face): Add new face to Vall_faces.

	* xdisp.c (echo_area_display): Remove code recomputing faces.
	(redisplay_internal): Ditto.
	(init_iterator): Do it here.

	* xfaces.c (choose_face_font): Check that swidth doesn't change
	for subsequent attributes.
	(xlfd_point_size): Return int.

	* xdisp.c (redisplay_internal, echo_area-display): If realized
	faces have been cleared, call recompute_basic_faces.

	* xfaces.c (recompute_basic_faces): Free realized faces.  Reset
	face_attributes_changed_p.
	(remove_all_realized_faces): Remove all realized faces on
	all frames.
	(Finternal_set_lisp_face_attribute): Call remove_all_realized_faces.

	* xdisp.c (redisplay_internal): If face attributes have been
	changed since the last redisplay, recompute basic faces.
	(echo_area_display): Ditto.

	* xfaces.c (clear_face_gcs): Renamed from clear_realized_face_cache.

	* xfaces.c (min_char_bounds): If face cache not yet present,
	don't try to get font dimensions from faces.

	* xterm.c (x_frame_mode_line_height): If face cache not present
	set, return default height.

	* alloc.c (mark_face_cache): Check for null faces.  Correct
	index bug.

	* dispextern.h (struct face): Renamed from struct rface.  Member
	underline renamed underline_p.  Make it a bit-field.

	* xfaces.c (init_frame_faces): Allocate face cache.
	(free_frame_faces): Free face cache.
	(recompute_basic_faces): Realize basic faces only if face cache is
	allocated, i.e. after init_frame_faces has been called.

	* frame.c (make_frame): Initialze face cache with null.

	* xfaces.c (same_size_fonts): Removed.

	* xterm.c (x_set_glyph_string_gc): Add post-condition
	s->gc != 0.
	(x_set_mouse_face_gc): Ditto.
	(x_set_mode_line_face_gc): Ditto.

	* xfaces.c (realize_default_face): Return int.  Value is
	zero if frame params don't contain enough information to
	realize the default face.
	(realize_basic_faces): Ditto.
	(init_frame_faces): Realize basic faces.

	* xfns.c (x_set_font): First store real font name in frame
	parameters, then call recompute_basic_faces.

	* xfaces.c (recompute_basic_faces): Call realize_basic_faces.

1998-04-16  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (syms_of_xfaces): Correct calls to defsubr.

	* xfns.c (Fx_face_fixed_p): Removed.
	(Fx_list_fonts): Moved to xfaces.c.

	* xfaces.c (compute_face_at_buffer_pos): Renamed to
	face_at_buffer_position.  Parameter charset removed; always
	compute face for CHARSET_ASCII.
	(face_at_string_position): Renamed from
	compute_face_at_string_pos.  Parameter charset removed; always
	compute for CHARSET_ASCII.
	(lookup_face_for_charset): Take frame parameter instead of
	face_cache.
	(lookup_face): Ditto.
	(compute_char_face): Renamed from compute_glyph_face.

	* xdisp.c (init_iterator): Initialize charset member.
	(reseat_iterator_to_string): Ditto.
	(get_charset_at_buffer_position): Determine charset at
	buffer position in current_buffer.
	(reseat_iterator): Call above function.
	(compute_face_at_iterator_position): Call
	compute_face_at_buffer_pos.
	(compute_face_at_iterator_string_position): Call
	compute_face_at_string_pos.
	(get_face_from_id): Removed.
	(get_face_from_cursor_pos): Call compute_face_at_buffer_pos.
	Call get_charset_at_buffer_position.
	(reseat_iterator): Determine face if charset at pos differs
	from iterator's charset.
	(reseat_iterator_to_glyph_pos): Removed.

	* xfaces.c (compute_face_at_bufpos): Remove parameter charset.
	Determine charset from buffer position.
	(compute_string_char_face): Renamed to compute_face_at_string_pos.
	(compute_face_at_bufpos): Renamed to compute_face_at_buffer_pos.

	* dispextern.h (struct display_iterator): Add member charset.

1998-04-15  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (compute_char_face): Removed.

	* xdisp.c (get_overlay_arrow_glyph_row): Use compute_glyph_face
	with new parameter list.

	* xfaces.c (region_face): Removed.
	(allocate_face): Removed.
	(copy_face): Ditto.
	(face_eql): Removed.
	(intern_face): Removed.
	(clear_face_cache): Removed.
	(load_font): Ditto.
	(unload_font): Ditto.
	(load_color): Ditto.
	(unload_color): Ditto.
	(new_computed_face): Ditto.
	(intern_computed_face): Ditto.
	(ensure_face_ready): Ditto.
	(merge_faces): Ditto.
	(compute_base_face): Ditto.
	(merge_face_list): Ditto.
	(Fmake_face_internal): Removed.
	(Fset_face_attribute_internal): Ditto.
	(face_name_id_number): Removed.
	(Fframe_face_alist): Ditto.
	(Fset_frame_face_alist): Ditto.
	(Finternal_next_face_id): Ditto.

	* xterm.h (struct x_output): Remove computed_faces, and
	param_faces.  Remove macros accessing them.

	* xfaces.c: Entirely new face implementation added.

1998-04-11  Gerd Moellmann  <gerd@gnu.org>

	* dispextern.h (struct glyph_pos): Member `bufpos' renamed
	`charpos'.

1998-04-10  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (x_scroll_bar_move): Clear only regions not covered by
	scroll bar window to reduce flickering.  Clear entire height.

	* xdisp.c (move_iterator_vertically_backward): Set iterator's
	current_x and hpos to zero after moving to previous line
	start.

1998-04-03  Gerd Moellmann  <gerd@gnu.org>

	* frame.h (FRAME_FACE_CACHE): Access to a frame's face cache.

	* xfaces.c (xlfd_point_size): Compute relative point size of
	fonts from font and frame resolution.
	(sort_fonts): New function to sort fonts, temporarily setting
	font_frame to the frame in effect.
	(xlfd_point_size): Take additional frame parameter to be able
	to get at the display's resolution.

	* xterm.c (x_setup_relief_colors): Use WHITE_PIX_DEFAULT and
	BLACK_PIX_DEFAULT.
	(x_setup_relief_color): Use FRAME_X_SCREEN instead of default
	screen of display.

1998-03-31  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c (choose_face_fontset): Instantiate fontsets.

	* fontset.h: Add external declarations for Vfontset_alias_alist
	and Vglobal_fontset_alist.

	* xfaces.c (merge_lisp_face_vector_with_property): Simplified.
	(realize_default_face): If frame parameters contain an artificial
	font name naming a fontset, set the family of the default face to
	the fontset name given by the registry.

	* Makefile.in (alloc.o): Add dependency to dispextern.h.

1998-03-22  Gerd Moellmann  <gerd@gnu.org>

	* alloc.c (mark_object): Add function prototype.  Add cast to
	Lisp_Object pointer in call to mark_object for symbol names
	because this otherwise gives a warning from gcc 2.8.1.
	(mark_face_cache): Mark Lisp objects in realized faces.

1998-03-19  Gerd Moellmann  <gerd@gnu.org>

	* frame.h (struct frame): Add member face_cache.

	* alloc.c (mark_object): Mark face cache.
	(mark_face_cache): Mark Lisp faces in face cache of frame.

	* frame.c (make_frame): Initialize face_cache.
	(Fdelete_frame): Free it.

1998-03-18  Gerd Moellmann  <gerd@gnu.org>

	* xfaces.c: Very first skeleton of functions for face realization,
	face merging, face cache etc.

	* dispextern.h (struct rface): Realized faces.  Will replace
	struct face when tested.
	(struct face_cache): Realized face caches.

	* xdisp.c (init_iterator): Initialize area member of display
	iterator.

1998-03-17  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (x_append_glyph): Use it->area to store glyphs.

	* dispextern.h (struct display_iterator): New member area.

	* xterm.c (note_overwritten_text_cursor): Note when the text
	cursor of a window is overwritten.

	* xdisp.c (set_cursor_from_row): If PT is not found in the
	row, display the cursor at the start of the row.

	* dispnew.c (direct_output_forward_char): Call
	set_cursor_from_row.

	* xdisp.c (setup_iterator_overlay_strings_from_glyph_pos): If
	position is not in an overlay string, set iterator's position and
	method explicitly so.
	(set_cursor_from_row): Correct cursor position calculation.
	Make it externally visible.
	(redisplay_window): Call set_cursor_from_row so that there is only
	one place where the cursor position is calculated from a current
	row.

	* dispextern.h (struct display_iterator): New member
	overlay_strings_at_end_processed_p.

	* xdisp.c (check_iterator): Perform sanity checks on
	display_iterators.
	(next_element_from_buffer): Check for overlay strings at ZV.

1998-03-16  Gerd Moellmann  <gerd@gnu.org>

	* buffer.c (init_buffer_once): Add left_margin_width and
	right_margin_width to buffer_local_flags.

	* dispnew.c (margin_glyphs_to_reserve): Function computing
	number of glyphs to reserve for a marginal area.
	(adjust_glyph_matrix): Call it.
	(adjust_frame_glyphs_for_frame_redisplay): Return if frame
	is not alive.

	* window.c (Fset_window_margins): Allow floats.

	* buffer.c (syms_of_buffer): Add buffer-local variables
	left-margin-width and right-margin-width.  Add defaults
	default-left-margin-width and default-right-margin-width.

	* buffer.h (struct buffer): New members left_margin_width
	and right_margin_width.

	* window.c (Fset_window_margins): Make window the last and
	optional argument.

	* xterm.c (x_draw_glyphs): Compute x-positions for rows with
	flag no_marginal_areas_p differently.
	(x_clear_end_of_line): Ditto.
	(x_draw_glyph_string_relief): Compute width of relief differently
	for rows with flag no_marginal_areas_p.

	* dispnew.c (update_window_line): Update marginal areas only
	for rows that don't have no_marginal_areas_p set.

	* xdisp.c (display_mode_line): Set row's flag no_marginal_areas_p.
	(display_menu_bar): Ditto.

	* dispextern.h (struct glyph_row): New member no_marginal_areas_p.

	* dispnew.c (adjust_glyph_matrix): Compute glyph pointers for
	marginal areas in window-based redisplay.

	* dispextern.h (struct glyph_matrix): New members
	left_margin_glyphs and right_margin_glyphs.

1998-03-15  Gerd Moellmann  <gerd@gnu.org>

	* minibuf.c (read_minibuf_unwind): Return Lisp_Object.

	* charset.c (non_ascii_char_to_string): Use char type parameters
	because the function is used that way from outside.  Use unsigned
	char internally.

	* window.c (change_window_height): Return void.
	(make_dummy_parent): Return void.
	(init_window_once): Return void.
	(syms_of_window): Ditto.
	(keys_of_window): Ditto.
	(delete_window): Correct return with and without value.

	* buffer.c (record_buffer): Return void.

	* marker.c (unchain_marker): Return void.

	* window.c (unshow_buffer): Return void.
	(replace_window): Ditto.
	(delete_window): Ditto.

	* term.c (delete_glyphs_hook): Void return type.
	(ring_bell_hook): Ditto.
	(set_terminal_window_hook): Ditto.

	* sysdep.c (init_sigio): Return void.

	* xterm.c (x_set_window_size): Return void.
	(x_calc_absolute_position): Ditto.
	(x_set_offset): Ditto.
	(x_focus_on_frame): Ditto.
	(x_unfocus_frame): Ditto.
	(x_make_frame_visible): Ditto.
	(x_make_frame_invisible): Ditto.
	(x_iconify_frame): Ditto.
	(x_destroy_window): Ditto.
	(x_wm_set_window_state): Ditto.
	(x_wm_set_icon_pixmap): Ditto.
	(x_wm_set_icon_position): Ditto.
	(x_initialize): Ditto.
	(x_error_quitter): Ditto.
	(x_destroy_window): Use xfree instead of free.

	* keyboard.c (clear_waiting_for_input): Return void.

	* xterm.c (x_wm_set_size_hint): Return void.
	(x_raise_frame): Ditto.
	(refreshicon): Ditto.
	(x_error_catcher): Ditto.
	(x_clear_errors): Ditto.

	* keyboard.c (record_asynch_buffer_change): Return void.

	The first line of the following paragraph was garbled for an
	unknown reason.  It couldn't be fully reconstructed.

	* xterm.c (XTread_socket, XTset_terminal_window): Ditto.
	(x_lower_frame): Ditto.
	(x_scroll_bar_clear): Ditto.
	(XTflash): Add default case in switch for -Wall.
	(construct_mouse_click): Return Qnil.
	(cancel_mouse_face): Return void.
	(x_queue_event): Use xmalloc instead of malloc.
	(x_unqueue_events): Use xfree instead of free.

	* ccl.c (ccl_driver): Return int.

	* keyboard.c (stop_polling): Return void.
	(start_polling): Ditto.

	* term.c (keys): Add braces in initializer list for -Wall.

	* sysdep.c (tabs_safe_p): Return int.
	(init_baud_rate): Return void.

	* xterm.c (x_draw_bitmap): Add default case.
	(x_setup_relief_colors): Use DefaultScreen instead of
	DefaultScreenOfDisplay.
	(x_delete_glyphs): Return void.
	(construct_menu_click): Put in #if 0 because it isn't called.

	* xdisp.c (load_overlay_strings): Remove extraneous argument
	in call to qsort.
	(get_overlay_arrow_glyph_row): Add missing return value.

	* window.c (set_window_height): Return void.
	(set_window_width): Ditto.

	* sysdep.c (request_sigio): Return void.
	(unrequest_sigio): Ditto.
	(get_frame_size): Ditto.

	* scroll.c (scroll_cost): Return int.
	(do_line_insertion_deletion_costs): Return void.

	* frame.c (Fdelete_frame): Use xfree instead of free.

	* fileio.c (report_file_error): Return void.

	* dispnew.c: Make compilable with -Wall.
	* term.c: Ditto.

	* charset.h (CHAR_LEN): Moved here from dispextern.h.

1998-03-14  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (x_scroll_bar_move): Clear under scroll bar if height is
	increased.
	(x_setup_relief_color): Free color only for appropriate visual
	classes.

	* xterm.c (expose_window): Fix calculation of intersection of mode
	line rectangle with exposed rectangle.

	* xdisp.c (redisplay_window): Don't do cursor movement based
	on current matrix if w->last_point is not valid.

1998-03-09  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (expose_line): Redraw mode line and menu lines
	differently because they reach into the scroll bar area.

	* xdisp.c (redisplay_window): If redisplaying with same window
	start, don't accept cursor on partially visible line.

1998-03-08  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (x_set_glyph_string_clipping): Set clip rectangle
	for wider mode lines.
	(x_draw_glyph_string_relief): Use larger rectangle for mode lines.

	* xdisp.c (init_iterator): Increase last_visible_x by vertical
	scroll bar width for mode lines.

	* dispnew.c (allocate_matrices_for_window_redisplay): Include
	vertical scroll bar width in width calculation so that we can
	display mode lines wider.

	* xdisp.c (redisplay_window): Restore buffers before returning
	when fonts have changed.

	* dispnew.c (update_window): Mark invisible rows in the current
	matrix invalid.

	* xdisp.c (try_window_id): Force update of first row displayed
	at window end.
	(dump_glyph_matrix): Extracted from Fdump_glyph_matrix.

1998-03-05  Gerd Moellmann  <gerd@gnu.org>

	* dispextern.h (struct glyph_row): Member max_ascent renamed
	ascent.  Member max_descent replaced by height.
	(struct display_iterator): Member max_descent replaced by height.
	(MATRIX_ROW_PIXEL_HEIGHT): Removed.

	* xterm.c (x_alloc_lighter_color): Don't free colors if visual
	class makes it unnecessary or dangerous.

	* xdisp.c (redisplay_window): Case only point has changed, and
	point has moved forward.  Move forward over overlay strings.
	(display_line): Don't set cursor if first glyph from PT is part of
	a continuation line.

1998-02-21  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (start_display): When computing continuation lines
	width, add current_x to the continuation lines width because
	move_iterator_to will stop in front of the buffer position moved
	to.

1998-02-20  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (redisplay_window): Don't try try_window_id if
	windows_or_buffers_changed.

	* xterm.c (x_alloc_lighter_color): Try both factor and delta to
	determine a color.
	(x_setup_relief_color): Allocate/ change one relief.
	(x_setup_relief_colors): Call above function.

	* xterm.h (struct relief): New structure type holding relief info:
	GCs, colors, and whether colors are allocated.

	* xterm.c (x_alloc_lighter_color): If multiplying by factor
	produces the same color, try adding a delta to RGB values.
	(x_setup_relief_colors): Free color cells.

	* xterm.h (struct x_output): New members white_relief_pixel,
	black_relief_pixel holding the foreground colors allocated for
	relief GCs.  New members white_allocated_p, black_allocated_p.

	* xterm.c (x_scroll_run): Don't set updated_window to null.
	This resets updated_window when called from scrolling_window.

	* dispextern.h (scroll_run_hook): Renamed from line_dance_hook.

	* xterm.c (x_scroll_run): Additional window parameter.  Set
	and reset updated_window.

	* dispnew.c (line_dance_hook): Additional window parameter.

	* xdisp.c (try_window_reusing_current_matrix): Don't call
	update_window_begin/end here.  The end function would display the
	cursor on a wrong position and the additional functionality of
	update_window_begin is not needed anyway.  Just set
	updated_window.
	(try_window_id): Ditto.

	* dispnew.c (Fblink_cursor): Remove call to detect_input_pending.
	Don't redraw cursor during redisplay.

	* xterm.c (x_scroll_run): Renamed from do_line_dance.

	* xdisp.c (redisplay_window): For window-based redisplay, always
	try try_window_id.

	* xterm.c (struct glyph_string): New member two_byte_p that is
	non-zero if 16-bit drawing functions must be used.
	(x_fill_composite_glyph_string): Set it.
	(x_fill_glyph_string): Set it.
	(x_draw_glyph_string_foreground): Use it.
	(x_draw_vertical_border): Make line 1 pixel less tall.
	(x_draw_row_bitmaps): Decrease width of area cleared on the left
	side by 1 pixel if window is not right-most hasn't vertical scroll
	bars.
	(x_draw_phys_cursor_glyph): Do nothing if phys_cursor.hpos is
	out of bounds.
	(x_draw_glyph_string_foreground): Use XDrawImageStringX if
	hl == DRAW_CURSOR.

	* xdisp.c (start_display): Check that window start is at line
	start if GLYPH_DEBUG != 0.

	* window.c (window_scroll_pixel_based): Move assertion to
	start_display.

1998-02-19  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (x_redraw_cursor): Don't redraw the cursor if the
	frame hasn't the focus.

	* window.c (make_window): Initialize dy.
	(replace_window): Ditto.

	* window.h (window): New member dy specifying the amount by which
	a window is scrolled "smoothly".

	* xterm.c (x_set_glyph_string_clipping): Don't use glyph string's
	y-position because it can be negative.
	(x_draw_row_bitmaps): Don't clear with negative y-position like
	above.
	(x_clear_end_of_line): Same theme as above.

	* xterm.c (x_alloc_nearest_color): Allocate a color or, if no
	exact match exists, the nearest existing color.  Patterned after
	defined_color.
	(x_alloc_lighter_color): Allocate a color that is lighter or
	darker than a given color by a specified factor.
	(x_setup_relief_colors): Set up relief line colors based on
	the background color of a glyph string face.
	(x_draw_glyph_string_relief): Call x_setup_relief_colors.

	* xfns.c (x_make_gc): Don't allocate relief GCs.
	* widget.c (create_frame_gcs): Don't allocate relief GCs.
	(setup_frame_gcs): Don't change relief GCs.

	* xterm.h (struct x_output): New member relief_background giving
	the background pixel color for which relief GCs can be used.
	Set by x_setup_relief_colors.

	* xterm.c (x_draw_glyph_string_relief): Draw relief differently
	for mode and menu lines.

	* xdisp.c (set_next_iterator_stop_pos): No longer static.

	* dispnew.c (direct_output_for_insert): Call
	set_next_iterator_stop_pos after having changed it2.endpos.

1998-02-17  Gerd Moellmann  <gerd@gnu.org>

	* dispnew.c (update_window): Work on selected_window, only.

	* xterm.c (x_erase_phys_cursor): Return quickly if physical cursor
	hpos is >= number of glyphs in the cursor row.

	* xdisp.c (try_window_id): Bug fix; update_window_end was not
	called.

1998-02-16  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (init_iterator): Increase last_visible_x for mode lines
	and menu lines.

	* dispnew.c (allocate_matrices_for_window_redisplay): Allocate
	enough glyphs to display a mode line or menu line which draws over
	flags areas.

	* xterm.c (XTset_vertical_scroll_bar): Use
	WINDOW_DISPLAY_TEXT_AREA_PIXEL_HEIGHT instead of
	VERTICAL_SCROLL_BAR_PIXEL_HEIGHT.
	(x_draw_glyphs): Draw over flags areas when drawing a mode line
	or menu.
	(x_set_glyph_string_clipping): Set clipping differently if drawing
	a mode line or menu line.

	* xterm.h (VERTICAL_SCROLL_BAR_PIXEL_HEIGHT): Removed.

	* xterm.c (expose_line): Don't draw bitmaps for mode lines and
	menu lines.
	(x_scroll_bar_create): Don't clear flags areas.
	(x_draw_row_bitmaps): Clear visible row height, only.

	* dispnew.c (Fblink_cursor): Moved here from xdisp.c.

1998-02-15  Gerd Moellmann  <gerd@gnu.org>

	* dispnew.c (direct_output_for_insert): When checking for tabs in
	the line, set it2.endpos to ZV.

	* window.h (struct window): New member cursor_off_p.
	* xterm.c (x_redraw_cursor): Implementation of redraw_cursor_hook
	for X.
	* dispnew.c (redraw_cursor_hook): If non-null, function that can
	be called to display or erase the cursor.
	* xdisp.c (Fblink_cursor): Blink the cursor of a specified window
	or selected_window.

	* xterm.h (text_cursor_kinds): Enumerators changed to uppercase.

	* dispnew.c (update_window_line): Special handling of inverse
	lines in #if 0 removed.

	* xterm.c (x_write_glyphs): Renamed from XTwrite_glyphs.
	(x_insert_glyphs): Renamed from XTinsert_glyphs.
	(x_clear_frame): Renamed from XTclear_frame.
	(x_clear_end_of_line): Renamed from XTclear_end_of_line.
	(x_ins_del_lines): Renamed from XTins_del_lines.
	(x_change_line_height): Renamed from XTchange_line_height.
	(x_delete_glyphs): Renamed from XTdelete_glyphs.
	(x_clear_cursor): Renamed from clear_cursor.
	(x_update_begin): Renamed from XTupdate_begin.
	(x_update_end): Renamed from XTupdate_end.
	(x_update_window_begin): Renamed from XTupdate_window_begin.
	(x_update_window_end): Renamed from XTupdate_window_end.
	(x_frame_mode_line_height): Renamed from XTframe_mode_line_height.
	(x_produce_glyphs): Renamed from XTproduce_glyphs.
	(x_produce_special_glyphs): Renamed from XTproduce_special_glyphs.
	(x_produce_special_glyphs): Implementation in #if 0 removed.

	* xdisp.c (Fdump_redisplay_state): Display row's fill_line_p
	flag in the dump.

	* dispnew.c (update_text_area): Handling of glyphs with pixel
	width zero removed.  Decrement desired stop pos if desired row
	fills its line.

	* xterm.c (x_fill_glyph_string): Handling of glyphs with pixel
	width zero removed.
	(BUILD_GLYPH_STRINGS): Set glyph string flag
	extends_to_end_of_line_p based on row's flag fill_line_p and face
	background and stipple.  Make sure it works for composite characters.

	* xdisp.c (extend_face_to_end_of_line): Set the glyph row flag
	fill_line_p.  For window-based redisplay, add a space only if
	the row is empty so that we know the face to draw.

	* dispextern.h (struct glyph_row): New flag fill_line_p.  Non-zero
	means draw the face of the last glyph in the text area to the
	right end of the text area.

	* xdisp.c (init_iterator): Show region in window mini-buffer
	window refers to.

	* dispextern.h (struct display_iterator): Redundant member
	region_showing_p removed.  Test for region_beg > 0 instead.

	* dispnew.c (update_text_area): Clear to end of line if cursor is
	beyond the end of the desired line.  Necessary because we don't
	have a phys_cursor_glyph with which to erase the cursor.  We don't
	have one because this method of drawing a cursor doesn't work with
	lbearing/rbearing.

	* xterm.c (XTinsert_glyphs): Block input.

1998-02-14  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (x_set_cursor_gc): Don't use cursor_gc for composite
	glyph strings.
	(x_draw_glyph_string_background): Fill background with background
	pixel for the first glyph of a composite character.

	* xdisp.c (try_window): Change return type to int.  Value is zero
	if fonts were loaded during redisplay.
	(redisplay_window): Return if fonts have been loaded during
	redisplay.
	(append_space): New parameter default_face_p.

1998-02-13  Gerd Moellmann  <gerd@gnu.org>

	* dispnew.c (adjust_glyph_matrix): In case of optimizing C-x 2,
	don't let a partially visible line in a current matrix stay
	enabled.

1998-02-09  Gerd Moellmann  <gerd@gnu.org>

	* minibuf.c (read_minibuf): Put access to minibuffer_prompt_length
	in #if PROMPT_IN_BUFFER.

	* xdisp.c (display_line): If row ends in ZV, make the space
	that is added to place the cursor on it appear in default face.

	* xterm.c (expose_area): New function redrawing a single
	glyph row area.
	(expose_line): Use it to redraw all areas of a row.

	* dispextern.h (move_operation_enum): New enum
	move_operation_enum.

	* window.c (window_scroll_pixel_based): Remove now unnecessary
	code that made sure that it->current_y doesn't become negative.

	* xdisp.c (move_iterator_in_display_line_to): New parameter
	op.  Special meaning of to_pos <= 0 and to_x < 0 removed.
	(move_iterator_to): Ditto.

	* dispextern.h (struct glyph_matrix): New member window_width.

	* dispnew.c (adjust_glyph_matrix): Set window_width.  Optimize
	case of changing window height.

	* xterm.c (x_draw_row_bitmaps): Don't clear vertical window
	border to the left.

	* dispextern.h (struct glyph_row): Remove right_to_left_p.  RMS
	says this aspect of Emacs is currently redesigned.

	* xterm.c (x_clip_to_row): Subtract 1 from clip width if we
	have to draw a vertical border.

	* window.c (window_scroll_pixel_based): When scrolling down by
	screen-fulls, make sure it.current_y doesn't get negative because
	this would confuse move_iterator_vertically.

	* xdisp.c (move_iterator_vertically_backward): Bug fix for
	the case continuation lines are involved.
	(try_window_id): Don't set the cursor into scroll margins.

1998-02-08  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (x_append_glyph): Don't compute left_overhang and
	right_overhang.
	(XTproduce_glyphs): left_overhang and right_overhang removed.
	Set it->glyph_row->contains_overlapping_glyphs_p.

	* xdisp.c (Fdump_redisplay_state): Output of glyph->left_overhang
	and right_overhang removed.

	* dispextern.h (struct glyph_row): New member
	contains_overlapping_glyphs_p used to optimize glyph drawing.
	(struct display_iterator): left_overhang and right_overhang
	removed.
	(struct glyph): Ditto.

	* xterm.c (x_draw_relief): Removed.
	(x_draw_bitmap): Renamed from draw_bitmap.
	(x_draw_glyphs): Completely new implementation of draw_glyphs
	capable of handling arbitrary lbearing and rbearing values.
	Several sub-functions not mentioned here.

1998-01-30  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (x_erase_phys_cursor): Clear area under the cursor only
	if displaying hollow box cursor.  draw_glyphs should handle
	other cases.
	(draw_glyphs): Move start to the left and end to the right if they
	overlap with previous or following characters.
	(draw_glyphs): If background is cleared for hl == DRAW_CURSOR,
	make sure XDrawString uses function GXset.  Otherwise the
	character under the cursor would be invisible.
	(x_draw_bar_cursor): Don't draw over previous character if it
	has right_overhang.

	* window.c (get_phys_cursor_glyph): Return the glyph under a
	window's physical cursor.

	* xterm.c (x_draw_hollow_cursor): Use get_phys_cursor_glyph.
	(x_draw_bar_cursor): Ditto.
	(x_erase_phys_cursor): Ditto.
	(x_phys_cursor_in_rect_p): Ditto.
	(x_display_and_set_cursor): Remove reference to w->phys_cursor_glyph.

	* window.c (make_window): Remove reference to phys_cursor_glyph.
	(replace_window): Ditto.

	* window.h (struct window): Remove phys_cursor_glyph.  There is
	now always a glyph present for placing the cursor on it in
	each glyph row, even at the end of a line.

	* xdisp.c (append_space): Function to add a space to an iterators
	glyph row.
	(display_line): Add spaces at the end of lines that are used to
	place the cursor on them.
	(compute_line_metrics): If row consists of a space only that was
	added to place the cursor on it, use that space's height as the
	line height.

1998-01-29  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (Fdump_redisplay_state): Dump left and right overhang of
	glyphs.

1998-01-28  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (x_append_glyph): Set overhang of glyph from iterator.
	(XTproduce_glyphs): Set it->left_overhang and it->right_overhang.

	* dispextern.h (struct glyph): Add left_overhang and
	right_overhang.
	(struct display_iterator): Ditto.

	* dispnew.c (direct_output_for_insert): Give up if newly inserted
	glyphs have different ascent or descent than original row.

	* xdisp.c (compute_line_metrics): Compute row->max_ascent and
	row->max_descent only if unknown.
	(display_line): Compute row->max_ascent and row->max_descent.
	(display_string): Ditto.

	* window.h (struct window): New members phys_cursor_ascent and
	phys_cursor_descent.

	* xterm.c (x_phys_cursor_in_rect_p): Use them.
	(x_draw_hollow_cursor): Ditto.
	(x_erase_phys_cursor): Ditto.
	(x_display_and_set_cursor): Set them.
	(x_append_glyph): Don't set glyph members that were removed.

	* dispextern.h (struct glyph): Members ascent, descent,
	contributes_to_line_height_p removed.

1998-01-25  Gerd Moellmann  <gerd@gnu.org>

	* dispextern.h (DEFAULT_FACE_ID, MODE_LINE_FACE_ID): Symbolic
	names for face ids of frame default face and mode line face.

	* xdisp.c (compute_face_at_iterator_string_position): If
	displaying a mode line use MODE_LINE_FACE_ID instead of
	DEFAULT_FACE_ID.

	* xdisp.c (reseat_iterator_to_string): Additional parameter start.
	(display_string): Ditto, additional parameter lisp_string.
	(display_line): Call display_string with Lisp mini-buffer prompt
	string.
	(display_menu_bar): Call display_string with Lisp string.
	(display_mode_element): Ditto.
	(next_element_from_string): Make it work for non-overlay Lisp
	strings with field width and precision.

	* minibuf.c (minibuffer-prompt-in-buffer): Bound if
	PROMPT_IN_BUFFER.

	* xfaces.c (compute_string_char_face): Fix face computation
	for overlay strings.

	* xdisp.c (struct overlay_entry): Add member after_string_p.
	(load_overlay_strings): Simplify.

	* window.c (delete_window): Defer glyph matrix adjustment.
	(Fsplit_window): Ditto.
	(change_window_height): Ditto.
	(Fset_window_configuration): Ditto.
	(Fset_window_margins): Ditto.
	* frame.c (set_menu_bar_lines): Ditto.
	(Fmake_terminal_frame): Ditto.
	* dispnew.c (change_frame_size_1): Ditto.

1998-01-24  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (move_iterator_vertically_backward): Change algorithm.

	* dispnew.c (direct_output_for_insert): Give up if start
	position has overlay strings.

	* xdisp.c (display_line): Don't set cursor if row ends in middle
	of overlay string.
	(Fdump_redisplay_state): Print complete row start and end
	position.
	(redisplay_window): Cursor movement when matrix hasn't changed---
	if PT < last_point, maybe move forward if row ends at PT and
	in middle of char.

	* minibuf.c (read_minibuf): Save the value of
	minibuffer_prompt_length in minibuf_save_list.
	(read_minibuf_unwind): Restore minibuffer_prompt_length.

	* xdisp.c (redisplay_window): Add assertion for cursor movement
	case, PT < last_point.
	(move_iterator_in_display_line_to): If to_pos specified, move
	over before-strings.

	* dispextern.h (MATRIX_ROW_STARTS_IN_MIDDLE_OF_CHAR_P): Test
	start.string_index > 0.

	* xdisp.c (redisplay_internal): Adjust glyphs if fonts_changed_p
	is set.  Retry redisplay if fonts_changed_p is set before update.

	* xterm.c (x_load_font): Set fonts_changed_p.

	* xfaces.c (Fset_face_attribute_internal): Set fonts_changed_p.

	* dispnew.c (adjust_glyphs_for_font_change): Removed.

	* xdisp.c (try_window): Check fonts_changed_p.
	(try_window_reusing_current_matrix): Ditto.
	(try_window_id): Ditto.

	* dispnew.c (adjust_glyphs_for_font_change): Set fonts_changed_p.
	(fonts_changed_p): Flag indicating a font change since the last
	glyph matrix adjustment.

	* xterm.c (x_per_char_metric): Use font->max_bounds as
	char metric of the font's default char if the default char
	hasn't per char metric itself.

	* xfaces.c (Fset_face_attribute_internal): Adjust glyphs
	for font change.
	(min_char_bounds): Check face->font != NULL.
	(font_min_bounds): Return minimum font metrics.  Capture the
	case of invalid min_bounds contents.
	(min_char_bounds): Call font_min_bounds.

1998-01-22  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (start_display): Don't set it->prompt_width if
	PROMPT_IN_BUFFER.
	(move_iterator_in_display_line_to): Ditto.
	(display_line): Don't display prompt via display_string if
	PROMPT_IN_BUFFER.

	* minibuf.c (Fminibuffer_prompt_width): Return value from
	current_buffer if PROMPT_IN_BUFFER.
	(read_minibuf): If PROMPT_IN_BUFFER, insert prompt into
	mini-buffer and make it read-only.
	(Fminibuffer_complete_and_exit): If PROMPT_IN_BUFFER, use
	minibuffer_prompt_length instead of BEGV.
	(Fminibuffer_complete_word): Ditto.
	(Fminibuffer_complete_word): Ditto.

	* insdel.c (del_range_1): If PROMPT_IN_BUFFER, and start position
	is less than mini-buffer prompt width, use prompt width as start.

	* editfns.c (make_buffer_string): If PROMPT_IN_BUFFER, and start
	position is less than mini-buffer prompt width, use the prompt
	width as start.

	* cmds.c (Fbeginning_of_line): If PROMPT_IN_BUFFER, set point to
	end of prompt if applied to a mini-buffer and BEG reached.

1998-01-21  Gerd Moellmann  <gerd@gnu.org>

	* editfns.c (make_buffer_string): If PROMPT_IN_BUFFER, add prompt
	length to start position.

	* buffer.c (Fget_buffer_create): Initialize
	minibuffer_prompt_length.
	(Fmake_indirect_buffer): Ditto.
	(Fkill_buffer): Ditto.

	* buffer.h (struct buffer): Add member minibuffer_prompt_length
	if PROMPT_IN_BUFFER.

1998-01-19  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (next_element_from_string): Make it work for arbitrary
	Lisp strings.
	(set_iterator_to_next): Advance to next overlay string only
	if it->string is an overlay string.

	* dispextern.h (struct display_iterator):
	next_ovstr_face_check_pos renamed next_string_face_check_pos.

	* xfaces.c (compute_string_char_face): Compute face for
	arbitrary Lisp string.  Renamed from compute_overlay_string_char_face.

	* xdisp.c (next_element_from_string): Renamed from
	next_element_from_overlay_string.
	(compute_face_at_iterator_string_position): Renamed from
	compute_face_at_iterator_overlay_string_position.

	* dispextern.h (struct display_iterator): Member overlay_string
	renamed string.

	* xdisp.c (next_element_from_c_string): Renamed from
	next_element_from_string.

	* dispextern.h (struct glyph_pos): Reversed meaning of
	overlay_string_index and string_index.

	* xdisp.c (next_element_from_overlay_string): Fix bug that made
	this function always return the first character of an overlay
	string.

1998-01-18  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (reseat_iterator): Set next_invisible_check_pos only if
	forced or new pos > next_invisible_check_pos.
	(redisplay_window): Don't try same window start if PT < window
	start.
	(move_iterator_vertically): Bug fix satisfying post-condition
	when ZV is reached and no newline in front.
	(move_iterator_vertically_backward): New implementation.
	(move_iterator_vertically_backward): Bug fixes.

	* xterm.c (XTmouse_position): Change call to min_char_bounds.
	* dispnew.c (adjust_frame_glyphs_for_window_redisplay): Ditto.
	(adjust_glyphs_for_font_change): Always adjust.

	* dispnew.c (struct dim): Use int.

	* xfaces.c (Fset_face_attribute_internal): Set face->font_name.
	(allocate_face): Initialize it.
	(load_font): Use XLoadQueryFont again instead of x_load_font.
	(unload_font): Use XFreeFont again.
	(min_char_bounds): Iterate over fonts of faces.  Use frame's
	font sizes as default.  Remove parameter except_last_font_p.

	* dispextern.h (struct face): Add font_name.

1998-01-17  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (move_iterator_vertically): Check post-condition.  Move
	to start of line if ending at ZV and no newline in front.
	(move_iterator_to): If to_y specified, always first move to x = 0,
	so that move stops at line start instead of line end.  This is
	probably what callers would expect to happen.

	* window.c (window_scroll_pixel_based): Pixel-based scrolling that
	can handle different line heights.
	(window_scroll_line_based): Formerly window_scroll.
	(window_scroll): Call both.

	* xdisp.c (start_display): Exclude code if PROMPT_IN_BUFFER.
	(move_iterator_in_display_line_to): Ditto.
	(display_line): Ditto.

	* minibuf.c (read_minibuf): Conditionally insert prompt into
	buffer instead of handling prompts specially.  Change other
	functions accordingly.  All such code is in #if PROMPT_IN_BUFFER.

	* dispnew.c (adjust_glyph_matrix): Optimize the handling of C-x 2,
	upper window.  Optimize calls to xrealloc if same width.

	* xdisp.c (redisplay_window): Don't use
	try_window_reusing_current_matrix if window scroll functions
	exist.

	* dispextern.h (struct display_iterator): Member
	redisplay_end_trigger_p removed.

	* dispextern.h (WINDOW_DISPLAY_PIXEL_HEIGHT_WITHOUT_MODE_LINE):
	Renamed to WINDOW_DISPLAY_TEXT_AREA_PIXEL_HEIGHT.

1998-01-16  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (move_iterator_by_lines): Optimize for truncate-lines
	nil.  Optimize truncate-lines t and moving backward.
	(move_iterator_to_previous_visible_line_start): Contains the heart
	of the previous set_iterator_to_previous_visible_line_end.  Don't
	reseat the iterator.  Used by move_iterator_by_lines.
	(set_iterator_to_previous_visible_line_start): Call function
	above.
	(move_iterator_in_display_line_to): Check TO_POS before doing
	anything else.  Otherwise to_pos == PT would move to x of PT+1.

	* indent.c (Fvertical_motion): Use display_iterator.

	* xdisp.c (move_iterator_by_lines): New function moving by screen
	lines.
	(redisplay_window): Use it.
	(move_iterator_to): Correct branch of to_vpos specified.
	(move_iterator_vertically_backward): Increment nlines after having
	backed up over some lines because the last line was not backed up
	over.
	(move_iterator_via_matrix): Look for it->pos in the matrix, and
	calculate it->vpos and it->current_y relative to this row.
	(move_iterator_via_matrix): Set in #if 0.  It doesn't seem to
	have a big effect and it is complex.
	(move_iterator_to): Call to move_iterator_via_matrix in #if 0.

1998-01-15  Gerd Moellmann  <gerd@gnu.org>

	* xterm.c (x_draw_relief): Simplify drawing and draw so that lines
	join nicely.  Lines with widths > 2 don't join nicely under X.
	* xterm.h (struct x_output): Remove member relief_gc_line_width.
	* widget.c (setup_frame_gcs): Initialize relief GC's to line
	width 1; remove references to relief_gc_line_width.
	* xfns.c (x_make_gc): Ditto.

	* xfaces.c (Fset_face_attribute_internal): Set frame garbaged
	if relief changes.
	(Fset_face_attribute_internal): Use XINT instead of XFASTINT
	to get a relief because they can be negative.

	* xterm.c (x_draw_relief): Correct line drawing positions.  Pixel
	positions are for the middle of lines under X.

	* xdisp.c (try_window_id): Always search for the cursor by setting
	w->cursor.vpos = -1.  Search in unchanged rows at the top and
	bottom if cursor not found in displayed lines.
	(display_mode_line): First extend face, then set right shadow
	flag.  Otherwise the wrong glyph gets the right shadow.

	* dispnew.c (direct_output_for_insert): Give up if line contains
	a tab.  The number of spaces inserted for a tab changes if we
	insert glyphs in front of it.

	* xterm.c (x_list_fonts): Changes undone because the Lisp
	implementation for make-face-smaller, make-face-larger, and
	make-face-fixed can do without them.

	* xfns.c (Fx_list_fonts): Original x-list-fonts from x-list-font.c
	inserted.

	* xdisp.c (try_window_id): First compute beg_unchanged, then
	compare with window start pos.

	* xfns.c (Fx_face_fixed_p): Determine whether a face has a
	fixed-width font.
	(syms_of_xfns): defsubr for x-face-fixed-p.

	* xterm.c (x_erase_phys_cursor): If row containing cursor is not
	enabled, don't do anything because this row will be newly drawn
	anyway and because we can additionally no longer determine the row
	height.

	* xdisp.c (display_line): Bug fix cursor positioning.

	* xfns.c (x-list-fonts): Copied from x-list-fonts.c; #include
	removed.  x-list-fonts.c is now obsolete.
	(Qfixed, Qvariable): Moved here from xfaces.c.

1998-01-14  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (display_line): Set row->ends_at_zv_p based on
	FETCH_BYTE for truncated lines.
	(display_line): Set cursor differently.
	(display_line): Fixed bug setting last_pos_on_this_line wrong
	for truncated lines.

	* dispnew.c (adjust_glyph_matrix): Always adjust for frame-based
	redisplay.

	* window.c (Fsplit_window): Adjust glyphs before setting buffer.

	* dispnew.c (adjust_frame_glyphs_for_window_redisplay): Add
	assertion that character dimensions are not zero.

	* xterm.c (x_load_font): adjust_glyphs_for_font_change while
	input is blocked.

	* xdisp.c (decode_mode_spec): Faster implementation of line number
	display.

	* xterm.c (x_draw_row_bitmaps): Clear flags area before drawing
	bitmaps if bitmaps don't fill the entire area.
	(draw_bitmap): Draw bitmaps horizontally centered in flags area.

	* xterm.h (FRAME_FLAGS_BITMAP_HEIGHT): Macro giving the
	pixel height of flags bitmaps.

	* frame.h (FRAME_FLAGS_AREA_COLS): Use FRAME_X_FLAGS_AREA_COLS.
	(FRAME_FLAGS_AREA_WIDTH): Ditto.

	* xterm.h (FRAME_FLAGS_BITMAP_WIDTH): Macro giving the width
	in pixels of a flags area of a frame.
	(FRAME_X_FLAGS_AREA_WIDTH): Removed.
	(FRAME_X_FLAGS_AREA_COLS): Macro giving the number of columns
	occupied by a flags area.

1998-01-13  Gerd Moellmann  <gerd@gnu.org>

	* xdisp.c (hscroll_window_tree): Remove test for non-nil
	window_end_valid.

	* dispnew.c (adjust_glyph_matrix): Check redisplay_p if
	GLYPH_DEBUG != 0.

	* xdisp.c (display_line): Correct wrong calculation of row->x for
	the case of nglyphs == 1.
	(hscroll_window_tree): Renamed from hscroll_windows.
	(hscroll_windows): New function calling hscroll_window_tree that
	clears desired matrices on a frame when hscroll has been changed.
	(redisplay_p): Global flag set during redisplay.
	(redisplay_internal): Set and clear redisplay_p.

	* xfaces.c (min_char_bounds): Add assertion that width and height
	are not zero at the end.  Initialize *height and *width to -1,
	instead of using BITS_PER_SHORT.  If font has min_bounds.width
	zero, use its max_bounds.width.

	* x-list-font.c (Fx_list_fonts): Check INTEGERP or FLOATP for
	width and height.

1998-01-12  Gerd Moellmann  <gerd@acm.org>

	* dispnew.c (adjust_glyph_matrix): Do nothing if sizes haven't
	changed.  Don't clear desired matrices.

	* xdisp.c (hscroll_windows): Compute pt after setting
	current_buffer.
	(redisplay_window): Don't do cursor movement based on current
	matrix if just_this_one_p is zero.

	* x-list-font.c (Fx_list_fonts): Additional parameter fixed.
	specifying that fixed-width, variable-width fonts or both
	should be returned.

	* xfaces.c (Qfixed, Qvariable): Symbols for use by x-list-fonts.
	(syms_of_xfaces): Initialize them.

	* xterm.c (x_list_fonts): Include auto-scaled fonts.  Extend
	cached information.

1998-01-11  Gerd Moellmann  <gerd@acm.org>

	* xdisp.c (display_mode_line): Extend face to end of line.

	* xdisp.c (echo_area_display): Don't call display_string with
	echo_area_glyphs_length == 0 which would mean infinite precision.
	(redisplay_internal): Adjust window_end_vpos if necessary.

1998-01-07  Gerd Moellmann  <gerd@acm.org>

	* xdisp.c (display_line): Set it->ends_at_zv_p differently.

1998-01-05  Gerd Moellmann  <gerd@acm.org>

	* xdisp.c (get_row_start_continuation_line_width): Removed.
	(init_iterator_to_row_start): Set it.current_x from row.
	(try_window_id): Set it.continuation_lines_width directly from
	row.

	* xdisp.c (hscroll_windows): Use w->pointm if window is not
	selected_window.
	(hscroll_windows): Center cursor in window.
	(hscroll_windows): Call move_iterator_in_display_line_to.

1998-01-04  Gerd Moellmann  <gerd@acm.org>

	* xdisp.c (hscroll_windows): Check hscroll < 0.
	(redisplay_window): Allow quick cursor movement if overlay arrow
	but frame uses window-based redisplay.
	(display_line): Take special case for nglyphs == 1 out of #if 0.
	(display_line): Set row->ends_at_zv_p after the loop displaying
	glyphs because ZV can be in truncated text.
	(hscroll_windows): Use init_iterator_to_row_start.

	* dispnew.c (scrolling_window): Calculation of overlapping
	runs fixed.
	(row_equal_p): Compare continued_p and continuation_line_p.

1998-01-02  Gerd Moellmann  <gerd@acm.org>

	* xterm.c (x_get_mode_line_face_gc): Renamed from
	x_get_modeline_face_gc.

	* xdisp.c (TEXT_PROP_DISTANCE_LIMIT): Max. distance from current
	buffer position to look for text properties.
	(get_face_from_cursor_pos): Use it.
	(compute_face_at_iterator_position): Use it.
	(next_element_from_buffer): Use it.

	* dispnew.c (scrolling_window): Decrement run's y-position
	when extending it backwards.

	* xterm.c (do_line_dance): Don't ever copy more than window height.

1998-01-01  Gerd Moellmann  <gerd@acm.org>

	* xdisp.c (redisplay_window): Cursor motion in unchanged
	matrix---use MATRIX_ROW_.*_IN_MIDDLE_OF_CHAR_P.
	(init_iterator_to_next_row_start): Special handling of lines
	ending in middle of char removed.
	(hscroll_windows): Hscroll windows only if window_end_valid is not
	nil.
	(try_window_reusing_current_matrix): Call hscroll_windows.
	(init_iterator_to_row_start): Initialize iterator for display
	starting at a position given by a glyph_row->start.
	(redisplay_window): Don't use vmotion because it gives wrong
	results if lines are continued and variable width fonts are used.

	* dispextern.h (struct glyph_pos): New member dpvec_index.
	(MATRIX_ROW_ENDS_IN_MIDDLE_OF_CHAR_P): Test if row ends in the
	the middle of a character.
	(MATRIX_ROW_STARTS_IN_MIDDLE_OF_CHAR_P): Test if row starts in
	the middle of a character.

	* xdisp.c (set_iterator_to_next): Increment it->dpvec_index, reset
	it.
	(next_element_from_display_vector): Use it->dpvec_index.
	(reseat_iterator): Reset it.
	(init_iterator): Reset it.
	(setup_iterator_dpvec_from_glyph_pos): Set up it->dpvec and
	it->pos.dpvec_index from a glyph_pos structure.
	(init_iterator_from_glyph_pos): Call the function above.
	(reseat_iterator_to_glyph_pos): Ditto.

	* dispnew.c (direct_output_forward_char): Don't use this method at
	overlay boundaries or near invisible text.
	(direct_output_forward_char): Step through glyph row to find
	cursor position.

	* xterm.c (x_get_cursor_gc): Don't return cursor_gc for font ==
	frame font if line height differs from font height.

	* xdisp.c (set_iterator_to_next): Renamed from
	move_iterator_forward to avoid confusion with other move_.*
	functions.

	* dispextern.h (FACE_RELIEF_P): Renamed from FACE_3D_P.

1997-12-31  Gerd Moellmann  <gerd@acm.org>

	* xterm.c (x_get_cursor_gc): Renamed from x_cursor_gc to use the
	same naming convention as for other GC functions.
	(draw_glyphs): Don't fill background when drawing a cursor and
	font height is less than line height.

1997-12-30  Gerd Moellmann  <gerd@acm.org>

	* xdisp.c (init_display_iterator.*): Renamed to shorter names
	init_iterator_.*.

	* xdisp.c (move_iterator_forward): Restore it->len from
	it->dpvec_char_len if dpend reached.
	(get_next_display_element): Don't consume translated char
	prematurely.
	(display_line): Don't set this_.* variables if row is continued.
	(start_display): Move to start of continuation line if ending
	up at end of continued line.

	* dispextern.h (struct display_iterator): New member dpvec_char_len.

	* xdisp.c (move_iterator_in_display_line_to): Check TO_POS after
	checking TO_X and continuation lines.
	(get_last_unchanged_at_beg_row): If first_changed_pos is the end
	of a continued line, don't consider this line as unchanged because
	it may no longer be continued.

1997-12-29  Gerd Moellmann  <gerd@acm.org>

	* xdisp.c (try_window_id): Catch the case that moving over
	continuation lines moves first_unchanged_at_end_row to a row not
	displaying text.

	* dispextern.h (struct glyph_row): New member
	continuation_lines_width.  Member continuation_line_p removed.
	(MATRIX_ROW_CONTINUATION_LINE_P): Non-zero if row displays a
	continuation line.
	* xdisp.c (display_line): Set row->continuation_lines_width.
	(get_row_start_continuation_line_width): Set continuation lines
	width of iterator from continuation lines width of glyph row.
	(get_row_start_continuation_line_width): Make it inline.
	(set_window_cursor): Make it inline.
	(try_window_id): Use MATRIX_ROW_CONTINUATION_LINE_P.
	(Fdump_redisplay_state): Ditto.

	* dispnew.c (update_window_line): Use MATRIX_ROW_CONTINUATION_LINE_P.
	* xterm.c (x_draw_row_bitmaps): Use MATRIX_ROW_CONTINUATION_LINE_P.

	* xdisp.c (try_window_id): Set it.hpos and it.current_x to zero
	after determining the continuation lines width for
	last_unchanged_at_beg_row.

	* xterm.c (x_draw_row_bitmaps): Let overlay arrow have precedence.

	* xdisp.c (display_mode_line): Handle 3D faces only on frames
	which support faces.
	(init_display_iterator): Ditto.
	(move_iterator_via_matrix): Skip over truncation glyph at the row
	start on terminal frames.
	(hscroll_windows): Choose hscroll margin differently for window
	system and terminal frames.

1997-12-28  Gerd Moellmann  <gerd@acm.org>

	* xdisp.c (hscroll_windows): Change hscroll of windows.
	(redisplay_internal): Call it.

	* dispnew.c (direct_output_for_insert): Give up if a glyph
	doesn't fit completely on the line.
	(direct_output_forward_char): Give up for non-ASCII chars.
	(direct_output_forward_char): Set redisplay_performed_directly_p.

	* dispextern.h (struct display_iterator): Make first_visible_x
	and last_visible_x ints; this is for very long truncated lines.

	* xdisp.c (move_iterator_in_display_line_to): Separate check for
	MOVE_X_REACHED only if it->nglyphs == 0.  This fixes cursor
	positioning problems with the mouse.
	(move_iterator_in_display_line_to): Truncate lines if it->current_x
	>= it->last_visible_x instead of >.
	(display_line): Ditto.

	* xterm.c (draw_glyphs): Draw rectangles if font could not be
	loaded.
	(XTproduce_glyphs): Calculate pixel_width for composite chars and
	non-ASCII chars differently.  Always produce 1 glyph for composite
	chars.  If font not found, use CHARSET_WIDTH to calculate width of
	non-ASCII chars.
	(x_get_char_font_and_encoding): Return null if font could not be
	loaded.  Reset font to null if fontset could not be loaded.
	(draw_glyphs): Fill background if font not found.
	(draw_glyphs): Unused parameter just_foreground_p removed.  New
	parameter composite_glyph.
	(draw_glyphs): Use enumeration for parameter hl.
	(draw_glyphs): Pass a display area relative x-position to
	draw_glyphs when calling it recursively for composite chars.

1997-12-27  Gerd Moellmann  <gerd@acm.org>

	* xterm.c: Patches from handa.etl.go.jp integrated.
	(draw_glyphs): Don't rely on x_get_char_font_and_encoding to
	find a font_info.

	* xdisp.c (move_iterator_in_display_line_to): Check to_x
	for nglyphs == 1.

	* xterm.c (x_draw_relief): Draw relief lines.
	(draw_glyphs): Call x_draw_relief.

1997-12-26  Gerd Moellmann  <gerd@acm.org>

	* xfns.c (x_make_gc): Create relief GC's.

	* widget.c (create_frame_gcs): Create GC's for relief drawing.
	(setup_frame_gcs): Initialize them.
	(EmacsFrameDestroy): Free them.

	* xdisp.c (try_window_id): Get continuation lines width if
	last_unchanged_at_beg_row is continued or a continuation line.
	(move_iterator_via_matrix): Don't do it for mini-buffer windows.
	(redisplay_window): Case point has changed, and it has not
	moved off the frame.  Don't increment row if PT equals the row
	end if the row ends in ZV.

	* xterm.c (x_draw_row_bitmaps): New function to draw bitmaps.
	(expose_line): Call it.
	(x_after_update_window_line): Call it.

	* xdisp.c (display_line): Reset continuation_lines_width when ZV
	reached.

	* xterm.c (x_after_update_window_line): Draw continuation line
	bitmap.

	* dispnew.c (update_window_line): Call
	after_update_window_line_hook when row's continuation_line_p
	changes.

	* xterm.c (draw_bitmap): Draw new bitmap CONTINUATION_LINE_BITMAP.

	* xdisp.c (display_line): Handle continued lines on window system
	frames differently since continuation glyphs are not displayed.
	(move_iterator_in_display_line_to): Ditto.
	(move_iterator_in_display_line_to): Take the mini-buffer prompt
	into account.
	(move_iterator_vertically_backward): Handle dy == 0 specially.
	(redisplay_window): Catch the case of small windows when
	recentering where moving back window_height/2 moves us beyond the
	top of the display area of the window.

1997-12-18  Gerd Moellmann  <gerd@acm.org>

	* xdisp.c (move_iterator_vertically_backward): Unused parameter
	dvpos removed.

1997-12-17  Gerd Moellmann  <gerd@acm.org>

	* dispnew.c (direct_output_forward_char): Correct new cursor
	x-position.

1997-12-16  Gerd Moellmann  <gerd@acm.org>

	* xterm.c (x_after_update_window_line): Remove unused parameters.
	(XTclear_end_of_line): Clear to display_height instead of
	display_height - 1.

	* dispnew.c (set_frame_matrix_frame): Make it INLINE.
	(update_window_line): Call after_update_window_line_hook if
	rows have different y-positions, or different height.

1997-12-14  Gerd Moellmann  <gerd@acm.org>

	* frame.h (FRAME_MODE_LINE_PIXEL_HEIGHT): Removed.

	* window.c (coordinates_in_window): Call frame_mode_line_height.

	* xterm.c (x_draw_3d_border): Removed.
	(x_draw_row_borders): Removed.

	* dispnew.c (update_window): References to
	FRAME_MODE_LINE_BORDER_WIDTH removed.

	* xterm.h (FRAME_MODE_LINE_BORDER_WIDTH): Removed.
	(FRAME_MODE_LINE_HEIGHT): Removed.

	* xterm.c (draw_3d_borders_p): Removed.
	(draw_glyphs): Ditto.
	(XTwrite_glyphs): Ditto.
	(expose_line): Ditto.
	(x_initialize): Ditto.

	* dispextern.h (WINDOW_DISPLAY_MODE_LINE_HEIGHT): Call
	frame_mode_line_height.

	* term.c (frame_mode_line_height): Get the pixel height of a
	frame's mode line.
	(frame_mode_line_height_hook): Hook to implement system dependent
	versions.

	* xterm.c (x_initialize): Set the hook.
	(XTframe_mode_line_height): X version of frame_mode_line_height.

	* xdisp.c (echo_area_display): Call gobble_input to flush the X
	output buffer.
	(display_string): Don't add right truncation mark if line ends in
	padding space.
	(init_display_iterator): If called with modeline_p non-zero, set
	face_id to 1, which is the id of the mode line face.

	* keyboard.c (cmd_error_internal): Write to stderr if selected
	frame is Vterminal_frame under X.  This is the case when a font
	cannot be loaded when Emacs starts.  Replace test for
	FRAME_MESSAGE_BUF with test for glyphs_initialized_p.

	* xfaces.c (compute_overlay_string_char_face): Compute the
	face of a character in an overlay string.
	* xterm.h (compute_overlay_string_char_face): Prototype.
	* xdisp.c (compute_face_at_iterator_overlay_string_position):
	Use it.

	* xdisp.c (set_iterator_to_next_overlay_string): Formerly
	set_iterator_to_next_overlay.
	(struct overlay_entry): Structure used to sort overlay strings.
	(compare_overlay_entries): Compare overlay strings.
	(load_iterator_with_overlay_strings): Load a chunk of overlay
	strings.
	(get_overlay_strings_at_iterator_position): Call it.
	(next_element_from_overlay_string): Set it->object to the overlay
	string.  Prepare for setting it->position to a string position.
	(get_overlay_strings_at_iterator_position): Renamed from
	get_overlays_at_iterator_position.
	(setup_iterator_overlay_strings_from_glyph_pos): Changed to load
	chunks of overlay strings.
	(load_overlay_strings): Renamed from load_iterator_overlay_strings.

	* dispextern.h (struct display_iterator): New vector
	overlay_strings and new member n_overlay_strings---formerly
	overlays and n_overlays.
	(struct glyph_pos): Remove after_string_p; overlay_index
	renamed to string_index.

1997-12-13  Gerd Moellmann  <gerd@acm.org>

	* xdisp.c (copy_iterator): Increment n_iterator_overlay_vectors
	when allocating a vector.
	(release_iterator): Removed.
	(restore_iterator): Removed.
	(copy_iterator): Removed.

1997-12-08  Gerd Moellmann  <gerd@acm.org>

	* xdisp.c (redisplay_window): Use make_empty_enabled_row for
	clearing a mini-buffer window that is not active.
	(redisplay_window): Do not scroll one line too early when last
	window line is completely visible.
	(init_display_iterator): Leave some room to display the cursor
	after the last glyph on a continued line.

	* xterm.h (struct x_output): trunc_area_extra renamed
	flags_areas_extra.
	(FRAME_X_FLAGS_AREA_WIDTH): Renamed from FRAME_X_TRUNC_WIDTH.

	* dispnew.c (update_window_line): Call
	after_update_window_line_hook when current row is not enabled
	which is the case after a frame has been cleared.

	* xdisp.c (display_mode_line): Reset row flags for truncation
	on right side for the mode line.

	* xterm.c (bitmap_type): Type of bitmap to display in flags
	area of frame.
	(x_after_update_window_line): Use the enum.
	(draw_bitmap): Ditto.

1997-12-07  Gerd Moellmann  <gerd@acm.org>

	* xterm.c (x_clip_to_row): Include width of both flag areas.
	(do_line_dance): Ditto.
	(expose_window_tree): Ditto.
	* dispnew.c (update_window_line): Call
	after_update_window_line_hook for right truncation and continuation.
	* xdisp.c (init_display_iterator): Don't subtract width of
	continuation glyphs for window-based redisplay.
	* xterm.c (draw_bitmap): Draw continuation bitmap.
	* widget.c (set_frame_size): Double trunc_area_extra.
	(EmacsFrameSetCharSize): Ditto.
	* xfns.c (x_figure_window_size): Ditto.
	* xterm.c (x_set_window_size): Ditto.
	(x_after_update_window_line): Draw right truncation mark.

	* xterm.c (draw_glyphs): Bug fix buffer overrun.

	* window.h: Include blocker around dispextern.h removed.

	* eval.c (Feval): Check interrupt_input_block == 0.

	* dispextern.h (struct display_iterator): Former ovstr made a
	Lisp_Object overlay_string.  New next_ovstr_face_check_pos and
	next_ovstr_invisble_check_pos; check at these positions for
	face changes and changes in invisible text property.
	(struct glyph_pos): Former ovlen now overlay_string_index.

	* xdisp.c (setup_iterator_overlays_from_glyph_pos): Set
	overlay_string.
	(set_iterator_to_next_overlay_string): Set overlay_string and
	pos.overlay_string_index.
	(get_overlays_at_iterator_position): Use overlay_string and
	overlay_string_index.
	(next_element_from_overlay_string): Use overlay_string and
	overlay_string_index.
	(move_iterator_forward): Increment overlay_string_index.
	(try_window_id): Use overlay_string and overlay_string_index.
	(move_iterator_forward): At end of dpvec, maybe use method
	next_element_from_overlay_string for the case a character from an
	overlay string was translated via a display table.
	(reseat_iterator_to_string): Take a Lisp string.
	(display_string): Pass a Lisp string to reseat_iterator_to_string.
	(compute_face_at_iterator_overlay_string_position): Compute face
	based on text properties for an overlay string.
	(next_element_from_overlay_string): Check invisible and face text
	properties.

	(set_iterator_to_next_overlay_string): Restore face id before
	overlay strings when no more overlay strings are found to return.
	Initialize next_ovstr_.*check_pos for each new overlay string

	A line in the following paragraph was garbled for an unknown
	reason.  It couldn't be fully reconstructed.

	(compute_base_face): Made public.
	(merge_face_list): Ditto.
	(intern_computed_face): Ditto.

	* xdisp.c (redisplay_window): Cursor movement in unchanged
	window if PT > w->last_point.  Goto try_to_scroll if bottom Y
	of row is > instead of >= last_y.

	* buffer.h (overlays_at): Function prototype.

	* xdisp.c (reseat_iterator_to_string): Clear iterator position.
	* dispextern.h (GET_NEXT_DISPLAY_ELEMENT): Removed.

	* xdisp.c (release_iterator): Release dynamically allocated
	memory of a display_iterator.
	(copy_iterator): Copy an iterator.
	(restore_iterator): Restore an iterator from a backup copy.
	(global): Use the functions above.
	* window.c (Fpos_visible_in_window_p): Call release_iterator.
	* dispnew.c (direct_output_for_insert): Call release_iterator.

	* dispextern.h (struct display_iterator): Allocate overlays
	vector dynamically.

1997-12-06  Gerd Moellmann  <gerd@acm.org>

	* Makefile.in (window.o): Depends on dispextern.h.

	* buffer.c (overlays_at): Make it work when extending vectors
	and an initial vector of zero size.

	* xdisp.c (set_iterator_to_previous_visible_line_end): Renamed
	from set_cursor_to_previous_visible_line_end.
	(set_iterator_to_next_visible_line_start): Renamed from
	set_cursor_to_next_visible_line_end.
	(set_next_iterator_stop_pos): Renamed from set_next_stop_pos.
	(compute_face_at_iterator_position): Renamed from
	compute_cursor_face.
	(set_iterator_to_next_overlay_string): Renamed from
	cursor_to_next_overlay_string.
	(get_overlays_at_iterator_position): Renamed from
	get_overlays_for_cursor.
	(reseat_iterator): Renamed from reseat_cursor.
	(setup_iterator_overlays_from_glyph_pos): Renamed from
	setup_overlays_from_pos.
	(init_string_iterator): Renamed from init_string_cursor.
	(get_next_display_element): Renamed from next_display_element.
	(move_iterator_forward): Renamed from advance_display_cursor.
	(get_overlays_at_iterator_position): Allocate overlays vector
	dynamically.

	* xdisp.c: display_cursor renamed display_iterator.
	* dispextern.h: Ditto.
	* dispnew.c: Ditto.

1997-12-01  Gerd Moellmann  <gerd@acm.org>

	* window.c (mark_window_cursors_off): Function comment added.
	(window_topmost_p, window_rightmost_p): Removed because not used.

1997-11-30  Gerd Moellmann  <gerd@acm.org>

	* emacs.c (main): Function prototypes removed in profiling code.
	Use safe_bcopy as start of text.

	* dispnew.c (update_frame_line): update_line -> update_frame_line;
	mirrored_make_current -> make_current.

	* xdisp.c (store_frame_title_char): New function to store a
	single character for the frame title with re-allocation of
	frame_title_buf.
	(init_xdisp): Initialize frame_title_.* variables to null.

	* dispnew.c (quit_error_check): Removed.

	* eval.c (Fsignal): Call to quit_error_check removed.
	* keyboard.c (quit_throw_to_read_char): Ditto.

1997-11-23  Gerd Moellmann  <gerd@acm.org>

	* xfaces.c (Fset_face_attribute_internal): Allow nil relief
	to mean a zero relief.

1997-11-19  Gerd Moellmann  <gerd@acm.org>

	* dispnew.c (new_glyph_matrix): Increment glyph_matrix_count
	unconditionally.
	(glyph_matrix_count, glyph_pool_count): Define unconditionally.
	(free_glyph_matrix): Decrement glyph_matrix_count unconditionally.
	(check_glyph_memory): Define function body unconditionally.

1997-11-17  Gerd Moellmann  <gerd@acm.org>

	* dispnew.c (scrolling_window): Alternative version of this
	function removed.

1997-11-16  Gerd Moellmann  <gerd@acm.org>

	* dispnew.c (make_empty_enabled_row): Make an empty, enabled row
	of height CANON_Y_UNIT.
	* dispextern.h: Prototype for that function.
	* xdisp.c (echo_area_display): Don't use display_string to
	produce empty rows.  Use make_empty_enabled_row instead.

	* dispnew.c (scrolling_window): New version using diff-like
	algorithm activated.

1997-11-15  Gerd Moellmann  <gerd@acm.org>

	* dispnew.c (clear_current_matrices): Clear matrix of menu_bar_window.
	(clear_desired_matrices): Ditto.
	(adjust_frame_glyphs_for_window_redisplay): Use FRAME_WINDOW_WIDTH
	for menu_bar_window.

	* alloc.c (mark_object): Mark menu_bar_window of frames.

	* xterm.c (XTupdate_window_end): Don't display cursor if
	pseudo_window_p.

	* dispnew.c (adjust_frame_glyphs_for_window_redisplay): Don't
	set mini_p.
	(update_window): Don't set cursor if pseudo_window_p.

	* dispextern.h (WINDOW_WANTS_MODELINE_P): Test pseudo_window_p.

	* window.h (struct window): New flag pseudo_window_p set to
	1 for windows that aren't really part of the window tree, like
	menu_bar_window's of frames.
	* window.c (make_window): Initialize it.
	(replace_window): Ditto.
	* dispnew.c (adjust_frame_glyphs_for_window_redisplay): Ditto.

	* frame.c (make_frame): Initialize menu_bar_window to nil.

	* xterm.c (XTget_display_info): FACE_SHADOW_THICKNESS renamed
	FACE_RELIEF

	* xfaces.c (copy_face): shadow_thickness -> relief.
	(face_eql): Ditto.
	(merge_faces): Ditto.
	(compute_base_face): Ditto.
	(Fset_face_attribute_internal): Ditto.
	* dispextern.h (struct face): Ditto.

	* dispnew.c (update_frame): Update menu_bar_window of the frame if
	it is non-nil.

	* xdisp.c (display_menu_bar): Display the menu bar in
	f->menu_bar_window if appropriate.
	(display_mode_line): Use MATRIX_MODE_LINE_ROW.

	* dispnew.c (adjust_frame_glyphs_for_window_redisplay): Allocate
	dummy window and window matrices for f->menu_bar_window.
	(free_glyphs): Free the dummy window and its glyph matrices.

	* frame.h (struct frame): New member menu_bar_window.

1997-11-09  Gerd Moellmann  <gerd@acm.org>

	* dispnew.c (scrolling_window): New version with diff-like
	algorithm.

	* xdisp.c (try_window_reusing_current_matrix): If new_start >
	old_start always start displaying at start of
	first_row_to_display.  The previous scheme failed if the last row
	was fully visible.

	* dispnew.c (update_window): Remove cost calculations.  Remove
	redundant preempt_count calculations.

	* xterm.c (x_clip_to_row): Set clipping for non-text rows
	differently.

	* dispnew.c (update_window): Use WINDOW_WANTS_MODELINE_P.

	* window.c (syms_of_window): Functions for marginal areas if
	WITH_MARGINAL_AREAS is defined.

	* xdisp.c (try_window_reusing_current_matrix): Trace fprintf
	removed.

	* dispnew.c (scrolling): Call line_hash_code because hash values
	are not set in the frame matrix.

	* xdisp.c (try_window_id): Fix scrolling for terminal frames.
	(redisplay_window): Check line_ins_del_ok before calling
	try_window_id.
	(try_window_reusing_current_matrix): Give up for terminal frames
	if window is not full width or we cannot insert/delete lines.
	(try_window_reusing_current_matrix): Fixed scrolling for terminal
	frames.

	* alloc.c (mark_glyph_matrix): Bug fix - pass pointer to
	Lisp_Object to mark_object.

	* xdisp.c (sync_frame_with_window_matrix_rows): Make frame and
	window rows have the same glyph pointers.
	(try_window_id): Call it.

	* alloc.c (mark_glyph_matrix): Function to mark Lisp objects in
	a glyph matrix.
	(mark_object): Call it.

	* xdisp.c (insert_left_trunc_glyphs): Use 0 object in glyphs for
	truncations.
	(display_line): Ditto.
	(display_line): Ditto for DISP_CONTINUATION.
	(display_line): Truncation on right: test current_x >
	last_visible_x.
	(skip_in_display_line_to): Ditto.
	(skip_via_matrix): Stop skipping in glyph row at face extending
	glyphs or at padding spaces.

	* dispnew.c (fill_up_glyph_row_with_spaces): Comment extended.

	* xdisp.c (display_line): Use glyph->object == 0 for padding
	glyphs.
	(redisplay_window): Don't let cursor move over padding
	spaces.

	* dispextern.h (struct glyph): Fix comment for object.

1997-11-08  Gerd Moellmann  <gerd@acm.org>

	* dispextern.h (WINDOW_WANTS_MODELINE_P): Non-zero if a window
	has a mode line.
	* xdisp.c (redisplay_window): Use it.
	(display_mode_line): Check that window wants mode line.

1997-11-03  Gerd Moellmann  <gerd@acm.org>

	* xdisp.c (display_menu_bar): Enable menu bar rows.

	* xterm.c (x_draw_hollow_cursor): X positions based on text area.
	(x_erase_phys_cursor): Ditto.
	(x_draw_bar_cursor): Ditto.

1997-11-02  Gerd Moellmann  <gerd@acm.org>

	* dispnew.c (update_marginal_area): Update a marginal area.
	(update_text_area): Update text area.
	(update_window_line): Call both.

	* xterm.c (XTclear_end_of_line): Translate coordinates area
	dependent.

	* dispnew.c (updated_area): Row area being updated in
	update_window_line.
	(update_window_line): Set it.
	(update_marginal_area): Clear to end of line if not in text area.

	* window.c (Fset_window_margins): Increment
	windows_or_buffer_changed.  Adjust glyphs.

	* dispextern.h (WINDOW_TEXT_TO_FRAME_PIXEL_X): Convert text
	area X coordinates to frame coordinates.
	(WINDOW_DISPLAY_LEFT_AREA_PIXEL_WIDTH): Width of left marginal area.
	(WINDOW_DISPLAY_RIGHT_AREA_PIXEL_WIDTH): Same for right area.
	(WINDOW_DISPLAY_TEXT_AREA_PIXEL_WIDTH): Same for text area.

	* xterm.c (draw_glyphs): Use text area width as display width.

	* xdisp.c (init_display_info): Subtract widths of marginal areas
	from last_visible_x.

	* alloc.c (mark_object): Mark objects in glyphs only if they are
	overlays.  Mark only if current_matrix != 0.  Activate the code.

	* window.c (Fset_window_margins): Set margins.
	(Fwindow_margins): Return margin area widths.
	(syms_of_window): Add defsubr's.

	* window.h (struct window): left_margin_width, right_margin_width.

	* xfns.c (x_set_trunc_area_width): Set truncation pixel width
	and cols.

	* frame.h (FRAME_TRUNC_COLS): Number of columns occupied by
	truncation/overlay arrow area.
	(struct frame): trunc_area_pixel_width, and _cols.

	* window.c (Fsplit_window): Use it.

	* window.c (Fsplit_window): Set cursor vpos to -1 after
	splitting.
	(Fsplit_window): SUbtract/add FRAME_TRUNC_WIDTH for horizontally
	split windows.

	* dispnew.c (set_window_cursor_after_update): Accept out
	of bounds cursor positions.

	* xdisp.c (redisplay_internal): Check that after cursor motion
	within line, PT is on same line.

	* dispextern.h (WINDOW_DISPLAY_PIXEL_WIDTH): Don't subtract
	FRAME_TRUNC_WIDTH.

	* xterm.h (struct x_output): trunc_area_extra.
	(CHAR_TO_PIXEL_WIDTH): Add in trunc_area_extra.
	(PIXEL_TO_CHAR_WIDTH): Subtract it.
	* widget.c (set_frame_size): Set it.
	(EmacsFrameSetCharSize): Ditto.
	* xfns.c (x_figure_window_size): Ditto.
	* xterm.c (x_set_window_size): Ditto.

	* dispnew.c (check_matrix_invariants): First try to check window
	ends (in #if 0).

	* xdisp.c (try_window_reusing_current_matrix): Try window
	redisplay with different window start.

1997-11-01  Gerd Moellmann  <gerd@acm.org>

	* window.c (make_window): Set window_end_pos/vpos.
	(Fsplit_window): Zero last_cursor, window_end_valid.
	(Fset_window_buffer): Set window_end_vpos, zero last_cursor.

	* dispnew.c (check_matrix_invariants): Check window_end_pos/vpos.

1997-10-31  Gerd Moellmann  <gerd@acm.org>

	* window.c (make_window): Initialize last_cursor.
	(replace_window): Ditto.

1997-10-29  Gerd Moellmann  <gerd@acm.org>

	* window.h: New member last_cursor.
	* dispnew.c (direct_output_for_insert): Set it.
	(direct_output_forward_char): Ditto.
	* xdisp.c (redisplay_internal): Ditto.

1997-10-28  Gerd Moellmann  <gerd@acm.org>

	* xdisp.c (redisplay_internal): Optimization 1 change partially
	reverted.  Check this again later.
	(skip_via_matrix): Remove redundant test for
	MATRIX_ROW_DISPLAYS_TEXT_P.

1997-10-27  Gerd Moellmann  <gerd@acm.org>

	* dispnew.c (update_window_line): Call
	after_update_window_line_hook only for interesting constellations.
	(free_glyph_matrix): Fix memory leak.

	* window.h: Include blocker WINDOW_H_INCLUDED, include
	dispextern.h.
	(struct window): phys_cursor_glyph as struct glyph.
	* window.c (make_window): Initialize it.
	(replace_window): Ditto.
	* dispnew.c (free_window_matrices): Remove freeing of
	phys_cursor_glyph.
	(check_matrix_invariants): Renamed from check_current_matrix_...
	* xterm.c: All references to phys_cursor_glyph changed.

	* dispextern.h (DISPEXTERN_H_INCLUDED): New include blocker.

	* xfaces.c: Comment update.

	* window.h (struct window): Make phys_cursor_glyph a struct glyph
	pointer.  Remove phys_cursor_ascent, descent, etc.
	* dispnew.c (free_window_matrices): Free it.
	* window.c (make_window): Allocate it.
	(replace_window): Ditto.
	* xterm.c (x_draw_phys_cursor_glyph): Draw it.
	(x_display_and_set_cursor): Fill it.
	(x_phys_cursor_in_rect_p): Use it.
	(x_draw_hollow_cursor): Ditto.
	(x_draw_bar_cursor): Ditto.
	(x_erase_phys_cursor): Ditto.

	* xdisp.c (skip_in_display_line_to): Use SET_INFO_FROM_CURSOR.

	* xterm.c (XTget_display_info): Handle 3D faces.
	(draw_glyphs): Ditto.

	* xdisp.c (Fdump_redisplay_state): Change interactive spec to "p".

	* xfaces.c (Fset_face_attribute_internal): New face attribute
	shadow-thickness.
	(copy_face): Handle shadow_thickness.
	(face_eql): Ditto.
	(merge_faces): Ditto.
	(compute_base_face): Ditto.

	* dispextern.h (struct display_cursor): New member start_of_3d_run_p.
	(struct display_info): Ditto.
	(SET_INFO_FROM_CURSOR): Transfer it to display_info.
	* xdisp.c (compute_cursor_face): Set it.
	(advance_display_cursor): Clear it.

	* xdisp.c (init_string_cursor): Initialize face_id to -1.
	(init_string_cursor): Init face_id to zero.

	* dispextern.h (struct face): New member shadow_thickness.

	* xdisp.c (compute_cursor_face): Set limit for text property
	search to 100.

	* dispnew.c (update_window_line): Try to resynch with current line
	to prevent mode line flickering.

1997-10-26  Gerd Moellmann  <gerd@acm.org>

	* dispnew.c (set_window_cursor_after_update): React again
	on cursor_in_echo_area >= 0.

	* xdisp.c (echo_area_display): Clear desired matrix before
	displaying into it.
	(display_menu_bar): Clear glyph row instead of hoping it is not
	enabled.  This is safer.

	* dispnew.c (check_current_matrix_invariants): Check only
	visible rows.

	* xdisp.c (try_window_id): Handle window end setting in case of
	display to end of window, but only non-text lines displayed.

	* dispnew.c (check_current_matrix_invariants): Check nrows for zero.
	(check_current_matrix_invariants): Check used counts.

	* Revision v114.

	* dispnew.c (scrolling): Use hash codes from rows.

	* xdisp.c (Fdump_redisplay_state): Dump current matrix.

	* dispnew.c (scrolling_window): Invalidate conflicting runs.

1997-10-25  Gerd Moellmann  <gerd@acm.org>

	* dispextern.h (struct glyph_matrix): Flag no_scrolling_p.
	* dispnew.c (update_window): Use it.
	(clear_glyph_matrix): Clear it.
	* xdisp.c (try_window_id): Set it.

	* dispextern.h (struct glyph_row): New flag ends_at_zv_p.

	* xdisp.c (redisplay_internal): Increment glyph positions differently.

	* dispextern.h: More comments etc.

1997-10-24  Gerd Moellmann  <gerd@acm.org>

	* dispnew.c (set_window_cursor_after_update): Set cursor
	for cursor_in_echo_area == 0 to (0, 0).

	* dispextern.h (struct glyph_row): New flags continuation_line_p
	and displays_text_p.
	(MATRIX_ROW_DISPLAYS_TEXT_P): Use displays_text_p.
	* xdisp.c (display_line): Set them.
	(try_window_id): Move to start of continuation line to find out
	continuation_line_width.
	(first_unchanged_current_row): Don't retract row if continued,
	truncated etc.

	* xterm.c: Map X coordinates.

1997-10-23  Gerd Moellmann  <gerd@acm.org>

	* dispnew.c (buffer_posn_from_coords): Translate X for right to
	left text.

	* xdisp.c (display_line): Set right_to_left_p after clearing the row.

	* xterm.c (XTclear_end_of_line): Respect right_to_left_p.

	* xdisp.c (try_window_id): Clear desired matrix if not successful.

	* xdisp.c (try_window_id): Call update_window_begin_hook/end_hook.

	* dispnew.c (update_window_begin_hook, update_winodw_end_hook):
	Set this to functions to be called before/after window updates.
	(direct_output_for_insert): Call them.
	(update_window): Ditto.
	(update_frame): Call update_begin/ update_end for windows.

	* xterm.c (XTupdate_window_begin): Called before window updates.
	(XTupdate_end): Called after window updates.
	(x_initialize): Set hooks to above.

	* xdisp.c (init_display_info): Initialize c and len of
	display_info.

	* xterm.c (x_get_char_font_and_encoding): Bug fix.  Don't load
	fonts more than once.

1997-10-22  Gerd Moellmann  <gerd@acm.org>

	* xdisp.c (display_line): Handle most common case of current_x <
	last_visible_x separately.

	* dispextern.h (display_element_type): DISP_ELLIPSIS removed.

	* dispnew.c (update_window_line): Compare pixel widths of glyphs
	so that face extending space doesn't compare equal to normal space
	with same face.

	* xdisp.c (display_line): Make sure we have a position for
	a line end in an otherwise blank line if face is extended.

	* dispnew.c (direct_output_for_insert): Increment row end position.

	* window.c (Fpos_visible_in_window_p): Use old meaning of
	window_end_pos.

	* xdisp.c (init_display_cursor_from_glyph_pos): New.

	* dispextern.h (MATRIX_ROW_FIRST_POS): Use row start.

	* dispnew.c (increment_glyph_row_buffer_positions): Adjust
	start and end positions in rows.
	(increment_glyph_row_buffer_positions): Stop adjusting at
	glyphs with positions <= 0.

	* dispextern.h (struct glyph_pos): Structure describing a text
	position including position in overlay.
	(struct glyph_row): Use it for start and end positions.
	(struct display_cursor): Use it.
	* xdisp.c: Use it.
	(display_line): Set row start and end positions.

	* dispnew.c (copy_row_except_pointers): Use bcopy and struct
	assignment.

1997-10-21  Gerd Moellmann  <gerd@acm.org>

	* dispnew.c (update_window): Add scrolling_window again.  It's
	necessary for scroll_step != 0.

	* xdisp.c (redisplay_window): Use vmotion for scroll_step
	scrolling.

	* xdisp.c (last_unchanged_current_row): Use window_end_vpos.

	* xterm.c (XTupdate_end): Flush only for messages.

	* xdisp.c (try_window_id): Assert last_unchanged_row >=
	first_unchanged_row.

	* xterm.c (XTupdate_end): Flush if miniwindow.

	* dispnew.c (matrix_row_last_pos): New function.
	* dispextern.h (MATRIX_ROW_LAST_POS): Call it.
	Large comment moved to xdisp.c.

	* xdisp.c (redisplay_window): Bug fix: PT set to value > Z.
	(skip_via_matrix): Check window_end_valid instead of
	display_completed.

	* dispnew.c (scroll_glyph_matrix_range): Bug fix.
	(update_window): scrolling_window commented out.  It has negative
	effect most of the time.

	* xdisp.c (try_window_id): Correct parameters to
	scroll_glyph_matrix_range.

	* xterm.c (XTupdate_end): XFlush commented out.

	* window.h: Comments for window_end_pos/vpos.

	* xdisp.c (skip_to): Assert current_buffer is the buffer
	of the window in which we are skipping.

	* dispnew.c (update_window_line): Optimized clear_end_of_line.

	* xterm.c (draw_glyphs): Bug fix.  Return window relative X
	reached.

1997-10-20  Gerd Moellmann  <gerd@acm.org>

	* dispextern.h (MATRIX_ROW_LAST_POS): Go back one glyph if this is
	a face extending glyph.

	* xdisp.c (try_window_id): Check if point will appear.
	(set_cursor_from_row): Set cursor position from a glyph row.

	* dispnew.c (update_window_line): Write entire line if hash
	codes of lines differ.

	* dispextern.h (MATRIX_ROW_EXTENDS_FACE_P): Value is non-zero
	if glyph row has an infinite width glyph at its end.

	* xdisp.c (last_unchanged_current_row): Respect partially visible
	lines when looking for the last row displaying text.
	(try_window_id): Handle partially visible lines better.

1997-10-19  Gerd Moellmann  <gerd@acm.org>

	* dispnew.c (update_window): Remove unused variable.
	(update_window_line): Simplified.

	* xterm.c (x_get_char_font_and_encoding): Handle most common
	case at the beginning.

	* xdisp.c (advance_display_cursor): Dispatch on method and
	order if statements by expected call frequency.  Fixed unclosed
	comment.

	* xdisp.c (try_window_id): New implementation.

	* dispnew.c (increment_glyph_row_buffer_positions): Capture
	rows displaying a line end, only.

1997-10-18  Gerd Moellmann  <gerd@acm.org>

	* window.c (Fpos_visible_in_window_p): Remove use of window_end_vpos.

1997-10-14  Gerd Moellmann  <gerd@acm.org>

	* xdisp.c (display_line): Mark empty lines not corresponding to
	text with position -1.

	* xterm.c (x_erase_phys_cursor): Don't bother to erase cursor if
	not within window matrix bounds.

	* dispextern.h (struct display_cursor): New member REGION_SHOWING_P.
	(struct display_info): NGLYPHS_TO_IGNORE removed.
	* xdisp.c: References to NGLYPHS_TO_IGNORE removed.
	* term.c: Ditto.
	* xterm.c: Ditto.

	* xdisp.c (init_display_cursor): Set it.
	(display_line): Use it to set W->REGION_SHOWING.

	* xdisp.c (skip_via_matrix): Check for overlay arrow.

	* region-cache.h: Function prototypes with PROTO.

	* dispnew.c (buffer_posn_from_coords): Use -1 as skip position.

	* xdisp.c (skip_via_matrix): Check for rows that don't contain
	a position.

	* xterm.c (XTmouse_position): Calculate LAST_MOUSE_GLYPH
	rectangle based on minimum character bounds.

	* keyboard.c (make_lispy_event): Mouse clicks; don't do frame
	glyph position calculations.
	(make_lispy_movement): Use buffer_posn_from_coords and window
	relative coordinates.

	* xterm.c (construct_mouse_click): Remove #if 0 case.

	* dispextern.h (MATRIX_ROW_BOTTOM_Y): Return bottom pixel y of
	given row.

	* xdisp.c (skip_via_matrix): Skip using current matrix if up to
	date.
	(skip_to): Use it.
	(redisplay_window): Remove code skipping using current matrix.

1997-10-13  Gerd Moellmann  <gerd@acm.org>

	* xdisp.c (redisplay_window): Use available current matrix to
	skip faster when only point is moved withing the window.

	* intervals.c: Include stdio.h.
	(find_interval): Trace to stderr to catch some nasty error
	that did not yet occur again with tracing.
	(set_point): Ditto.

	* dispnew.c (shift_glyph_matrix): Experimental code for handling
	cursor positioning on partially visible lines.
	(set_window_cursor_after_update): Ditto.

	* dispextern.h (MATRIX_ROW_PARTIALLY_VISIBLE_P): Bug fix.

	* window.h (struct window): start_y removed.

	* window.c (make_window): start_y removed.
	(replace_window): Ditto.

	* xdisp.c (last_max_ascent, last_max_descent): Ascent and
	descent values of the last line processed by skip_to.
	(redisplay_window): Use them.
	(skip_to): Set them.

	* dispextern.h (struct display_cursor): New member METHOD.

	* xdisp.c: Use function member METHOD.

	* xdisp.c (set_next_stop_pos): Determine next position at which to
	check for face properties, invisible text properties, and overlays.
	(compute_cursor_face): Use it.
	(get_overlays_for_cursor): Ditto.
	(reseat_cursor): Ditto.
	(next_display_element): Ditto.

1997-08-24  Gerd Moellmann  <gerd@acm.org>

	* termhooks.h: Some hooks with prototypes.

	* term.c: Some hooks with function prototypes.

	* xdisp.c (reseat_cursor): Additional argument force_p.  Avoid
	computing face if possible.

	* xdisp.c (next_display_element): Use face from glyph from display
	table only if != 0.

	* emacs.c: FreeBSD headers for profiling removed.

	* dispnew.c (direct_output_for_insert): Don't use PT-1 for
	display cursor, use DEC_POS instread.

	* xfaces.c (load_font): Use x_load_font to load fonts so that
	all fonts are in the font table.
	(unload_font): Don't XFreeFont.

	* dispnew.c (row_equal_p): Compare ascent, descent and visible
	row height.

	* xterm.c (draw_glyphs): Use 8-bit functions if possible.
	(x_erase_phys_cursor): Clear only visible part of row.
	(x_draw_bar_cursor): Set clipping.
	(x_draw_hollow_cursor): Ditto.
	(x_display_and_set_cursor): Remove clipping.
	(expose_window_tree): Take trunc border into account.
	(x_phys_cursor_in_rect_p): Test if phys_cursor intersects a rect.
	(expose_window): Use it.

	* xdisp.c (display_string): Catch case that we are called with
	current_x already beyond max_x.
	(global): Fix usage of FRAME_WINDOW_P <-> FRAME_WINDOW_REDISPLAY_P.
	(init_display_info): Subtract vertical border glyph from
	last_visible_x.

	* scroll.c (scrolling_window_1): Removed.

	* dispnew.c (adjust_frame_glyphs): Split into two functions,
	based on redisplay method used.
	(adjust_frame_glyphs_for_frame_redisplay): Part for frame
	based redisplay.
	(adjust_frame_glyphs_for_window_redisplay): Part for purely
	window based redisplay.

	* frame.h (FRAME_WINDOW_REDISPLAY_P): Changed to not depend
	on data structures.

	* dispnew.c (adjust_glyph_matrix): Additional parameter W.
	Handle own storage for purely window based redisplay.
	(allocate_matrices_for_frame_redisplay): Formerly part of
	allocate_matrices.
	(allocate_matrices_for_window_redisplay): Ditto.

	* dispextern.h (struct glyph_matrix): window_top_y,
	window_height.

	* dispnew.c (allocate_matrices_for_window_redisplay): Detect
	and optimize some common cases of window changes.

	* emacs.c (main): Remove own profiling code because 0.95 now
	has it in.

1997-08-22  Gerd Moellmann  <gerd@acm.org>

	* xterm.c (XTupdate_end): Draw horizontal border at right position.
	(expose_window): Draw vertical border.
	(XTclear_end_of_line): Accept width <= 0 and height <= 0 but
	don't do anything.

	* xdisp.c (redisplay_internal): Set update_mode_line if paused
	for non full width windows only if not window redisplay.

	* dispnew.c (update_window_tree): Or paused_p return of called
	functions.

	* xterm.c (x_display_and_set_cursor): Return if hpos/vpos outside
	of window.

	* window.c (Fset_window_configuration): adjust_glyphs being
	called twice.
	(Fset_window_configuration): Set frame garbaged if not all
	leaf windows reused.

1997-08-21  Gerd Moellmann  <gerd@acm.org>

	* dispnew.c (clear_glyph_matrix): Additional argument specifying
	that rows should really be cleared.  Used for current matrices.

	* dispnew.c (scrolling_window): Bug fix.
	(line_dance_hook): Formerly line_dance_fn, take only one parameter.

	* dispextern.h (struct run): Remove current_vpos.

	* xterm.c (do_line_dance): Only one parameter.

	* xdisp.c (display_line): Set continued_p.

	* dispextern.h (struct glyph_row): New flag continued_p.
	Fix truncated_on_left_p and truncated_on_right_p to be bits.
	(struct glyph_row):

1997-08-21  Gerd Moellmann  <gerd@acm.org>

	* xdisp.c (skip_vertically_backward): Avoid negative vpos values
	when calling skip_to for continued lines.

	* dispnew.c (change_frame_size_1): Set frame garbaged.

	* xterm.c (expose_window): Check enabled_p of rows.

	* xdisp.c (redisplay_internal): Compare line heights before and
	now for redisplay optimization 2 (hit).
	(display_line): Set this_line_pixel_height.

	* xterm.c (x_draw_row_borders): Use FRAME_MODE_LINE_HEIGHT height
	value.
	(x_clip_to_row): Use MATRIX_ROW_VISIBLE_HEIGHT.  Simplified.
	(do_line_dance): Simplified and pixel corrected.

	* dispnew.c (scrolling_window): Simplified.

	* xterm.c (x_draw_3d_border): Insert rectangle by line width.

	* dispnew.c (update_window): Add FRAME_MODE_LINE_BORDER_WIDTH
	to mode line row->x.

1997-08-20  Gerd Moellmann  <gerd@acm.org>

	* xterm.c (x_get_char_font_and_encoding): Don't let fontset
	override font of face.
	(draw_glyphs): Correct return value.
	(XTclear_end_of_line): Compare differently with output cursor
	position.
	(x_draw_hollow_cursor): 2 parameters, window and row.

	* dispnew.c (update_window_line): If rows have different height
	or y, write entire line.

	* xdisp.c (compute_line_metrics): Reset max_ascent and max_descent
	of info struct.

	* xfaces.c (Fset_face_attribute_internal): Don't call
	frame_update_line_height.
	(merge_faces): Don't use default font if new font has different
	size.

1997-08-19  Gerd Moellmann  <gerd@acm.org>

	* xterm.c (x_display_and_set_cursor): Use FONT_WIDTH if width
	unknown.  Some fonts have min_width zero.
	(draw_glyphs): Don't draw underlines to the end of the display
	line if face is merely extended to that point.
	(draw_glyphs): Don't assume background is filled if
	just_foreground_p but extending to end of line.

	* xterm.c (XTclear_end_of_line): Clip only to display_height - 1
	for partially visible last lines.
	(x_clip_to_row): Ditto.
	(x_clip_to_row): Clip to display_height-1 if y + line_height >
	display_height since line_height is really a line distance.
	(x_display_and_set_cursor): If cursor on padding glyph, use
	min_bounds pixel width.

1997-08-18  Gerd Moellmann  <gerd@acm.org>

	* xterm.c (x_clip_to_row): Height value was 1 too large.
	(XTclear_end_of_line): Clip to display area.

	* xfns.c (x_figure_window_sizes): Add trunc border width
	to frame pixel width.

	* xdisp.c (next_display_element): Don't display overlay strings
	within invisible text.
	(skip_vertically_backward): Skip display lines.

1997-08-16  Gerd Moellmann  <gerd@acm.org>

	* xdisp.c (x_consider_frame_titie): Don't pad with blanks.

	* xdisp.c (next_display_element): Next invisible
	text check position computed differently.

	* dispextern.h (struct display_cursor): last_invisible_text_pos
	and display_ellipsis_for_invisible_p removed.

	* xdisp.c (next_display_element): Set last_invisible_text_pos
	to the last position at which invisible text was found.
	Don't decrement cursor.pos for newlines and cr with ellipsis.
	Set dpvec for `...' due to invisible text directly.
	(redisplay_internal): Don't assert that cursor is at PT after
	skip_to.  It may be in invisible text.

	* keyboard.c (make_lispy_event): For mouse clicks, use
	x_y_to_hpos_vpos.

	* xdisp.c (next_display_element): Call get_overlays_for_cursor when
	next_overlay_pos is reached.  Use limit cursor.pos + 100 when
	checking for invisible text.

	* xterm.h (WINDOW_COL_PIXEL_X etc.) Removed.

	* dispextern.h (WINDOW_TO_FRAME_HPOS/VPOS): Moved to dispnew.c.

	* xfns.c (x_contour_region): Use pixel coordinates from window
	cursor instead of WINDOW_TO_FRAME_H/VPOS.

	* dispextern.h (FRAME_TO_WINDOW_HPOS, FRAME_TO_WINDOW_VPOS):
	Removed.

	* dispnew.c (frame_to_window_hpos, frame_to_window_vpos): Removed.

	* xterm.c (x_y_to_hpos_vpos): Get hpos/vpos from window relative
	pixel coordinates.
	(note_mouse_highlight): Use it.

	* xdisp.c (echo_area_display): Ignore calls for terminal frames
	under a window system.

	* dispnew.c (adjust_frame_glyphs): Call redraw_frame if
	necessary.
	(update_window_line): Add width of face padding glyph to
	displayed widths of rows.

	* xterm.c (x_display_and_set_cursor): Set clipping after
	erasing cursor.

	* window.c (Fset_window_configuration): Free only those
	window matrices not reused.
	(get_leaf_windows): Build vector of leaf windows.
	Corrupted archive restored from v77.

	* xdisp.c (display_string): Stop at >= last_visible_x if truncating
	like display_line does.

	* xdisp.c (display_mode_line): Don't hscroll mode line.

	* xterm.c (draw_glyphs): Wrong run_width computed for horiz. split
	windows.
	(x_scroll_bar_create): #3039 Clear area below scroll bar to remove
	garbage between mode lines when splitting windows horiz.

	* dispnew.c (direct_output_for_insert): Bug fix.

	* dispextern.h (struct display_cursor): New member string_length.

	* xdisp.c (next_display_element): Return padding spaces.
	(init_string_cursor): Take precision and field_width.
	(display_string): Use string cursor, skip over invisible text.

1997-08-14  Gerd Moellmann  <gerd@acm.org>

	* xterm.c (x_clip_to_row): Clip to partially visible lines.
	(x_display_and_set_cursor): Call it.
	(draw_glyphs): Call it.
	(draw_bitmap): Call it.

	* dispnew.c (adjust_frame_glyphs): Optimize frame garbaging.
	(allocate_leaf_matrix): Return flags.
	(row_equal_p): Compare enabled_p.

	* xterm.c (x_erase_phys_cursor): Set phys_cursor_on_p to 0
	for type == -1.

	* xterm.c (x_display_and_set_cursor): Bar cursor 1 pixel taller.
	(draw_glyphs): Clip height one pixel taller.

	* dispnew.c (direct_output_for_insert): Give up for hscrolled
	mini window.

	* xdisp.c (display_line): Don't scroll mini prompt.

	* xdisp.c (echo_area_display): Call update_single_window if
	possible.

	* dispnew.c (update_window_line): Call scrolling_window.
	(scrolling_window): Work on enabled desired lines only.
	(update_single_window): Update a single window like update_frame
	does for all windows.
	(update_window, update_window_tree): Additional argument
	no_scrolling_p.
	(update_frame): Pass no_scrolling_p to update_window_tree.
	(update_window): Don't call scrolling_window if no_scrolling_p.

	* xterm.c (x_erase_phys_cursor): Do nothing if type == -1.
	Erase under hollow cursor.
	(x_display_and_set_cursor): Do nothing if cursor glyph row
	not enabled.  Draw bar cursor 1 pixel smaller.

	* dispnew.c (adjust_frame_glyphs): Don't set frame garbaged
	since update will follow soon.

	* xdisp.c (echo_area_display): Uninitialized variable.

	* xterm.c (draw_bitmap): Previously draw_truncation; draw
	overlay arrow bitmap.

	* xdisp.c (display_line): For truncated lines, consider everything
	up to the final \n as part of the line for cursor positioning.

	* xterm.c (draw_truncation): Take FRAME_X_TRUNC_WIDTH into account.
	(x_after_update_window_line): Clear trunc marks.

	* xterm.h (FRAME_X_TRUNC_WIDTH).

	* frame.h (FRAME_TRUNC_WIDTH): Width of area at the left margin
	of a window reserved for truncation mark.

	* dispextern.h: Take FRAME_TRUNC_WIDTH into account.

	* dispnew.c (update_window_line): Call after_update_window_line_hook.

	* xdisp.c (display_line): Set overlay_arrow_p in row.

	* dispextern.h (struct glyph_row): New flag overlay_arrow_p.

	* xterm.c (x_after_update_window_line): Draw truncation marks.

	* xdisp.c (display_line): Insert truncation for lines with
	current_x > 0.

	* xterm.c (x_draw_row_borders): Convert y to frame coords.
	Correct y by 1.
	(x_display_cursor): Use default font width if width not
	known.

	* xdisp.c (echo_area_display): Set row->y.

	* dispnew.c (set_window_cursor_after_update): Don't assume
	all rows are enabled.

	* xdisp.c (skip_in_display_line_to): Test cursor.position instead
	of cursor.pos.
	(skip_in_display_line_to): Check cursor.position after call to
	next_display_element.

	* dispextern.h (CURSOR_AT_P): Test if cursor has reached
	buffer position.

	* xdisp.c (display_line): Set row->y here.
	(skip_in_display_line_to): Test for to_pos after all glyphs
	have been added to hpos so that hpos is at the end of all
	glyphs for to_pos.
	(start_display): Remove assertion.

	* dispnew.c (direct_output_forward_char): Bug fix, = instead of ==.
	(update_window): Don't set row->y here.

	* xdisp.c (next_display_element): Don't translate control chars
	from display table entries.

	* dispnew.c (direct_output_for_insert): Set cursor before
	update end to prevent cursor flickering.  Revert changes to
	setting cursor.endpos.

1997-08-13  Gerd Moellmann  <gerd@acm.org>

	* dispnew.c (direct_output_for_insert): Don't set cursor.endpos
	to PT because this prevents multi-byte characters from being
	recognized.

	* xdisp.c (skip_to, display_line): Advance cursor at end of
	truncated line.

	* xterm.c (x_draw_3d_borders): Use CapRound.  Struct rect
	replaced by XRectangle.

	* dispnew.c (scrolling_window): New method.

	* xterm.c (do_line_dance): New implementation, new method.

	* xdisp.c (draw_glyphs): Draw truncation bitmaps.  Clip to
	visible part of line.

	* dispnew.c (update_window_line): Fill inverse video lines
	with infinite width space.
	(update_window): Handle completely empty matrices.
	(set_window_cursor_after_update): Bug fix.

	* xterm.c (draw_glyphs): Stop drawing at right window end.

	* dispnew.c (update_window_line): Don't ignore spaces, don't
	fill with spaces.

	* xdisp.c (compute_line_metrics): Stop adding glyph widths with
	the first glyph having width 0.

	* xterm.c (draw_glyphs): Let a glyph pixel with of 0 denote
	a glyph that extends to the end of the line.

	* xdisp.c (display_line): Insert one padding glyph

	* xdisp.c (skip_in_display_line_to): Don't subtract shift left
	amount from info.current_x.
	(display_line): Ditto.

	* dispnew.c (direct_output_for_insert): Correct use of cursor.x.
	(change_frame_size_1): Correct cursor.x if frame gets too small.
	(update_window_line): Start at row->x.

	* xdisp.c (redisplay_internal): Correct cursor.x (everywhere
	in xdisp.c).

	* xterm.c (set_output_cursor): Use window relative X/Y.
	(global): Use window relative output cursor x/y.
	(draw_glyphs): Remove y param.  Pass window relative x/y.

	* dispnew.c (update_window): Start rows at start_y.
	(update_window): Don't try scrolling because it wouldn't work
	with variable height lines, anyway.

	* dispextern.h (struct glyph_row): Remove shift_left_by,
	add x.

	* window.h (struct window): New member start_y.

	* window.c (replace_window): Initialize start_y.
	(make_window): Ditto.

1997-08-12  Gerd Moellmann  <gerd@acm.org>

	* xterm.c (draw_glyphs): Clip rows that would paint over
	the mode line.

	* dispnew.c (update_window): Take mode line border into
	account.

	* xterm.h (FRAME_MODE_LINE_BORDER_WIDTH): Number of pixels
	of border around mode line.

	* xterm.c (x_draw_row_borders): Bug fix.
	(x_erase_phys_cursor): Set pyhs_cursor.x/y before calling
	drawing functions.

	* xterm.c (x_draw_row_border): Experimental; draw 3d borders
	around modeline instead of inverting it.

	* xterm.c (glyph_to_pixel_coords): Use current matrix.

	* dispnew.c (buffer_posn_from_coords): Use SKIP_TO.  Now takes
	window relative pixel coordinates as arguments.

	* keyboard.c (make_lispy_event): Use BUFFER_POSN_FROM_COORDS
	with window relative pixel coordinates.  Use GLYPH_TO_PIXEL_-
	COORDS mit new arguments.

1997-08-11  Gerd Moellmann  <gerd@acm.org>

	* xdisp.c (start_display): Use SKIP_TO instead of SKIP_IN-
	DISPLAY_LINE.

	* keyboard.c (make_lispy_event): WINDOW_FROM_COORDINATES with
	pixel coords.
	(make_lispy_movement): Same.

	* xterm.c (note_mouse_highlight): Use WINDOW_FROM_COORDINATES
	with new parameter meaning.

	* window.c (Fcoordinates_in_window_p): Convert Lisp params
	from canon units to pixels.
	(coordinates_in_window): Pixel based.
	(Fcoordinates_in_window_p): Convert result pixel values back
	to canonical units.

	* window.h: phys_cursor_ascent + descent instead of height.

	* xterm.c (XTget_char_info): Use per char metrics for multi-byte
	chars with charset width 1.

	* dispnew.c (direct_output_for_insert): Set updated_row.

1997-08-09  Gerd Moellmann  <gerd@acm.org>

	* dispextern.h (struct glyph): Padding flag removed.

1997-08-05  Gerd Moellmann  <gerd@acm.org>

	* sysdep.c (reset_sys_modes): cursor_to with 4 params.

	* keyboard.c (interrupt_signal): Cursor_to with 4 params.

	* dispnew.c (update_window_line): Use pixels.

	* xdisp.c (compute_line_metrics): Correct pixel_width by
	shift_left_by.

	* dispextern.h (struct glyph_row): FIRST_SHIFTED_LEFT_GLYPH
	removed.  Remove references to it everywhere.  Reverse_p in
	glyph_row -> right_to_left_p.  Change references to it.

1997-08-04  Gerd Moellmann  <gerd@acm.org>

	* dispnew.c (direct_output_for_insert): Use INSERT_GLYPHS.

	* xterm.c (XTinsert_glyphs): Implement it.

	* term.c (insert_glyphs): UPDATING_FRAME may be NULL in case
	of a call from DIRECT_OUTPUT_FOR_INSERT.

	* window.h (struct cursor_pos): Keeps both matrix positions
	and pixel positions.
	(struct window): Use it.

	* dispnew.c (direct_output_for_insert): New version.

	* xdisp.c (redisplay_internal): Don't do anything if it has
	already be done directly.

	* keyboard.c (command_loop_1): Call DIRECT_OUTPUT_FOR_INSERT
	for any character.

1997-07-31  Gerd Moellmann  <gerd@acm.org>

	* xdisp.c (echo_area_display): Use new DISPLAY_STRING.

1997-07-30  Gerd Moellmann  <gerd@acm.org>

	* dispextern.h (struct glyph_row): MAX_ASCENT, MAX_DESCENT.
	(struct glyph): ASCENT, DESCENT.
	(MATRIX_ROW_PIXEL_HEIGHT): Pixel height of row.
	(GLYPH_PIXEL_HEIGHT): Pixel height of glyph.

	* xterm.c (XTget_display_info): Correct tab computation.

	* term.c (get_display_info): Correct tab computation.

	* dispextern.h (struct display_cursor): WHAT_FOUND, SOURCE_OBJECT.
	Renamed from CHAR_CURSOR.

1997-07-29  Gerd Moellmann  <gerd@acm.org>

	* xdisp.c (display_text_line): Mostly pixel oriented.

	* dispextern.h (struct glyph): BOX_WIDTH -> PIXEL_WIDTH.

	* term.c (append_intermediate_glyph): Generate padding glyphs.

	* xdisp.c (display_text_line): More into final direction.

	* xterm.c (XTget_char_info): Use WHAT field of CHAR_INFO.
	(XTget_char_info): Use tabs as multiples of spaces.

	* term.c (get_char_info): Use WHAT field of CHAR_INFO.
	Use tabs as multiples of spaces.

	* dispextern.h (struct char_info): WHAT field.

	* term.c (encode_terminal_code): Don't use GLYPH_CHAR, use
	FAST_GLYPH_CHAR instead because GLYPH_CHAR won't remove faces.

1997-07-28  Gerd Moellmann  <gerd@acm.org>

	* dispnew.c (init_char_info): Correct TAB_WIDTH to a reasonable
	value.
	(init_char_info): Initialize with glyph row.

	* term.c (get_char_info): Check WANT_ELLIPSIS_P.

	* xterm.c (XTget_char_info): Check WANT_ELLIPSIS_P.

	* dispextern.h (struct char_info): GLYPH_ROW for intermediate glyphs.

	* dispnew.c (init_char_info): Init GLYPH_ROW to NULL.  CHAR_CURSOR
	moved to xdisp.c.

	* xdisp.c (display_text_line): Use CHAR_CURSOR.

	* xterm.c (x_append_intermediate_glyph): Intermediate glyph
	generation.
	(XTget_char_info): Ditto.

	* term.c (get_char_info): Intermediate glyph generation.
	(append_intermediate_glyph): Ditto.

1997-07-27  Gerd Moellmann  <gerd@acm.org>

	* dispnew.c (compute_char_cursor_face): Compute the face for a
	CHAR_CURSOR.
	(init_char_cursor): Initialize a CHAR_CURSOR.
	(get_char_and_advance): Get next character to display.

	* dispextern.h (struct char_cursor): Cursor for iterating over
	display text of CURRENT_BUFFER.

1997-07-26  Gerd Moellmann  <gerd@acm.org>

	* term.c (get_char_info): Set MAX_PIXEL_WIDTH in CHAR_INFO.

	* dispextern.h (struct char_info): Use LISP_CHAR_TABLE for DP.
	New member MAX_PIXEL_HEIGHT.

	* xterm.c (x_per_char_metric): Get per character metrics.
	(XTget_char_info): More cases covered.

	* term.c (get_char_and_info): Get next character and character
	display information.
	(get_char_info): Get character display information.

	* dispextern.h: Character display information.

	* xterm.c (x_get_char_font_and_encoding): Get font and
	encode character.
	(XTget_char_info): Get display information about a character.

1997-07-23  Gerd Moellmann  <gerd@acm.org>

	* dispextern.h (WINDOW_DISPLAY_MODE_LINE_HEIGHT): Height is
	zero if window is mini-window.

	* xdisp.c: Include xterm.h or w32term.h for FRAME_LINE_HEIGHT.
	(try_window): DISPLAY_TEXT_LINE as long as Y < DISPLAY_HEIGHT.

	* dispnew.c (assign_row): Assign row pixel height.
	(clear_glyph_row): Clear pixel height.
	(update_window): Use PIXEL_HEIGHT.

	* xdisp.c (display_string): Set row pixel height temporarily.
	(display_text_line): Ditto.

	* dispextern.h (GLYPH_PIXEL_WIDTH):
	(GLYPH_PIXEL_HEIGHT): Get glyph pixel dimension.

	* frame.h (FRAME_DEFAULT_PIXEL_LINE_HEIGHT): Get height of
	line in default font.
	(FRAME_DEFAULT_GLYPH_PIXEL_WIDTH): Get width of character
	in default font.
	(FRAME_MODE_LINE_PIXEL_HEIGHT): Get height of mode line.

	* xterm.h (FRAME_MODE_LINE_HEIGHT): Return height of mode line
	in pixels.

	* dispnew.c (allocate_leaf_matrix): Use window pixel macros.

	* dispextern.h (WINDOW_DISPLAY_PIXEL_WIDTH):
	(WINDOW_DISPLAY_PIXEL_HEIGHT):
	(WINDOW_DISPLAY_MODE_LINE_HEIGHT):
	(WINDOW_DISPLAY_PIXEL_HEIGHT_WITHOUT_MODE_LINE):
	(WINDOW_DISPLAY_LEFT_EDGE_PIXEL_X):
	(WINDOW_DISPLAY_RIGHT_EDGE_PIXEL_X):
	(WINDOW_DISPLAY_TOP_EDGE_PIXEL_Y):
	(WINDOW_DISPLAY_BOTTOM_EDGE_PIXEL_Y): Macros to get various
	pixel values related to windows.

1997-07-21  Gerd Moellmann  <gerd@acm.org>

	* xterm.c (XTflash): Flash last line of frame.

	* dispextern.h (cursor_in_echo_area): Extern declaration.

	* xterm.c (dumpglyphs): 8-bit version to test if my Xserver
	freezes stem from 16-bit functions.

	* xterm.c (x_display_and_set_cursor): Don't display hollow
	cursor in mini windows.

	* window.c (replace_window): Initialize PHYS_CURSOR_TYPE.
	(make_window): Ditto.

	* xterm.c (x_erase_phys_cursor): Erase cursor image.
	(x_display_and_set_cursor): Merged version of X_DISPLAY_BOX_CURSOR
	and X_DISPLAY_BAR_CURSOR.
	(x_display_cursor): Use it.
	(x_update_window_cursor): Use it.

	* xdisp.c (display_text_line): Set cursor for window even if not
	selected.

	* xterm.c (x_display_bar_cursor): Use HPOS and VPOS instead
	of X and Y to denote matrix positions.
	(x_display_cursor): Ditto.

	* dispnew.c (scrolling_window): Scrolling for windows.

1997-07-16  Gerd Moellmann  <gerd@acm.org>

	* dispnew.c (build_frame_matrix): Work on windows with update
	flag set.
	(build_frame_matrix_from_window_tree): Ditto.
	(build_frame_matrix_from_leaf_window): Ditto.

	* xdisp.c (echo_area_display): Set MUST_BE_UPDATED_P instead of
	building frame matrix.
	(redisplay_internal): Set window update flags instead of
	building frame matrix.

	* minibuf.c (read_minibuf): Set MUST_BE_UPDATED_P instead of
	building frame matrix.

	* window.c (make_window): Initialize new members.
	(replace_window): Ditto.

	* xfns.c (Fx_create_frame): Don't set PHYS_CURSOR_X to -1.
	I don't believe this is really necessary.

	* dispnew.c (build_frame_matrix_from_leaf_window): Determine
	border glyph once.

1997-07-15  Gerd Moellmann  <gerd@acm.org>

	* window.c (mark_window_cursors_off): Mark all cursors in
	window tree off.

	* xterm.c (x_display_box_cursor): Window parameter.  Use
	window matrix.
	(glyph_to_pixel_pos): Convert matrix pos -> pixels.
	(pixel_to_glyph_pos): Convert pixel pos -> matrix pos.
	(x_update_cursor): Work on windows.
	(x_display_bar_cursor): Ditto.
	(x_draw_single_glyph): Ditto.

	* xterm.h: Prototype for X_DISPLAY_CURSOR.

	* xterm.c (XTcursor_to): Void return type.  Test for
	UPDATED_WINDOW.  Call x_display_cursor with window.
	(x_display_cursor): Void return type.  Window instead of frame
	parameter.

	* window.h (WINDOW_RIGHTMOST_P, WINDOW_TOPMOST_P): Use functions below.

	* window.c (window_rightmost_p, window_topmost_p): Based on
	window tree.

	* dispnew.c (adjust_frame_message_buffer): Allocate with
	FRAME_MESSAGE_BUF_SIZE.

	* window.h: PHYS_CURSOR_.* added.

	* frame.h (struct frame): Cursor information removed.

	* frame.h (FRAME_SCROLL_BAR_WIDTH): Removed because unused.
	(FRAME_WINDOW_WIDTH_ARG): Don't add scroll bar width.

	* window.h (WINDOW_LEFT_MARGIN): Remove FRAME_LEFT_SCROLL_BAR.

	* window.c (window_internal_width): Scroll bars no longer
	part of window.

	* xterm.c (XTclear_end_of_line): FRAME_LEFT_SCROLL_BAR_WIDTH removed.

	* xfns.c (x_set_scroll_bar_width): FRAME_LEFT_SCROLL_BAR_WIDTH removed.

	* xdisp.c (echo_area_display): FRAME_LEFT_SCROLL_BAR_WIDTH removed.
	(redisplay_internal): Ditto.
	(redisplay_window): Ditto.
	(redisplay_window): Ditto.
	(display_text_line): Ditto.
	(display_mode_line): Ditto.

	* minibuf.c (read_minibuf): FRAME_LEFT_SCROLL_BAR_WIDTH removed.

	* dispnew.c (set_cursor_to): FRAME_LEFT_SCROLL_BAR_WIDTH removed.
	(direct_output_for_insert): Ditto.
	(direct_output_forward_char): Ditto.
	(update_frame_1): Ditto.

1997-07-14  Gerd Moellmann  <gerd@acm.org>

	* dispnew.c (updated_window): Set by UPDATE_WINDOW to the window
	being updated.
	(update_window): Set and clear it.

	* dispnew.c (update_window_line, update_window, scrolling_window):
	First versions.

	* dispnew.c (build_frame_matrix_from_leaf_window): Add vertical
	bar for window borders.
	(fill_up_glyph_row_area_with_spaces): Fill an area of a row
	with spaces.
	(fill_up_glyph_row_with_spaces): Call above function.

	* xdisp.c (display_text_line): Don't add vertical bar for
	window borders.
	(display_string): Ditto.

	* window.c (make_window): Init CURSOR_VPOS/HPOS.
	(replace_window): Ditto.

	* xterm.c (XTwrite_glyphs): Use selected window cursor position.

	* xfns.c (Fx_contour_region): Use selected window cursor position.
	(Fx_uncontour_region): Ditto.
	(Fx_select_region): Ditto.

	* frame.c (make_frame): Remove CURSOR_X/Y.

	* xdisp.c (redisplay_internal): Use window cursor position.

	* dispnew.c (update_frame_1): Use cursor position of selected
	window.
	(change_frame_size_1): Ditto.

	* xterm.c (XTupdate_begin): Set CURS_X/Y from selected window.
	(XTwrite_glyphs): Use cursor position of selected window.

	* xfns.c (x_set_scroll_bar_width): Set cursor pos of selected window.

	* dispnew.c (set_cursor_to): Set window cursor position.
	(direct_output_for_insert): Use window cursor position.
	(init_display): Don't use frame cursor position.

	* window.h: CURSOR_VPOS/HPOS added.

	* frame.h (struct frame): CURSOR_X/Y removed.
	(FRAME_CURSOR_X): Removed.
	(FRAME_CURSOR_Y): Ditto.

	* dispnew.c (direct_output_for_insert): LAST_POINT_X removed.
	(direct_output_forward_char): Ditto.

	* xdisp.c (redisplay_internal): LAST_POINT_X and LAST_POINT_Y removed.

	* window.c (make_window): LAST_POINT_X and LAST_POINT_Y removed.

	* window.h: LAST_POINT_X and LAST_POINT_Y removed.

1997-07-13  Gerd Moellmann  <gerd@acm.org>

	* xdisp.c: Bug fixes using SET_CURSOR with HPOS 0 instead
	of FRAME_LEFT_SCROLL_BAR_WIDTH.

	* dispextern.h: Changed function names.

	* dispnew.c (scrolling): Don't call SCROLLING_1 if WINDOW_SIZE
	< 2.
	(clear_window_matrices): Formerly two functions for desired
	and current matrix.
	(update_frame_1): Call CLEAR_DESIRED_MATRICES.
	(update_frame): Return return value from UPDATE_FRAME_1.

1997-07-12  Gerd Moellmann  <gerd@acm.org>

	* xdisp.c (try_window): Set WINDOW_END_VPOS with window relative
	LAST_TEXT_VPOS.

	* frame.c (set_menu_bar_lines): Adjust matrices.

	* dispnew.c (set_cursor_to): Set cursor position.

	* minibuf.c (read_minibuf): Build frame matrix.

	* xdisp.c (this_line_start_hpos): Renamed to
	THIS_LINE_START_WINDOW_HPOS to make it clear that this is window
	relative.
	(this_line_vpos): Renamed to THIS_LINE_WINDOW_VPOS for the same
	reason.

	* dispnew.c (build_frame_matrix): Don't clear rows of the
	menu bar.
	(clear_window_records): Clear window rows.
	(clear_frame_records): Clear window and frame rows.
	(clear_glyph_matrix): Set all rows of a matrix to empty.

	* xdisp.c (echo_area_display): Parameter UPDATE_FRAME_P.
	Update frame if set.
	(message2_nolog): Pass 1 to ECHO_AREA_DISPLAY.  UPDATE_FRAME
	removed.
	(redisplay_internal): Pass 0 to ECHO_AREA_DISPLAY.
	(redisplay_internal): Build frame matrix before UPDATE_FRAME.

	* dispnew.c (assign_row): Assign one glyph row to another.
	(mirrored_make_current): Use it.
	(mirror_make_current): Use it.
	(update_line): Rely on MIRRORED_MAKE_CURRENT to set flags and
	used counters for the current glyph row.


1997-07-11  Gerd Moellmann  <gerd@acm.org>

	* lisp.h: Prototype for SCAN_BUFFER.

	* xdisp.c (redisplay_windows): Simplified.

	* dispnew.c (window_to_frame_vpos): Convert window to frame vpos
	with debug checks.
	(window_to_frame_hpos): Convert window to frame hpos with checks.
	(frame_to_window_vpos): Convert frame to window vpos with checks.
	(frame_to_window_hpos): Convert frame to window hpos with checks.

	* dispextern.h: PRESERVE_OTHER_COLUMNS removed.

	* dispnew.c: PRESERVE_OTHER_COLUMNS removed.

	* xdisp.c (redisplay_internal): Another instance of
	DISPLAY_TEXT_LINE with window relative VPOS.
	(redisplay_internal): Remove PRESERVE_OTHER_COLUMNS.

	* dispnew.c (init_desired_glyphs): Do it on window matrices,
	only.

	* xdisp.c (try_window_id): Use CANCEL_WINDOW_LINE.
	(redisplay_internal): Ditto.

	* dispnew.c (cancel_window_line): Use window matrix.  Changed
	name to CANCEL_WINDOW_LINE.

	* xdisp.c (try_window_id): Use DISPLAY_TEXT_LINE with window
	relative VPOS.

	* dispextern.h (WINDOW_TO_FRAME_VPOS): Convert window vpos
	to frame vpos.
	(WINDOW_TO_FRAME_HPOS): Convert window hpos to frame hpos.
	(FRAME_TO_WINDOW_VPOS): Convert frame vpos to window vpos.
	(FRAME_TO_WINDOW_HPOS): Convert frame hpos to window hpos.

	* xdisp.c (try_window_id): Use ADJUST_WINDOW_CHARSTARTS with
	window relative VPOS.
	(redisplay_internal): Use ADJUST_WINDOW_CHARSTARTS with window
	relative VPOS.

	* dispnew.c (adjust_window_charstarts): Use INCREMENT_GLYPH_-
	MATRIX_BUFFER_POSITIONS.

	* xdisp.c (try_window_id): Use SCROLL_FULL_WIDTH_WINDOW.

	* dispextern.h: Prototype for SCROLL_FULL_WIDTH_WINDOW.

	* dispnew.c (scroll_frame_lines): Make it work on window
	matrix.  Change name to scroll_full_width_window.

	* xdisp.c (message2_nolog): Don't fwrite NULL message If
	NONINTERACTIVE.

1997-07-07  Gerd Moellmann  <gerd@acm.org>

	* dispnew.c (init_desired_glyphs): Clear both frame matrix
	and window matrices.
	(adjust_window_charstarts): Use window matrix.
	(cancel_my_columns): Use window matrix.
	(direct_output_for_insert): Use window matrix, only.

	* xdisp.c (display_glyphs): Extracted code from DISPLAY_STRING.
	(display_string): Call display_glyphs.
	(display_menu_bar_string): Display a string in a menu bar line.
	(display_menu_bar): Use DISPLAY_MENU_BAR_STRING.
	(display_text_line): Use window matrix.
	(try_window): Use window relative positions.

1997-07-06  Gerd Moellmann  <gerd@acm.org>

	* dispnew.c (adjust_frame_glyphs): Allocate window matrices from (0, 0).
	(allocate_leaf_matrix): Add FRAME_MENU_BAR_LINES to the height of
	top-most windows.

	* window.h (WINDOW_TOPMOST_P): Added.

	* xdisp.c (echo_area_display): Use PREPARE_DESIRED_ROW.
	(redisplay_window): Ditto.
	(display_text_line): Ditto.
	(display_menu_bar): Ditto.
	(display_mode_line): Ditto.
	(display_mode_line): Use window matrix.
	(display_string): Use window matrix.
	(display_mode_element): Ditto.
	(echo_area_display): Don't display if frame has no pools yet.
	(echo_area_display): Work with window matrix for mini window.
	(redisplay_window): Use window marix for mini window.
	(display_text_line): Assume HPOS and VPOS are window relative and
	use that for DISPLAY_STRING.

	* dispextern.h: Prototype for prepare_desired_row.

	* dispnew.c (prepare_desired_row): Replacement for GET_DISPLAY_LINE.

	* dispnew.c (adjust_window_charstarts): Always allocate window
	matrices.
	(clear_glyph_row): Only reset used counters and flags.

1997-07-05  Gerd Moellmann  <gerd@acm.org>

	* dispnew.c (scroll_frame_lines): Don't assume first scrolled
	line is non-empty.
	(realloc_glyph_pool): Don't add 1 to the pool size.
	(adjust_glyph_matrix): Don't add 1 to pointers to glyph areas.

	* dispnew.c (line_hash_code): Don't use null-glyph end marker.
	(line_draw_cost): Ditto.
	(update_line): Ditto.
	(update_line): Use SPACE_GLYPH.
	(count_blanks): Additional parameter LEN.

	* xdisp.c (display_text_line): Use SPACE_GLYPH.
	(display_text_line): Don't add null-glyph end marker.
	(display_string): Use SPACE_GLYPH.
	(display_string): Don't use null-glyph end marker.

	* term.c (clear_end_of_line): Use SPACE_GLYPH.

	* dispnew.c (clear_glyph_row): Don't use null-glyph end markers.
	(fill_up_glyph_row_with_spaces): Ditto.
	(preserve_other_columns): Add SPACE_GLYPH at then end of desired
	rows, instead of null-glyphs.
	(direct_output_for_insert): Don't add null-glyph end marker.

	* scroll.c (do_direct_scrolling): Change algorithm to construct
	vector of lines assigned.  Call MIRRORED_LINE_DANCE:
	(do_scrolling): Ditto.

	* dispnew.c (mirror_line_dance): Mirror line assignments in a
	frame matrix in window matrices.
	(mirrored_line_dance): Do line assignments during scrolling.
	Maybe do corresponding assignments in window matrices.
	(check_window_matrix_pointers): Check that window rows and frame
	rows agree about glyph pointers.
	(check_matrix_pointers): Ditto.
	(mirrored_make_current): Make a row of a desired matrix current;
	maybe mirror the operation in window matrices.
	(mirror_make_current): Make window desired matrix row current when
	frame matrix row was made current.

1997-07-04  Gerd Moellmann  <gerd@acm.org>

	* dispnew.c (check_matrix_pointer_lossage): Check against
	pointer lossage in matrices.
	(get_glyph_matrix_row): Removed.

	* scroll.c (do_scrolling): Simplified.
	(do_direct_scrolling): Simplified.
	(scrolling_1): Pass CURRENT_MATRIX instead of FRAME to
	DO_.*SCROLLING.


	* dispnew.c (ins_del_glyph_rows): Insert/delete rows in a matrix.
	(rotate_vector): Removed.
	(rotate_pointers): Removed.
	(scroll_frame_lines): Simplified.

1997-07-03  Gerd Moellmann  <gerd@acm.org>

	* dispextern.h (MATRIX_ROW_SWAP_CONTENTS): Removed.

	* dispnew.c (increment_glyph_matrix_buffer_positions): Does
	what the name says.
	(clear_glyph_row): Make a glyph row structure empty.
	(make_matrix_row_current): Make a glyph row current.
	(make_window_matrix_row_current): Perform analogous row swaps
	for window matrices.
	(update_line): Call make_matrix_row_current.

1997-07-02  Gerd Moellmann  <gerd@acm.org>

	* dispextern.h (SET_MATRIX_ROW_ENABLED_P): Better macro name.
	(SET_MATRIX_ROW_INVERSE_P): Better name and HIGHLIGHT_P ->
	INVERSE_P.
	(MATRIX_ROW_INVERSE_P): Former MATRIX_ROW_HIGHLIGHT_P.
	(struct glyph_row): HIGHLIGHT_P -> INVERSE_P

	* all files: Use above new names.

	* dispnew.c (scroll_frame_lines): Simplified.  Use
	SCROLL_GLYPH_MATRIX.
	(make_glyph_row_empty): Mark a glyph row empty.
	(increment_glyph_row_buffer_positions): Increment
	buffer positions in a glyph row.
	(increment_glyph_matrix_buffer_positions): Increment buffer
	positions in a range of rows.
	(scroll_glyph_matrix): Scroll a glyph matrix.
	(swap_glyphs_in_rows): Swap glyphs between rows.
	(swap_glyph_pointers): Swap pointers between rows.
	(glyph_row_slice_p): Return 1 if one row is a slice of another.
	(init_display): Initialize SPACE_GLYPH.
	(fill_up_glyph_row_areas_with_spaces): Fill up areas with
	spaces.

1997-07-01  Gerd Moellmann  <gerd@acm.org>

	* xterm.c (dumprectangle): Use vectors in glyph rows.

	* xdisp.c (display_text_line): Use vectors in glyph rows.
	(display_string): Ditto.

	* scroll.c (do_scrolling): Use vectors in glyph rows.
	(do_direct_scrolling): Ditto.

	* alloc.c (mark_object): Use vectors in glyph rows.
	Mark for all frame types.

	* dispnew.c (adjust_glyph_matrix): Use vectors to glyphs in
	glyph rows.
	(get_glyph_matrix_row): Ditto.
	(matrix_row): Ditto.
	(rotate_pointers): Ditto.
	(scroll_frame_lines): Ditto.
	(preserve_other_columns): Ditto.
	(cancel_my_columns): Ditto.
	(update_line): Ditto.
	(direct_output_for_insert): Ditto.

	* dispextern.h (struct glyph_row): Use a vector of pointers
	instead of individual members.  Use a vector of used counters.
	(MATRIX_ROW_SWAP_CONTENTS): Use vectors.
	(MATRIX_ROW_GLYPH_START): Ditto.
	(MATRIX_ROW_GLYPH_END): Ditto.
	(MATRIX_ROW_USED): Ditto.
	(MATRIX_ROW_SET_USED): Ditto.

	* dispnew.c (line_hash_code): Simplified.

1997-06-30  Gerd Moellmann  <gerd@acm.org>

	* dispnew.c: Prototype for ROTATE_VECTOR, ROTATE_POINTERS,
	CHANGE_FRAME_SIZE_1.
	(preserve_other_columns): Void return.
	(cancel_my_columns): Void return type.
	(scrolling): Int return type.
	(do_pending_window_change): Void return type.
	(change_frame_size): Ditto.
	(bitch_at_user): Ditto.
	(init_display): Ditto.
	(syms_of_display): Ditto.

	* dispextern.h: Add prototypes for REDRAW_FRAME,
	REDRAW_GARBAGED_FRAMES, CANCEL_LINE, CLEAR_FRAME_RECORDS,
	INIT_DESIRED_GLYPHS, SCROLL_FRAME_LINES, PRESERVE_OTHER_COLUMNS,
	ADJUST_WINDOW_CHARSTARTS, CANCEL_MY_COLUMNS,
	DIRECT_OUTPUT_FOR_INSERT, DIRECT_OUTPUT_FORWARD_CHAR,
	UPDATE_FRAME, SCROLLING, BUFFER_POSN_FROM_COORDS,
	DO_PENDING_WINDOW_CHANGE, CHANGE_FRAME_SIZE, BITCH_AT_USER,
	SIT_FOR, INIT_DISPLAY, SYMS_OF_DISPLAY,

	* dispnew.c (redraw_frame): FRAME_PTR -> struct frame.  Return
	void.
	(cancel_line): Return void.
	(clear_frame_records): Return void.

	* dispextern.h (struct glyph): Remove GLYPH, add bit-fields.
	(SET_CHAR_GLYPH): Fill a character glyph.
	(SET_CHAR_GLYPH_FROM_GLYPH): Set a character glyph from a GLYPH.
	(GLYPH_FROM_CHAR_GLYPH): Construct a GLYPH from a character
	glyph.
	(CHAR_GLYPH_CHAR_CODE): Return character code of a glyph.
	(SET_CHAR_GLYPH_CHAR_CODE): Set character code of a glyph.
	(CHAR_GLYPH_FACE_ID): Return face id of a glyph.
	(SET_CHAR_GLYPH_FACE_ID): Set face id of a glyph.
	(CHAR_GLYPH_PADDING_P): Return padding flag of a glyph.
	(SET_CHAR_GLYPH_PADDING_P): Set padding flag.
	(CHAR_GLYPH_REVERSE_P): Return reversed flag.
	(SET_CHAR_GLYPH_REVERSE_P): Set reversed flag.
	(MATRIX_ROW_SWAP_CONTENTS): Swap pointers between rows.

	* term.c (reassert_line_highlight): Check CHARS_WASTED == 0.

	* window.h (struct window): Add comment that no Lisp data may
	come below CURRENT_MATRIX.

	* alloc.c (mark_object): Change window mark code to stop with
	member CURRENT_MATRIX.

1997-06-28  Gerd Moellmann  <gerd@acm.org>

	* scroll.c (do_scrolling): Change algorithm to use pointers.
	(do_direct_scrolling): Ditto.

	* dispnew.c (get_glyph_matrix_row): Use pointers stored in rows.
	(new_glyph_pool): Formerly new_FRAME_GLYPH_MATRIX.
	(free_glyph_pool): Formerly FREE_FRAME_GLYPH_MATRIX.
	(realloc_glyph_pool): Formerly REALLOC_FRAME_GLYPH_MATRIX.
	Returns 1 if pool changed.
	(matrix_row): Additional check for lost pointers to glyph rows.
	(compute_matrices): Additional parameter DIM_P set means that no
	allocation should take place.  Additional parameter
	ANY_WINDOWS_CHANGED_P set if any windows matrix has changed.
	(compute_leaf_matrix): Additional parameter CHANGED_P set to 1
	when window matrix changes.  Additional parameter DIM_ONLY_P set
	to 1 to indicate that no allocation should take place.
	(adjust_frame_glyphs): Construct new glyph pools and glyph
	matrices.  Optimize frame redraws.
	(free_glyphs): Free pools.
	(check_glyph_memory): Check pools not freed.
	(rotate_pointers): Rotate pointers in a vector of glyph rows.
	(scroll_frame_lines): Change algorithm to use pointers.
	(update_line): Ditto.

	* dispextern.h (struct glyph_row): Use pointers to areas in a row.
	(global): All macro names changed from prefix FRAME_MATRIX to
	MATRIX.

1997-06-27  Gerd Moellmann  <gerd@acm.org>

	* dispextern.h (struct glyph_pool): Replacement for former
	FRAME_GLYPH_MATRIX.
	(struct glyph_matrix): No longer contains sizes of allocated
	areas.

	* xdisp.c (redisplay_internal): Don't redisplay if frame has
	no glyph pools.

	* frame.c (make_frame): Initialize pools.

1997-06-26  Gerd Moellmann  <gerd@acm.org>

	* scroll.c (do_direct_scrolling): Don't assume that the
	line moving algorithm has no intermediate steps.
	(do_scrolling): Ditto.

	* Makefile.in (alloc.o): Add dependency dispextern.h.

	* alloc.c: Include dispextern.h for glyph definitions.

	* dispnew.c (get_glyph_matrix_row): Return 1 if ROW_INDEX
	is legal, return 0 otherwise.

	* window.h: Add comment that windows are marked specially.

	* alloc.c (mark_object): Mark windows specially.


1997-06-25  Gerd Moellmann  <gerd@acm.org>

	* dispextern.h (struct glyph): Add member OBJECT
	referencing a Lisp object from which a glyph was drawn.
	Member TEXT_POSITION renamed POSITION.
	* xterm.c, xdisp.c, dispnew.c: Rename TEXT_POSITION -> POSITION.

	* alloc.c: Include dispextern.h.
	(mark_object): Mark objects referenced from glyphs.

	* frame.c (make_frame): Initialize DECODE_MODE_SPEC_BUFFER.

	* scroll.c (do_direct_scrolling): Remove TEMP_MATRIX.
	(do_scrolling): Ditto.

	* frame.h (struct frame): TEMP_MATRIX removed.
	DECODE_MODE_SPEC_BUFFER added.

	* window.h: TEMP_MATRIX removed.

	* scroll.c: OPHYS_LINES removed.

	* dispnew.c: OPHYS_LINES and OPHYS_LINES_LENGTH removed.
	FRAME_PTR -> struct frame *.

	* termhooks.h: Prototypes for INSERT_GLYPHS_HOOK,
	WRITE_GLYPHS_HOOK, DELETE_GLYPHS_HOOK,

	* term.c: Prototypes for INSERT_GLYPHS_HOOK,
	WRITE_GLYPHS_HOOK, DELETE_GLYPHS_HOOK,

	* xdisp.c (redisplay_internal): Remove call to VERIFY_CHARSTARTS.
	(do_verify_charstarts): Removed.

	* frame.c (Fmake_terminal_frame): Adjust glyphs.
	(Fdelete_frame): Free glyphs.
	(make_frame): Initialize matrix fields in frame.

	* config.in (PROTO): Added.

	* emacs.c (shut_down_emacs): Check glyph memory.

	* window.c (Fdelete_window): Free window matrices.
	(Fset_window_configuration): Ditto.
	(Fdelete_window): Adjust glyphs.
	(Fsplit_window): Ditto.
	(change_window_height): Ditto.
	(Fset_window_configuration): Ditto.
	(make_window): Initialize DESIRED_MATRIX and CURRENT_MATRIX.
	(replace_window): Reset DESIRED_MATRIX and CURRENT_MATRIX

	* Makefile.in (window.o): Add dependency window.c -> dispextern.h.

	* window.c: Include dispextern.h.

	* scroll.c (do_scrolling): Use new glyphs.
	(do_direct_scrolling): Ditto.

	* xdisp.c: Some function prototypes.
	(redisplay_internal): Don't do anything if matrices not yet set.
	(redisplay_internal): Use new glyphs.
	(try_window_id): Ditto.
	(copy_part_of_rope): Ditto.
	(display_text_line): Ditto.
	(display_menu_bar): Ditto.
	(display_mode_line): Ditto.
	(display_string): Ditto.

	* xterm.c: Prototypes for some local functions.
	(dumpglyphs): Use new glyphs.
	(XTwrite_glyphs): Ditto.
	(dumprectangle): Ditto.
	(note_mouse_highlight): Ditto.
	(fast_find_position): Ditto.
	(show_mouse_face): Ditto.
	(x_draw_single_glyph): Ditto.
	(x_display_bar_cursor): Ditto.
	(x_display_box_cursor): Ditto.
	(x_new_font): Adjust glyphs when font change.

	* term.c (clear_end_of_line): Use new glyphs.
	(write_glyphs): Ditto.
	(insert_glyphs): Ditto.

	* Makefile.in (term.o): term.c depends on dispextern.h.

	* term.c: Include dispextern.h.

	* dispnew.c (direct_output_forward_char): Old glyph functions
	removed, new inserted.
	(line_hash_code): Use new glyphs.
	(line_draw_cost): Ditto.
	(cancel_line): Ditto.
	(clear_frame_records): Ditto.
	(init_desired_glyphs): Ditto.
	(get_display_line): Ditto.
	(scroll_frame_lines): Ditto.
	(preserve_other_columns): Ditto.
	(adjust_window_charstarts): Ditto.
	(cancel_my_columns): Ditto.
	(direct_output_for_insert): Ditto.
	(update_frame): Ditto.
	(quit_error_check): Made empty.
	(scrolling): Use new glyphs.
	(count_blanks): Ditto.
	(count_match): Ditto.
	(update_line): Ditto.
	(init_display): Adjust glyphs initially.
	(change_frame_size_1): Adjust glyphs.

	* dispextern.h: Old glyphs removed, new added.

	* xfaces.c (min_char_bounds): Get smallest char in loaded fonts.

	* xterm.h: Prototype for min_char_bounds.

	* window.h (struct window): Remove old glyphs, add new.

	* frame.h (struct frame): Remove old glyphs, add new.

1999-07-20  Dave Love  <fx@gnu.org>

	* buffer.c (syms_of_buffer): Make default-enable-multibyte-characters
	a user variable.

1999-07-14  Richard Stallman  <rms@gnu.org>

	* Version 20.4 released.

1999-07-14  Richard Stallman  <rms@gnu.org>

	* filelock.c (lock_file): Do nothing if purifying.

1999-07-10  Richard Stallman  <rms@gnu.org>

	* xterm.c (x_display_bar_cursor): Use the cursor-color
	to display the bar, not the cursor foreground pixel.

1999-07-09  Andrew Innes  <andrewi@gnu.org>

	* w32console.c (w32_use_full_screen_buffer): New variable.
	(syms_of_ntterm): Register it.
	(initialize_w32_display): Set initial frame size accordingly,
	respecting the LINES and COLUMNS environment variables if set.

	* w32inevt.c (w32_console_read_socket): Use it.

1999-07-07  Kenichi Handa  <handa@etl.go.jp>

	* callproc.c (Fcall_process): Decide coding system for decoding
	after we set to the target buffer.  If the output goes to a
	unibyte buffer, suppress character code conversion.

	* fileio.c (Finsert_file_contents): If reading into a unibyte
	buffer, suppress character code conversion.

	* process.c (create_process): If the output goes to a unibyte
	buffer, suppress character code conversion.p

1999-07-07  Andreas Schwab  <schwab@gnu.org>

	* xdisp.c (line-number-display-limit): Doc fix.

1999-07-05  Richard Stallman  <rms@gnu.org>

	* callproc.c (Fcall_process): Don't use initializer on coding_systems.
	(Fcall_process_region): Likewise.

1999-07-01  Markus Rost  <markus.rost@mathematik.uni-regensburg.de>

	* callproc.c (init_callproc): Set exec_directory if
	installation_directory is non-nil, without a test of exec_path.

1999-07-01  Andrew Innes  <andrewi@gnu.org>

	* w32xfns.c (drain_message_queue): New function.

	* w32term.h (drain_message_queue): Add extern.

	* w32proc.c (sys_select): Call MsgWaitForMultipleObjects instead
	of WaitForMultipleObjects when user input is allowed, so we can
	handle incoming window messages.  Call drain_message_queue when
	there are messages waiting; this ensures that windows created
	indirectly from the lisp thread get processed properly, and don't
	hang other applications by failing to respond to broadcasts.

1999-07-01  Andreas Schwab  <schwab@gnu.org>

	* callint.c (Fcall_interactively): Ignore first element of
	event-symbol-elements property.

1999-07-01  Richard Stallman  <rms@gnu.org>

	* fileio.c (Fread_file_name): Check type of DEFAULT_FILENAME.

1999-07-01  Kenichi Handa  <handa@etl.go.jp>

	* minibuf.c (read_minibuf): Set the multibyteness of the
	minibuffer before inserting `initial' string.

1999-06-30  Richard Stallman  <rms@gnu.org>

	* xfns.c (x_make_gc): Turn off GCStipple when setting up cursor_gc.

1999-06-29  Richard M. Stallman  <rms@gnu.org>

	* emacs.c [DOUG_LEA_MALLOC] (malloc_initialize_hook):
	Move the handling of MALLOC_CHECK_ envvar here.
	(main): Moved from here.

1999-06-29  Wolfram Gloger  <wmglo@dent.med.uni-muenchen.de>

	* emacs.c [DOUG_LEA_MALLOC] (malloc_initialize_hook):
	New function, assigned to the global __malloc_initialize_hook pointer.
	(main): Move malloc_set_state call into malloc_initialize_hook
	so that it happens as early as possible.

1999-06-27  Richard M. Stallman  <rms@gnu.org>

	* keyboard.c (read_key_sequence): Properly reinitialize
	fkey_map after translating thru Vkey_translation_map.
	After translating thru Vfunction_key_map, don't reset
	keytrans-start to 0.

1999-06-24  Geoff Voelker  <voelker@cs.washington.edu>

	* w32.c (get_emacs_configuration): Use GetVersionEx to
	handle NT5.0 correctly.  Include build number in configuration.
	w32heap.c (osinfo_cache): New variable.
	(cache_system_info): Initialize osinfo_cache.
	w32heap.h (osinfo_cache): Declare.

1999-06-24  Richard M. Stallman  <rms@gnu.org>

	* casefiddle.c (casify_object): Use make_multibyte_string
	if we casify a multibyte string.

1999-06-22  Ken'ichi Handa  <handa@gnu.org>

	* fileio.c (Finsert_file_contents): In the case of REPLACE, call
	del_range_byte instead of del_range_1, set `inserted' to the
	number of characters actually inserted.

1999-06-17  Dave Love  <fx@gnu.org>

	* coding.c (decode_coding_sjis_big5): Avoid compiler warning.

1999-06-18  Paul Eggert  <eggert@twinsun.com>

	* filelock.c (BOOT_TIME_FILE): New macro.
	(get_boot_time): Use it instead of hardwiring the file name.
	Check BOOT_TIME_FILE only after inspecting the kernel directly.

1999-06-17  Dave Love  <fx@gnu.org>

	* xdisp.c (invalid_eol_type): Make it unsigned.

1999-06-17  Karl Heuer  <kwzh@gnu.org>

	* process.c (send_process): Delete unsafe/redundant assignment.

1999-06-17  Jason Rumney  <jasonr@gnu.org>

	* w32term.c (dumprectangle): Handle wide characters properly.

1999-06-16  Andrew Innes  <andrewi@gnu.org>

	* s/ms-w32.h (strerror): Override the default implementation of
	strerror, so we can map winsock error codes.

	* w32.c (sys_strerror): New function.

	* w32fns.c (w32_to_x_weight): Return "demibold" instead of "semibold".

1999-06-15  Ken'ichi Handa  <handa@gnu.org>

	* buffer.c (syms_of_buffer): Don't make
	enable-multibyte-characters customizable.

1999-06-15  Richard M. Stallman  <rms@gnu.org>

	* editfns.c (Fuser_full_name): Doc fix.

1999-06-14  Tak Ota  <ota@atc.sel.sony.com>

	* w32bdf.c (clear_cached_bitmap_slots): Remove.
	(get_bitmap_with_cache): Check if CreateBitmap failed.
	Adjust cache size dynamically so cache is never larger than the
	system limit of GDI resources.
	Do cache clearing inline.  Move global variables to local scope.


1999-06-13  Wolfgang Glas  <Wolfgang.Glas@hfm.tu-graz.ac.at>

	* unexsgi.c (unexec): Dump the .rodata section from memory
	under IRIX6.5 in order to be able to unexec with gcc.

1999-06-11  Greg Hudson  <ghudson@MIT.EDU>

	* indent.c (compute_motion): Fix boundary case.

1999-06-11  Jason Rumney  <jasonr@altavista.net>

	* w32term.c (cancel_mouse_face): New function.  See equiv
	changes to xterm.c on 1996-10-31.
	(x_set_window_size): Use cancel_mouse_face.
	(w32_read_socket): Use cancel_mouse_face.
	Update frame position when size is restored.

1999-06-04  Richard M. Stallman  <rms@gnu.org>

	* lread.c (Vuser_init_file): New variable.
	(syms_of_lread): Set up Lisp variable.
	(Fload): Store the file name there, if var was t before.

1999-06-04  Paul Eggert  <eggert@twinsun.com>

	* filelock.c (get_boot_time): Don't look at /proc/uptime; it
	doesn't work if the system date is changed, or if the system
	is suspended.  Look at the last-modified time of
	/var/run/random-seed instead.

1999-06-03  Ken'ichi Handa  <handa@gnu.org>

	* coding.c (ENCODE_SJIS_BIG5_CHARACTER): Encode charset
	japanese-jisx0208-1978 correctly.

1999-06-03  Andrew Innes  <andrewi@gnu.org>

	* unexw32.c (get_section_info) [_ALPHA_]: Force as much bss data
	as possible to be dumped, for safety.

1999-06-02  Ken'ichi Handa  <handa@gnu.org>

	* coding.c (ENCODE_SJIS_BIG5_CHARACTER): Encode charset
	latin-jisx0201 correctly.

1999-05-26  Ken'ichi Handa  <handa@gnu.org>

	* charset.h (Vcharset_table): Comment fixed.

1999-05-24  Richard Stallman  <rms@gnu.org>

	* coding.c (syms_of_coding): Doc fix.

	* buffer.c (syms_of_buffer): Doc fix.

	* filelock.c (lock_if_free): After deleting a stale lock,
	try again to lock the file.

1999-05-22  Andrew Innes  <andrewi@gnu.org>

	* w32inevt.c (maybe_generate_resize_event): Detect changes in the
	console window size.
	(w32_console_read_socket): Call maybe_generate_resize_event
	whenever input events are received, since we don't get told when
	the window size changes (as opposed to the buffer size, which we
	don't care about).

	* w32console.c (clear_frame): Remember that the window width might
	be smaller than the screen buffer width.
	(write_glyphs): Remove redundant variable attrs.  Use
	FillConsoleOutputAttribute instead of WriteConsoleOutputAttribute.

1999-05-20  Andrew Innes  <andrewi@gnu.org>

	* w32term.c (w32_read_socket): Reset the grabbed flag when a frame gains or
	loses focus.

	* w32fns.c (w32_wnd_proc): Ensure mouse capture is released if
	frame loses focus, and that mouse button state is reset.  Ditto
	when the menu bar is activated.

1999-05-18  Richard Stallman  <rms@gnu.org>

	* abbrev.c (Fdefine_abbrev): Doc fix.

1999-05-13  Paul Eggert  <eggert@twinsun.com>

	* filelock.c: Fix performance bug on hosts with large
	/var/adm/wtmp files with no boot records.

	(boot_time_initialized): New var.
	(init_filelock): Initialize it.
	(get_boot_time): Use it, instead of nonzero boot_time,
	to test whether boot_time is initialized.
	Don't invoke utmp routines when dumping.

	(get_boot_time): First, try to get the boot time from the
	current utmp file, as this can be much faster.  Don't try to
	get the boot time from utmp and/or wtmp more than once.

	(get_boot_time_1): When passed null pointer, don't invoke utmpname.
	New arg LATEST.  All uses changed.

1999-05-15  Andrew Innes  <andrewi@gnu.org>

	* w32term.c (dumpglyphs): Use correct colors for drawing
	rectangles in place of missing fonts, and make them the right size.

1999-05-14  Dave Love  <fx@gnu.org>

	* syntax.c (Fparse_partial_sexp): Correct test for element 8 to be
	non-nil.

1999-05-11  Andrew Innes  <andrewi@gnu.org>

	* w32fns.c (x_to_w32_charset): Reinstall VIETNAMESE_CHARSET
	definition.
	(w32_wnd_proc): Reinstall debugging output.
	(w32_wnd_proc): Reinstall SetForegroundWindow change.
	(syms_of_w32fns): Reinstall new initializer for
	Vw32_phantom_key_code.

	* w32fns.c (x_to_w32_charset): Do partial matching of charset
	names for most non-European charsets, to cope with wildcards or
	missing spec dates.
	(Fw32_send_sys_command): Post WM_SYSCOMMAND rather than sending it
	to avoid deadlock when activating the menu bar.

1999-05-10  Ken'ichi Handa  <handa@gnu.org>

	* search.c (boyer_moore): Get charset base value of `untranslated'
	by masking by ~CHAR_FIELD3_MASK (instead of ~0xff).

1999-05-10  Andreas Schwab  <schwab@gnu.org>

	* fileio.c (Fread_file_name): Correct handling of dollars in file
	names.  Protect dollars in strings put on the file-name-history.
	Substitute homedir by `~' also in default_filename.

	* xdisp.c (try_window_id): Fix computation of tab_offset when
	backing up over a character that is split across lines.

1999-05-08  Kenichi HANDA  <handa@etl.go.jp>

	* coding.c (code_convert_region): If eol format is inconsistent,
	change coding->symbol to the sibling coding system of Unix like
	eol format.

1999-05-09  Richard M. Stallman  <rms@gnu.org>

	* s/irix5-2.h (NO_WTMP_FILE): Define it.

	* filelock.c (get_boot_time): Handle NO_WTMP_FILE.

1999-05-05  Andrew Innes  <andrewi@gnu.org>

	* w32fns.c (w32_strict_painting): New variable.
	(w32_wnd_proc): Use it to select repaint rules.
	(syms_of_w32fns): Defvar it.

1999-05-04  Andrew Innes  <andrewi@gnu.org>

	* w32fns.c (x_to_w32_charset): Fix typo: want to map all Japanese
	charsets to the standard Windows charset for Japanese.

1999-05-04  Ken'ichi Handa  <handa@gnu.org>

	* xterm.c (x_load_font): Fix typo (`>' -> `=').

	* ccl.h (struct ccl_program): New member stack_idx.

	* ccl.c (ccl_prog_stack_struct): Declare it as static.
	(ccl_driver): Setup stack_idx and ccl_prog correctly.  Update them
	before returning.
	(setup_ccl_program): Initialize ccl->stack_idx to 0.

1999-05-03  Jason Rumney  <jasonr@altavista.net>

	* w32term.c (dumpglyphs): Always fill background for italic fonts.

1999-05-03  Eli Zaretskii  <eliz@is.elta.co.il>

	* dired.c (make_time): Make argument type be time_t.

1999-05-02  Eli Zaretskii  <eliz@is.elta.co.il>

	* msdos.c (unibyte_display_via_language_environment): Add extern.

1999-05-02  Richard M. Stallman  <rms@gnu.org>

	* xdisp.c (display_text_line): Convert unibyte char to multibyte
	if unibyte_display_via_language_environment is set.
	(unibyte_display_via_language_environment):
	Variable moved from xfns.c and elsewhere.
	(syms_of_xfns): Set up Lisp var.

	* xfns.c (unibyte_display_via_language_environment):
	Variable moved to xdisp.c.
	(syms_of_xfns): Don't set up Lisp var here.

	* msdos.c (unibyte_display_via_language_environment):
	Variable moved to xdisp.c.
	(syms_of_msdos): Don't set up Lisp var here.

	* w32fns.c (unibyte_display_via_language_environment):
	Variable moved to xdisp.c.
	(syms_of_w32fns): Don't set up Lisp var here.

1999-05-02  Andrew Innes  <andrewi@gnu.org>

	* s/ms-w32.h (HAVE_FSYNC): New macro.
	(fsync): Map to _commit.
	(ftruncate): Map to _chsize.

	* w32term.c (dumpglyphs): On Windows NT, do output in Unicode even
	for ASCII, if enabled, to avoid memory allocation overhead for
	implicit Unicode conversion.  Also, recognize that ASCII and
	Latin-1 have a trivial conversion to Unicode, so x_2byte_buffer
	already contains the Unicode characters in that case.
	(construct_drag_n_drop): Remove old code that was
	trashing the drop location.

	* w32select.c (Fw32_set_clipboard_data): Undo last change to add
	nlines to encoding_buffer_size (real bug was in a ccl program in
	lisp/international/coding.el).

	* w32reg.c (w32_get_string_resource): Check for name in current
	user area, and if not found look in the local machine area.

	* w32fns.c (w32_list_bdf_fonts): Initialize n_fonts.
	(Fw32_shell_execute): New function; used to support browse-url.
	(syms_of_w32fns): Register it.
	(w32_load_system_font): Force max width to be average
	char width for fixed-pitch fonts, to avoid unnecessary redisplay
	slowdown.
	(x_to_w32_charset): Define VIETNAMESE_CHARSET if not
	already defined.
	(syms_of_w32fns): Set Vw32_phantom_key_code to 255.

	* unexw32.c (get_section_info): Dump back the entire EMDATA
	section if we can put Emacs' initialized data in a separate
	section, otherwise use the my_begdata/my_edata method.

	* makefile.nt ($(BLD)\w32term.obj): Add dependency on w32heap.h.

	* coding.c (decode_eol): Set produced/consumed values to zero if
	src_bytes is <= 0 on entry.

1999-05-02  Jason Rumney  <jasonr@altavista.net>

	* w32term.c (w32_write_glyphs, w32_clear_end_of_line)
	(w32_clear_frame, clear_cursor, x_display_bar_cursor)
	(x_display_box_cursor, x_set_window_size): Use phys_cursor_on
	field in frame.
	(do_line_dance): Updated WRT xterm.c.  Use macros where possible.
	(dumprectangle): Take into account the width of a left-side
	scroll bar.

	* w32proc.c (sys_kill): Attach to current foreground thread
	when grabbing focus; necessary on NT 5.0.

	* w32fns.c (w32_wnd_proc) [WM_PAINT]: Use rectangle from
	GetUpdateRect rather than BeginPaint.
	(w32_wnd_proc): Attach to current foreground thread
	when grabbing focus; necessary on NT 5.0.
	(w32_wnd_proc) [W32_DEBUG_DISPLAY]: Add output for
	debugging display messages.
	(w32_to_x_charset): Put wildcard last in unknown charsets to avoid
	false matching.

1999-05-02  Kenichi HANDA  <handa@etl.go.jp>

	* coding.c (setup_raw_text_coding_system): Call
	setup_coding_system to initialize the fields of struct
	coding_system correctly.

1999-04-26  Kenichi HANDA  <handa@etl.go.jp>

	* xterm.c (x_list_fonts): Fix previous change.

1999-04-26  Richard Stallman  <rms@gnu.org>

	* config.in (HAVE_LIBXP): Add #undef.
	* Makefile.in (LIB_MOTIF_EXTRA): Check HAVE_LIBXP.

1999-04-12  Ken'ichi Handa  <handa@gnu.org>

	* xterm.c (x_list_fonts): Trap X errors so that Emacs doesn't die
	by them.

1999-04-12  Karl Heuer  <kwzh@gnu.org>

	* s/freebsd.h (BSD_SYSTEM): Define for FreeBSD 4 as with FreeBSD 3.

1999-04-11  Ken'ichi Handa  <handa@gnu.org>

	* fontset.c (Fset_fontset_font): Fix previous change.

1999-04-09  Ken'ichi Handa  <handa@gnu.org>

	* fontset.c (Fquery_fontset): Check for fontset aliases here.
	(Fnew_fontset, Fset_fontset_font): Don't check for them here.

1999-04-08  Richard Stallman  <rms@gnu.org>

	* process.c (Faccept_process_output): Check validity of PROCESS.

1999-04-08  Eli Zaretskii  <eliz@gnu.org>

	* msdos.c (jp_kbd_translate_table): Fix the other \ key.

1999-04-07  Richard Stallman  <rms@gnu.org>

	* xfns.c (x_set_font): Fix error message.

	* fontset.c (Fquery_fontset): Don't check for fontset aliases here.
	(Fnew_fontset, Fset_fontset_font): Check for them here.
	(Ffontset_info, Fnew_fontset, Fset_fontset_font):
	Fix error message syntax.

	* buffer.c (Fmake_indirect_buffer): Copy multibyte status
	from the base buffer.
	(Fset_buffer_multibyte): Copy new multibyte status
	into the buffer's indirect buffers.

1999-04-07  Ken'ichi Handa  <handa@gnu.org>

	* fns.c (base64_encode_1): Don't add unnecessary newline at the
	tail.

1999-04-06  Richard Stallman  <rms@gnu.org>

	* dired.c (Ffile_attributes): Doc fix.

	* keymap.c (Faccessible_keymaps): Really initialize i_byte.
	Convert 0200 to meta only in a unibyte string.
	(Fkey_description): Likewise.

	* eval.c (do_autoload): Preserve match data.

1999-04-06  Kenichi HANDA  <handa@etl.go.jp>

	* w32fns.c (x_to_w32_font): Provide sufficient buffer to
	encode_coding to avoid carryover.

	* coding.c: Add comments for decode_coding and encode_coding.

	* ccl.c (ccl_driver) <CCL_ReadMultibyteChar2>: Fix bug of handling
	a composite character by skipping its leading code.
	<CCL_WriteMultibyteChar2>: Handle non-ascii single byte character
	correctly.

	* coding.c: Add comments for decode_coding and encode_coding.

	* ccl.c (ccl_driver) <CCL_ReadMultibyteChar2>: Fix bug of handling
	a composite character by skipping its leading code.
	<CCL_WriteMultibyteChar2>: Handle non-ascii single byte character
	correctly.

1999-04-06  Eli Zaretskii  <eliz@gnu.org>

	* msdos.c (dos_rawgetc): Don't zero out c if private translation
	table was used.
	(jp_kbd_translate_table): Support C-\.
	(it_kbd_translate_table): Map `>' correctly.
	(it_keyboard): Add `>'.

1999-04-06  Richard Stallman  <rms@gnu.org>

	* intervals.c (graft_intervals_into_buffer): Turn off
	inhibit_modification_hooks around calling Fset_text_properties.

1999-04-05  Kenichi HANDA  <handa@etl.go.jp>

	* xterm.c (dumpglyphs): Be sure to fill the whole background of
	glyphs.

1999-04-05  Eli Zaretskii  <eliz@gnu.org>

	* msdos.c (jp_kbd_translate_table): Fix last change.

1999-04-04  Eli Zaretskii  <eliz@gnu.org>

	* msdos.c (struct kbd_translate): New struct, for key translation
	tables private to certain national keyboard layouts.
	(struct dos_keyboard_map): Add a pointer to a private translation
	table.
	(jp_kbd_translate_table): Private table for the Japanese
	keyboard.
	(jp_keyboard): Japanese keyboard layout.
	(it_kbd_translate_table): Private table for the Italian keyboard.
	(it_keyboard): Use it_kbd_translate_table.
	(keyboard_layout_list): Add the Japanese keyboard.
	(dos_rawgetc): Use the keyboard-private translation table, if
	available.
	(abort) [__DJGPP_MINOR__ >= 2]: Raise SIGABRT.

1999-04-02  Kenichi HANDA  <handa@etl.go.jp>

	* xdisp.c (redisplay_window): When we call compute_motion with
	HPOS got from w->last_point_x, call it with DID_MOTION 1.
	(display_text_line): Stop the loop for processing overlay strings
	when we reach the right edge of the window.

1999-03-31  Richard M. Stallman  <rms@gnu.org>

	* doc.c (get_doc_string): When UNIBYTE and DEFINITION are 0,
	let the data control whether string is unibyte.

1999-03-30  Richard M. Stallman  <rms@gnu.org>

	* macros.c (Fexecute_kbd_macro): Save real_this_command.
	(pop_kbd_macro): Restore the saved real_this_command.
	(Fcall_last_kbd_macro): Set real_this_command to the macro.

1999-03-26  Richard M. Stallman  <rms@gnu.org>

	* buffer.c (Fset_buffer_modified_p): Don't lock or unlock
	if buffer-file-name is nil.

1999-03-25  Jason Rumney  <jasonr@altavista.net>

	* w32select.c (Fw32_set_clipboard_data): Take into account line
	ends when calculating clipboard storage needed for non-ASCII text.

1999-03-25  Andrew Innes  <andrewi@gnu.org>

	* makefile.nt (PREPARED_HEADERS): Change name of paths.h to epaths.h.
	(epaths.h): Renamed from paths.h.
	(clean):
	($(BLD)\filelock.obj):
	($(BLD)\lread.obj):
	($(BLD)\w32fns.obj): Renamed paths.h to epaths.h.

1999-03-23  Ken'ichi Handa  <handa@gnu.org>

	* coding.c (encode_coding_iso2022): Initialize dummy arguments to
	ENCODE_ISO_CHARACTER for the previous change on this macro.

1999-03-23  Kenichi Handa  <handa@etl.go.jp>

	* xdisp.c (decode_mode_spec_coding): Handle integer value in
	eoltype correctly for backward compatibility.

1999-03-20  Kenichi HANDA  <handa@etl.go.jp>

	* coding.c (ENCODE_ISO_CHARACTER): Check validity of CHARSET.  If
	invalid, produce the buffer internal byte sequence without encoding.

1999-03-19  Karl Heuer  <kwzh@gnu.org>

	* editfns.c (Fformat): Accept %i format.

1999-03-17  Karl Heuer  <kwzh@gnu.org>

	* filelock.c (get_boot_time): Test tempname, not filename.

1999-03-17  Jason Rumney  <jasonr@altavista.net>

	* w32bdf.h: Merged patches from Meadow; introduce bitmap cache to
	speed display.

	* w32bdf.c: Merged patches from Meadow; introduce bitmap cache to
	speed display.
	(get_cached_font_char, cache_char_offset, get_bitmap_with_cache)
	New functions.
	(w32_free_bdf_font, seek_char, w32_get_bdf_glyph, w32_BDF_TextOut)
	Use bitmap cache.

	* w32fns.c (enum_font_cb2): Set the font height to be the
	character height, not the cell height.
	(Fw32_select_font): Initialize font dialog with current default font.
	(Vw32_system_coding_system): New variable.
	(w32_strict_filenames): Add comment.
	(w32_to_x_font): Decode font name using Vw32_system_coding_system.
	(x_to_w32_font): Encode font name using Vw32_system_coding_system.
	(syms_of_w32fns): Add w32-system-coding-system.

1999-03-15  Richard M. Stallman  <rms@gnu.org>

	* xterm.c (XTread_socket) <ConfigureNotify>:
	If cursor pos is outside the new frame size, mark cursor as off.

1999-03-14  Ken'ichi Handa  <handa@gnu.org>

	* xdisp.c (try_window_id): Initialize val.ovstring_chars_done to 0.

	* xterm.c (x_load_font): Trap X errors so that Emacs doesn't die
	by them.

1999-03-14  Richard M. Stallman  <rms@gnu.org>

	* macros.c (Fexecute_kbd_macro): Initialize executing_macro_iterations
	at beginning.

1999-03-14  Jason Rumney  <jasonr@altavista.net>

	* w32fns.c (w32_strict_fontnames): New variable.
	(Fx_create_frame): Formatting fix.
	(w32_load_system_font): Keep trying to load non-existent font
	if w32_strict_fontnames is nil.  Formatting fix.
	(syms_of_w32fns): Add w32-strict-fontnames.

	* w32term.c (W32_TEXTOUT): Do not multiply nchars by charset_dim.
	(dumpglyphs): Formatting fixes.

1999-03-14  Geoff Voelker  <voelker@cs.washington.edu>

	* w32fns.c (w32_wnd_proc): Handle WM_GETMINMAXINFO message.

1999-03-10  Karl Heuer  <kwzh@gnu.org>

	* puresize.h (BASE_PURESIZE): Increase to 505000.

1999-03-09  Richard M. Stallman  <rms@gnu.org>

	* emacs.c (main) [CLASH_DETECTION]: Call init_filelock.

	* filelock.c (init_filelock): New function.

1999-03-09  Dave Love  <fx@gnu.org>

	* fileio.c (Ffile_directory_p): Doc fix.

1999-03-05  Richard M. Stallman  <rms@gnu.org>

	* coding.c (setup_coding_system): Check for CODING_SYSTEM = nil.

1999-03-08  Richard M. Stallman  <rms@gnu.org>

	* filelock.c (get_boot_time): Reduce scope of #ifdef BOOT_TIME
	to only the part that uses get_boot_time_1.

1999-03-07  Dave Love  <fx@gnu.org>

	* fileio.c (Finsert_file_contents): Use xfree.

1999-03-06  Kenichi Handa  <handa@etl.go.jp>

	* Makefile.in (callproc.o, coding.o, fileio.o, msdos.o, process.o)
	(term.o, xselect.o): Depend on ccl.h.

1999-03-05  Geoff Voelker  <voelker@cs.washington.edu>

	* makefile.nt: Remove common multiple file compilation commands.

1999-03-04  Takeshi YAMADA  <yamada@cslab.kecl.ntt.co.jp>

	* fns.c (Fbase64_encode_string): Allocate sufficient memory for
	newlines added when the arg NO-LINE-BREAK is nil.

1999-03-04  Karl Heuer  <kwzh@gnu.org>

	* search.c (Fstring_match, Fposix_string_match): Doc fix.

	* buffer.c (syms_of_buffer): Doc fix for case-fold-search.

1999-03-04  Dave Love  <fx@gnu.org>

	* term.c (term_init): Use xmalloc, not malloc.

	* callproc.c (Fcall_process): Use xmalloc, xfree.

1999-03-03  Andreas Schwab  <schwab@gnu.org>

	* eval.c (Fdefconst): Doc fix.

1999-03-01  Kenichi Handa  <handa@etl.go.jp>

	* coding.c: Comment for ISO 2022 encoding mechanism modified.

1999-03-01  Eli Zaretskii  <eliz@gnu.org>

	* w16select.c (get_clipboard_data): Always stop at the first null byte.

1999-02-28  Richard M. Stallman  <rms@gnu.org>

	* filelock.c (get_boot_time): Support FreeBSD way to read boot-time.

	* cmds.c (internal_self_insert): Calculate column properly
	in overwrite-of-tab case.

1999-02-27  Andreas Schwab  <schwab@gnu.org>

	* emacs.c (main) [DOUG_LEA_MALLOC]: Don't use unsetenv, it calls
	malloc in glibc 2.1.

1999-02-26  Richard Stallman  <rms@gnu.org>

	* Makefile.in: paths.h and paths.in renamed to epaths.h and epaths.in.

	* epaths.in: Renamed from paths.in.
	This avoids a conflict with a system header file paths.h on GNU/Linux.

	* callproc.c, lread.c, w32fns.c, xfns.c, xrdb.c:
	Use epaths.h istead of paths.h.

1999-02-26  Andreas Schwab  <schwab@gnu.org>

	* emacs.c (main) [DOUG_LEA_MALLOC]: Work around a bug in glibc's
	malloc.

1999-02-25  Dave Love  <fx@gnu.org>

	* buffer.c (syms_of_buffer): Doc fix for enable-multibyte-characters.

1999-02-25  Richard Stallman  <rms@gnu.org>

	* filelock.c (get_boot_time): Use WTMP_FILE for file name.
	(WTMP_FILE): Default definition in case not defined.
	(get_boot_time_1): Test that file exists before trying to read it.

1999-02-25  Ken'ichi Handa  <handa@gnu.org>

	* keymap.c (push_key_description): If enable-multibyte-characters
	is nil and C is single byte, push C as is.

1999-02-24  Kenichi Handa  <handa@etl.go.jp>

	* keymap.c (push_key_description): If enable-multibyte-characters
	is non-nil, try to convert unibyte character to multibyte.  For
	invalid multibyte character, show all bits by octal form.
	(Fsingle_key_description): Check the validity of charset for a
	generic character.

1999-02-23  Richard M. Stallman  <rms@gnu.org>

	* fileio.c (Ffile_regular_p): Undo previous change.

	* eval.c (Fdefconst): Doc fix.

	* filelock.c (get_boot_time): Don't use BUFSIZ.

1999-02-22  Andrew Innes  <andrewi@gnu.org>

	* makefile.nt ($(BLD)\w32bdf.obj): Add missing continuation character.
	(EXTRA_LINK): Do version test with strings.

1999-02-22  Andreas Schwab  <schwab@gnu.org>

	* fns.c (Fbase64_encode_string): Fix last change.

	* termhooks.h (event_kind): Add user_signal.

	* keyboard.c (Qusr1_signal, Qusr2_signal): New variables.
	(syms_of_keyboard): Initialize them.
	(lispy_user_signals): New variable.
	(make_lispy_event): Handle user_signal event type.

	* emacs.c: Don't define Qusr1_signal and Qusr2_signal.
	(syms_of_emacs): Don't initialize them.
	(handle_USR1_signal, handle_USR2_signal): Set event type to
	user_signal instead of non_ascii_keystroke, and use plain integers
	as code instead of Lisp symbols.

1999-02-21  Eli Zaretskii  <eliz@delysid.gnu.org>

	* fileio.c (lstat) [!S_ISLNK]: Use stat instead of lstat.

1999-02-21  Richard Stallman  <rms@gnu.org>

	* filelock.c (get_boot_time_1): Put this in #ifdef BOOT_TIME.

	* print.c (print_error_message): Don't crash if (cdr data)
	is not a list.

1999-02-21  Eli Zaretskii  <eliz@gnu.org>

	* fileio.c (lstat) [!S_ISLNK]: Use stat instead of lstat.

1999-02-20  Andrew Innes  <andrewi@gnu.org>

	* vm-limit.c (memory_warnings) [WINDOWSNT]: Reset lim_data on each
	run, since size can vary from run to run.

	* makefile.nt (EXTRA_LINK, LINK_FLAGS): Ensure base relocation
	data is included, to enable profiling.
	($(EMACS)): Map file not needed for emacs.exe.

	* emacs.c (main) [!SYSTEM_MALLOC]: Call realloc and free as well
	as malloc before calling uninterrupt_malloc, for consistency.
	This also enables profiling to work on WINDOWSNT.

1999-02-18  Richard Stallman  <rms@gnu.org>

	* Makefile.in (emacs.o): Depend on termhooks.h.
	(filelock.o): Depend on systime.h.

1999-02-18  Ken'ichi Handa  <handa@gnu.org>

	* coding.c (Fdecode_sjis_char): Use %x for formatting error message.
	(Fdecode_big5_char): Likewise.

1999-02-17  Richard Stallman  <rms@gnu.org>

	* insdel.c (adjust_markers_for_replace): When doing an
	insertion (replacing a region of zero length), handle markers
	at the insertion point properly.

1999-02-17  Andrew Innes  <andrewi@gnu.org>

	* w32fns.c (Vw32_quit_key): New variable.
	(post_character_message): Use it.
	(syms_of_w32fns): DEFVAR it.

1999-02-16  MORIOKA Tomohiko  <morioka@jaist.ac.jp>

	* fns.c (Fbase64_encode_string): New optional argument `NO_LINE_BREAK'.

1999-02-16  Richard Stallman  <rms@gnu.org>

	* filelock.c (within_one_second): New function.
	(current_lock_owner): Use that.
	(get_boot_time): Use /proc/uptime if available.
	Otherwise, if nothing found in wtmp, try wtmp.1.gz and so on.
	(get_boot_time_1): New subroutine taken from get_boot_time.

1999-02-16  Richard Stallman  <rms@gnu.org>

	* emacs.c (Qusr1_signal, Qusr2_signal): New variables.
	(syms_of_emacs): Init and staticpro them.
	(handle_USR1_signal): Don't run any code, just queue up an event.
	(handle_USR2_signal): Likewise.

1999-02-16  Eli Zaretskii  <eliz@gnu.org>

	* dired.c (Ffile_attributes): If the file's size doesn't fit in
	an integer, return it as a float.  Doc string fixed.

1999-02-16  Richard Stallman  <rms@gnu.org>

	* emacs.c (Qusr1_signal, Qusr2_signal): New variables.
	(syms_of_emacs): Init and staticpro them.
	(handle_USR1_signal): Don't run any code, just queue up an event.
	(handle_USR2_signal): Likewise.

1999-02-15  Kenichi Handa  <handa@etl.go.jp>

	* coding.c (Fdecode_sjis_char, Fencode_sjis_char): Handle
	ASCII correctly.  Signal error on invalid characters.
	(Fdecode_big5_char, Fencode_big5_char): Likewise.

1999-02-15  Eli Zaretskii  <eliz@gnu.org>

	* w16select.c (get_clipboard_data): Work around a bug in Windows95
	DOS box which doubles the reported size of text in the clipboard.

1999-02-15  Kenichi Handa  <handa@etl.go.jp>

	* coding.c (decode_coding_iso2022): Don't set
	coding->composed_chars to 0 here.
	(setup_coding_system): Set coding->composed_chars to 0 here.

1999-02-10  Richard Stallman  <rms@gnu.org>

	* fileio.c (Ffile_regular_p): Use lstat.

1999-02-09  Richard Stallman  <rms@gnu.org>

	* unexelf.c (HAS_SBSS_SECTION): Define this in some cases.
	(unexec): Test this instead of specific systems.

	* m/macppc.h: New file.

1999-02-08  Dave Love  <fx@gnu.org>

	* fns.c (Fyes_or_no_p, Fy_or_n_p): Doc fix.

1999-02-08  Ken'ichi Handa  <handa@gnu.org>

	* coding.c (ccl_coding_driver): On encoding, coding->produced_char
	should be set to coding->produced.

1999-02-07  Paul Fisher  <rao@gnu.org>

	* fns.c (IS_BASE64_IGNORABLE, READ_QUADRUPLET_BYTE): New macros.
	(base64_decode_1): Use READ_QUADRUPLET_BYTE.

1999-02-07  Markus Rost  <markus.rost@mathematik.uni-regensburg.de>

	* editfns.c (Fformat): Doc fix.

1999-02-06  Richard Stallman  <rms@gnu.org>

	* process.c (syms_of_process): defsubr it.
	(Fprocess_running_child_p): New function.

1999-02-05  Andrew Innes  <andrewi@gnu.org>

	* w32term.c (construct_drag_n_drop): Call DraqQueryPoint before
	recording drop position.

1999-02-05  Ken'ichi Handa  <handa@gnu.org>

	* coding.c (encode_coding_iso2022): Before writing out an invalid
	code, reset graphic planes and registers if necessary.

	* term.c (encode_terminal_code): Fix previous change.

1999-02-04  Eli Zaretskii  <eliz@gnu.org>

	* w16select.c (last_clipboard_text, clipboard_storage_size): New
	static variables.
	(set_clipboard_data): Save a copy of the text we put into
	clipboard in last_clipboard_text.
	(get_clipboard_data): If the clipboard text is identical to what
	last_clipboard_text holds, pretend there's no data in the clipboard.

1999-02-03  Richard Stallman  <rms@gnu.org>

	* s/gnu.h (NLIST_STRUCT): Add #undef.

1999-02-03  Eli Zaretskii  <eliz@gnu.org>

	* w16select.c (Fw16_set_clipboard_data): When the text needs to be
	encoded, set its pointer and size as returned by encode_coding.

1999-02-02  Ken'ichi Handa  <handa@gnu.org>

	* fns.c (Fset_char_table_default): To handle the case that CH is
	an ASCII char, use SPLIT_CHAR instead of SPLIT_NON_ASCII_CHAR.

1999-02-02  Andrew Innes  <andrewi@gnu.org>

	* w32fns.c (syms_of_w32fns): Change default value of
	w32-mouse-move-interval to 0, so that the mouse wheel/rocker on
	some mice works properly.

1999-02-02  Eli Zaretskii  <eliz@gnu.org>

	* w16select.c (set_clipboard_data): Correctly null-terminate the
	string to be put into the Windows clipboard.  Use xbuf_addr.

1999-02-01  Richard Stallman  <rms@gnu.org>

	* buffer.c (Fset_buffer_multibyte): Error if buffer is indirect.

1999-01-31  Richard Stallman  <rms@gnu.org>

	* process.c (process_send_signal): If CURRENT_GROUP is `lambda'
	then don't send the signal if the shell owns the terminal.
	(Finterrupt_process): Doc change.

1999-01-31  Andrew Innes  <andrewi@gnu.org>

	* unexw32.c (ROUND_UP_DST_AND_ZERO): New macro.
	(copy_executable_and_dump_data): Use it to ensure alignment slop
	is zeroed.

1999-01-30  Andrew Innes  <andrewi@gnu.org>

	* w32.c (init_environment): Change argv[0] to contain the full
	path to Emacs.

	* emacs.c (main) [WINDOWSNT]: Pass argv to init_environment.

1999-01-29  Ken'ichi Handa  <handa@gnu.org>

	* xterm.c (x_new_fontset): For ASCII font, don't use the font name
	returned by x_new_font (the resolved one) but use the font name
	set in the fontset specification.
	(x_load_font): For the height of font, if normal ascent and
	descent value are larger than those in max_bounds field, use the
	former.

1999-01-28  Eli Zaretskii  <eliz@gnu.org>

	* xdisp.c (decode_mode_spec_coding): Fix previous change.

1999-01-27  Geoff Voelker  <voelker@cs.washington.edu>

	* makefile.nt: Use full path to temacs.exe when dumping.

1999-01-27  Jason Rumney  <jasonr@altavista.net>

	* w32fns.c (w32_load_system_font): Do not load unlisted fonts if
	list was reliable.
	(enum_fontex_cb1, enum_fontex_cb2): New functions.
	(w32_list_bdf_fonts): New parameter; max_names.  Callers updated.
	(w32_list_synthesized_fonts): New function.
	(w32_list_fonts): Use maxnames.  Use EnumFontFamiliesEx when
	available instead of EnumFontFamilies.  List synthesized fonts if
	Vw32_enable_italics is non-nil.

1999-01-27  Richard Stallman  <rms@gnu.org>

	* s/ptx4.h (SETUP_SLAVE_PTY): Use the ptem module if it exists.
	Don't complain if ttcompat does not exist.

	* w32fns.c (x_set_frame_parameters): gcpro as needed.

1999-01-27  Andrew Innes  <andrewi@gnu.org>

	* w32fns.c (w32_wnd_proc): Fix bug introduced by previous change;
	the lwindow, rwindow and apps keys could not be used as function
	keys, because they were being passed to TranslateMessage which
	ignores them.  Also, key was being changed to SPC.

	* makefile.nt: Do make version comparison as strings.

1999-01-27  Eli Zaretskii  <eliz@gnu.org>

	* coding.c (syms_of_coding): eol-mnemonic-* variables are now
	strings, not characters.

	* coding.h: Likewise.

	* xdisp.c (decode_mode_spec_coding): Display the EOL type as a
	string.

1999-01-26  Dave Love  <fx@gnu.org>

	* emacs.c (main): Up-date copyright.

1999-01-25  Dave Love  <fx@gnu.org>

	* coding.c (syms_of_coding): Doc fix for inhibit-eol-conversion.

1999-01-25  Andreas Schwab  <schwab@gnu.org>

	* eval.c (Fsignal): Move comment to avoid confusing make-docfile.

1999-01-23  Richard M. Stallman  <rms@borg.ai.mit.edu>

	* xfns.c (x_set_frame_parameters): gcpro as needed.

	* window.c (Fset_window_point): If WINDOW is selected but the
	current buffer is not its buffer, don't use Fgoto_char.

1999-01-22  Richard M. Stallman  <rms@gnu.org>

	* syntax.c (scan_sexps_forward): Delete duplicate code
	to set prev_from_syntax, above start of main loop.
	At startinstring, check syntax when checking for a match.

1999-01-22  Jason Rumney  <jasonr@altavista.net>

	* w32bdf.c: New file.
	* w32bdf.h: New file.
	* makefile.nt: Add w32bdf.c and w32bdf.h.

	* w32gui.h: Include w32bdf.h.
	(W32FontStruct) Add bdf element.

	* w32term.h (FONT_WIDTH, FONT_HEIGHT, FONT_BASE, FONT_MAX_WIDTH):
	Support BDF fonts.

	* w32term.c (W32_TEXTOUT): New macro.
	(dumpglyphs): Support BDF fonts.  Use W32_TEXTOUT macro.
	Simplify baseline calculation.  Detect SJIS by font, not glyph.
	Call SetTextAlign.
	(syms_of_w32term): Remove "jisx0212-sjis" from
	w32-charset-to-codepage-alist.
	Replace "ksc5601" with "ksc5601.1987" in w32-charset-to-codepage-alist.
	Add "ksc5601.1992' to w32-charset-to-codepage-alist.

	* w32fns.c (Vw32_bdf_filename_alist): New variable.
	(x_destroy_bitmap): Returns void not int.
	(x_set_border_pixel): Returns void.
	(w32_load_bdf_font): New function.
	(w32_load_system_font): New function, was w32_load_font.  List
	fonts before loading.  Explicitly set encoding for SJIS fonts.
	Set default_ascent to 0 as comment indicates.
	(w32_load_font): Call w32_load_system_font and w32_load_bdf_font.
	(w32_unload_font): Support BDF fonts.
	(w32_to_x_charset): Fix mappings to avoid wildcard mismatches.
	Autodetect whether to use koi8-r instead of iso8859-5.
	Associate "ksc5601.1987" with HANGUEL_CHARSET.
	Associate "ksc5601.1992" with JOHAB_CHARSET.
	(x_to_w32_charset): Make consistent with w32_to_x_charset.
	(w32_to_x_font): Add resolution.
	(x_to_w32_font): Use font resolution to calculate height if supplied.
	(w32_font_match): Handle wildcards anywhere within field.
	(enumfont_t): Remove unused head pointer.
	(enum_font_cb2): Dereference elfLogFont.
	(w32_list_bdf_fonts): New function.
	(w32_list_fonts): Use one_w32_display_info instead of insisting on
	valid frame.  Remove MessageBox.  Support BDF fonts.
	(Fw32_find_bdf_fonts): New function.
	(syms_of_w32fns): Add Vw32_bdf_filename_alist and
	Sw32_find_bdf_fonts.

1999-01-21  Andrew Innes  <andrewi@gnu.org>

	* makefile.nt (temacs): Use del to delete file, not rm.

1999-01-19  Richard Stallman  <rms@psilocin.ai.mit.edu>

	* keyboard.c (read_key_sequence): Fix previous change.

	* xterm.c (same_x_server): Detect treat ":0" and "unix:0"
	as the same.  Treat "myname:0" as the same as those two.

1999-01-19  Jason Rumney  <jasonr@altavista.net>

	* w32fns.c (x_to_w32_charset): Add iso8859-9.
	(w32_to_x_charset): Fix charset mappings.

	* w32term.c: Remove codepage macros.  Remove redundant BIG5 macros.
	(dumpglyphs): Move definitions out of block containing goto.
	Remove redundant code for BIG5.
	Use w32_codepage_for_font instead of
	w32_codepage_for_charset.  Add cast to int where float
	operation is assigned to int.
	(Vw32_charset_to_codepage_alist): New variable.
	(w32_codepage_for_charset): Removed.
	(w32_codepage_for_font): New function, replacing
	w32_codepage_for_charset.
	(syms_of_w32term): Add and initialize
	w32-charset-to-codepage-alist.

1999-01-17  Richard Stallman  <rms@psilocin.ai.mit.edu>

	* xselect.c (x_handle_selection_clear): Don't clear the
	selection if Emacs still owns it through a different display.

1999-01-17  Andrew Innes  <andrewi@gnu.org>

	* w32proc.c (w32_executable_type): Relax the check to identify
	cygwin-compiled applications, because the exact dll name varies
	with release.  Now only require the name to start "cygwin".

	* w32heap.h (ROUND_UP):
	(ROUND_DOWN): New macros.
	(need_to_recreate_heap): Renamed to using_dynamic_heap.
	(init_heap): New extern.
	(data_region_size):
	(recreate_heap):
	(read_in_bss):
	(map_in_heap):
	(round_to_next):
	(w32_fatal_reload_error):
	(get_section_size): Obsolete externs removed.

	* w32heap.c (RVA_TO_PTR): Redefine to convert RVA to address in
	current process.
	(round_to_next): Obsolete function removed.
	(preload_heap_section): New variable.
	(data_region_size): Obsolete variable removed.
	(allocate_heap): Modified to determine end of static heap section
	used during preload, and use that as initial base address for
	dynamic heap instead of hard-coded value.
	(sbrk): Remove call to allocate_heap; handled by init_heap.  Skip
	calls to commit or decommit pages when allocating from static heap
	section during preload.
	(recreate_heap): Obsolete function removed.
	(init_heap): New function to initialize internal sbrk heap
	variables.  Uses static heap section during preload, otherwise
	calls allocate_heap to reserve a heap region dynamically.
	(round_heap): Use ROUND_UP macro instead of round_to_next.

	* unexw32.c: Major rewrite to support cleaner method of dumping; a
	static "bss" section is used for heap space during preload, and
	bss data is now written to the proper section area when dumping.
	(need_to_recreate_heap): Renamed to using_dynamic_heap.
	(heap_index_in_executable): Obsolete variable removed.
	(data_section): New variable.
	(data_start_va): Renamed to data_start.
	(data_start_file): Obsolete variable removed.
	(bss_section):
	(extra_bss_size):
	(bss_section_static):
	(bss_start_static):
	(bss_size_static):
	(extra_bss_size_static):
	(heap_section): New variables.
	(_start): Remove code based on old unexec method.  Call init_heap
	to initialize sbrk heap.
	(close_file_data): Update size of file when closing, so that
	unexec doesn't have to work out exact size in advance.
	(get_bss_info_from_map_file):
	(get_section_size): Obsolete functions removed.
	(rva_to_section): Fix minor bug, and add a work-around for a bug
	in very old linkers.
	(offset_to_section):
	(relocate_offset): New functions.
	(OFFSET_TO_RVA):
	(RVA_TO_OFFSET):
	(RVA_TO_SECTION_OFFSET):
	(PTR_TO_RVA):
	(PTR_TO_OFFSET):
	(OFFSET_TO_PTR): New macros.
	(get_section_info): Modify to support new unexec method;
	determines address ranges in process that need dumping, and COFF
	sections where data will be dumped.  Allows for static and global
	bss data to be in separate ranges.  No longer relies on knowledge
	of section names.
	(copy_executable_and_dump_data_section): Renamed
	copy_executable_and_dump_data.  Completely rewritten to copy
	executable section by section, so that raw data areas can be
	expanded to hold dumped data as necessary.  Allows for bss data to
	be in same section as initialized data.  Reduces size of static
	heap section to that used during preload.
	(dump_bss_and_heap):
	(w32_fatal_reload_error):
	(read_in_bss):
	(map_in_heap): Obsolete functions removed.
	(unexec): Rounds off preload heap to nearest page rather than
	virtual allocation unit.  Modified to match other changes.

	* mem-limits.h (get_lim_data): Use reserved_heap_size instead of
	data_region_size.

	* makefile.nt (TEMACS_TMP): New macro.
	($(TEMACS)): Output to TEMACS_TMP from link, use post-link
	processor to add static heap section in support of new unexec.

	* lastfile.c: Include config.h to pick up data layout pragmas.
	[WINDOWSNT]: Remove explicit pragma.

1999-01-12  Kenichi Handa  <handa@etl.go.jp>

	* coding.c (Fdecode_sjis_char): Decode Japanese Katakana character
	correctly.
	(Fencode_sjis_char): Encode Japanese Katakana character correctly.

1999-01-11  Dave Love  <fx@gnu.org>

	* coding.c (syms_of_coding): Doc fix for inhibit-eol-conversion.

1999-01-11  Richard Stallman  <rms@psilocin.ai.mit.edu>

	* keyboard.c (read_key_sequence): In key-translation-map and
	function-key-map, handle symbol with array as fn def.
	In function-key-map, handle symbol with keymap as fn def,
	and autoloaded definitions.

	* puresize.h (BASE_PURESIZE): Increment to 500000.

	* print.c (Qtemp_buffer_setup_hook): New variable.
	(syms_of_print): Init and staticpro that.
	(temp_output_buffer_setup): Run Qtemp_buffer_setup_hook.

1999-01-11  Kenichi Handa  <handa@etl.go.jp>

	* insdel.c (del_range_1): Call signal_after_change.
	(del_range_byte): Likewise.
	(del_range_both): Likewise.
	(del_range_2): Don't call signal_after_change.

	* xdisp.c (message_dolog): Use insert_1_both to avoid running any
	Lisp code here.

1999-01-07  Richard Stallman  <rms@psilocin.ai.mit.edu>

	* eval.c (find_handler_clause): If SIG is nil (memory full error),
	never run the debugger, and don't bother checking the args
	to see whether the debugger should be run.

1999-01-06  Richard Stallman  <rms@psilocin.ai.mit.edu>

	* keyboard.c (read_key_sequence):
	Tell get_keyelt to look handle autoloads.
	Handle symbols defined as keymaps, and autoloaded keymaps.

1999-01-06  Kenichi Handa  <handa@etl.go.jp>

	* search.c (search_buffer): Fix previous change.

1999-01-06  Eli Zaretskii  <eliz@gnu.org>

	* w16select.c (set_clipboard_data): Terminate the text with a null
	character.  Don't allow to put binary data into the clipboard.
	Return zero in case of success, 1 or 2 otherwise.
	(get_clipboard_data): Only bail out if the null character is in
	the last 32-byte chunk of clipboard data.
	(Fw16_set_clipboard_data): Make ok and put_status be unsigned.  If
	they save binary data, print a message in the echo area saying the
	text was not put into the clipboard.

	* msdos.c (IT_write_glyphs): Move constant expression out of the loop.

1999-01-06  Andreas Schwab  <schwab@gnu.org>

	* systty.h [__GLIBC__ >= 2]: Check __FAVOR_BSD instead of
	_BSD_SOURCE, the latter is always defined.

1999-01-05  Richard Stallman  <rms@psilocin.ai.mit.edu>

	* fns.c (Frequire): Don't fail to unbind bindings.

1999-01-02  Richard Stallman  <rms@psilocin.ai.mit.edu>

	* emacs.c (main) [DOUG_LEA_MALLOC]: Don't call r_alloc_reinit.

	* charset.c (Ffind_charset_region): Fix doc typo.

1998-12-31  Eli Zaretskii  <eliz@mescaline.gnu.org>

	* msdos.c (IT_write_glyphs): Convert unibyte characters to
	multibyte in unibyte buffers only.

	* keymap.c (Fdefine_prefix_command): Accept a third argument NAME
	and pass it to Fmake_sparse_keymap.

1998-12-29  Richard Stallman  <rms@psilocin.ai.mit.edu>

	* alloc.c (MMAP_MAX_AREAS): New macro.
	(allocate_vectorlike, make_uninit_multibyte_string): Use that.
	(init_alloc_once): Use that.

	* s/gnu-linux.h [DOUG_LEA_MALLOC] (REL_ALLOC): Undefine it.

	* alloc.c (lisp_malloc, lisp_free): New functions.
	Use them instead of malloc, xmalloc, and xfree, for Lisp objects.
	Don't set allocating_for_lisp in the callers; let lisp_malloc do it.
	(n_interval_blocks, n_float_blocks): New variable.
	(n_cons_blocks, n_vectors, n_symbol_blocks): New variable.
	(n_marker_blocks, n_string_blocks): New variable.
	(init_intervals, make_interval): Set a count variable.
	Use lisp_malloc instead of setting allocating_for_lisp.
	(init_float, make_float, init_cons, Fcons): Likewise.
	(allocate_vectorlike, init_symbol, Fmake_symbol): Likewise.
	(init_marker, allocate_misc, init_strings): Likewise.
	(make_uninit_multibyte_string): Likewise.
	(gc_sweep, compact_strings): Decrement the count variables.

	* alloc.c (uninterrupt_malloc): Don't store Emacs's hooks
	into the old_..._hook variables.

1998-12-28  Richard Stallman  <rms@psilocin.ai.mit.edu>

	* keyboard.c: In each active map, for each menu bar item, use only
	the first submap.
	(menu_bar_one_keymap): Initialize menu_bar_one_keymap_changed_items.
	(menu_bar_item): Update and test menu_bar_one_keymap_changed_items.
	(syms_of_keyboard): Staticpro and init it.

	* xmenu.c (single_keymap_panes):

1998-12-28  Andrew Innes  <andrewi@delysid.gnu.org>

	* w32fns.c (w32_msg_pump): Ignore WM_NULL message posted to thread
	by complete_deferred_msg.
	(post_character_message): Cancel all deferred messages when
	quit_char is typed, in order to break out of potential deadlocks.
	(cancel_all_deferred_msgs): New function.
	(complete_deferred_msg): Don't abort if msg not found; may have
	been canceled.
	(Fw32_reconstruct_hot_key): Use pre-interned symbols.
	(Fw32_send_sys_command): Wait for system command to
	complete before returning.

	* w32term.c (x_iconify_frame): Wait for frame to be iconified; do
	not set async_iconified flag though.

	* w32proc.c (Vw32_start_process_inherit_error_mode): New variable.
	(create_child): Use it.
	(syms_of_ntproc): Defvar it.  Also fix docstrings for
	w32-start-process-share-console and w32-start-process-show-window.

	* unexw32.c (_start): Force system calls accessing unmounted
	devices to fail without prompting.

1998-12-26  Richard Stallman  <rms@psilocin.ai.mit.edu>

	* emacs.c (main): Call memory_warnings and uninterrupt_malloc
	even when starting the dumped Emacs.

	* keymap.c (Fsingle_key_description): Handle (control ?x) etc.
	(Fkey_description): Handle lists like vectors.

1998-12-21  Kenichi Handa  <handa@etl.go.jp>

	* callint.c (Fcall_interactively) <'C'>: Give Fread_char Qnil
	because of the change of the second argument of Fread_char.

	* charset.c (Fcharset_after): Check range.  If POS is out of
	range, return nil.

	* keyboard.c (read_char): Don't bind input-method-exit-on-first-char.

	* lread.c (Fread_char): Change the meaning of the second argument.
	(Fread_event): Likewise.
	(Fread_char_exclusive): Likewise.

	* print.c (printchar): Fix previous change.

	* process.c (read_process_output): Decide the multibyteness of
	string given to a process filter by a coding system used for
	decoding the process output.

1998-12-21  Eli Zaretskii  <eliz@mescaline.gnu.org>

	* xterm.c (dumpglyphs): Don't convert 7-bit ASCII characters via
	nonascii-translation-table.
	* msdos.c (IT_write_glyphs): Likewise.
	* fns.c (concat): Likewise.
	* charset.c (unibyte_char_to_multibyte): Likewise.
	* insdel.c (copy_text, count_size_as_multibyte): Likewise.

1998-12-21  Andreas Schwab  <schwab@delysid.gnu.org>

	* doc.c (Fdocumentation): Change the doc string for prefix
	commands to make it a complete sentence in one line.

1998-12-16  Petri Kaurinkoski  <Petri.Kaurinkoski@hut.fi>

	* s/irix6-5.h: New file.
	* s/irix6-0.h (IRIX6): Define this symbol.
	* s/usg5-4.h (TIOCSIGSEND): Don't define this if irix6.
	(bcopy, bcmp, bzero): Likewise.
	* m/iris4d.h (LIBS_MACHINE): Leave this blank if irix6.5.
	(C_SWITCH_MACHINE): New value for irix6.5.

1998-12-15  Richard Stallman  <rms@gnu.org>

	* fns.c (Fbase64_decode_region, Fbase64_decode_string):
	Do free malloc'd memory even in case of failure.  Use xfree, not free.
	(Fbase64_encode_region, Fbase64_encode_string): Use xfree, not free.
	(base64_decode_1): Don't fail for short lines.

	* print.c (printchar): Outputting multibyte characters
	to echo area always makes it multibyte.

	* search.c (search_buffer): Don't use Boyer-Moore
	to search for an invalid multibyte code.
	In unibyte case, no need to check whether there are translations
	in more than one charset; just set charset_base to 0.

1998-12-15  Ken'ichi Handa  <handa@delysid.gnu.org>

	* print.c (printchar): Cancel previous change.

1998-12-15  Kenichi Handa  <handa@etl.go.jp>

	* callproc.c: Include "ccl.h".
	(Fcall_process): Doc-string modified.  Set CODING_MODE_LAST_BLOCK
	bit in argument_coding.mode to tell encoding procedure to flush
	data.  While encoding arguments, if argument_coding uses CCL
	program, initialize it again after encoding.
	(Fcall_process_region): Doc-string modified.  Handle the case that
	NARGS is 3.

	* ccl.c (CCL_SUCCESS): Don't set ccl->ic.
	(ccl_driver) <CCL_End>: Pretend that all source text is consumed.
	Set `ic' to the head of this command.
	(ccl_driver) <CCL_ReadMultibyteChar2>: Return a single byte 8-bit
	code for an invalid code.
	(setup_ccl_program): If the arg VEC is nil, skip setting ups
	based on VEC.

	* charset.c (Qunknown): New variable.
	(init_charset_once): Intern and staticpro Qunknown.  Initialize
	all elements of Vcharset_symbol_table to Qunknown.
	(find_charset_in_str): New arg MULTIBYTE.  If it is zero, check
	unibyte characters only.  For an invalid composition sequence, set
	CHARSETS[1] to 1.
	(Ffind_charset_region): Call find_charset_in_str with an
	appropriate MULTIBYTE arg.  If undefined charsets are found,
	include `unknown' is the return value.
	(Ffind_charset_string): Likewise.
	(Fsplit_char): If CHAR is invalid, return `(unknown CHAR)'.
	(str_cmpchar_id): Max composite character code should be less than
	GENERIC_COMPOSITION_CHAR.

	* charset.h (find_charset_in_str): Update declaration.

	* coding.c (DECODE_DESIGNATION): Jump to label_invalid_code if
	final_char is invalid.
	(decode_coding): If coding->type is coding_type_ccl, call
	ccl_coding_driver even if SRC_BYTES is zero.
	(code_convert_region): Update `inserted' correctly after calling
	coding->post_read_conversion.  Even after the code converter
	consumed all source text, call it once more if it is
	coding_type_ccl to flush out data.

	* fileio.c (Finsert_file_contents): Even if INSERTED is zero, if
	CODING is handled by CCL program, call code_convert_region.

	* fns.c (string_char_to_byte): Handle invalid multibyte sequence
	correctly.
	(string_byte_to_char): Likewise.

	* print.c (printchar): When outputting a multibyte character to
	echo area, always set message_enable_multibyte to 1.

	* process.c (read_process_output): If NBYTES is zero and
	CODING_MODE_LAST_BLOCK bit is not yet set in coding->mode, set it
	and try decoding again.
	(Fprocess_send_eof): If the coding system of PROCESS
	requires flushing, call send_process with null-string at first.

	* w16select.c (Fw16_set_clipboard_data): Call find_charset_in_str
	with MULTIBYTE arg 0.
	* w32select.c (Fw32_set_clipboard_data): Likewise.
	* xselect.c (lisp_data_to_selection_data): Likewise.

1998-11-30  Richard Stallman  <rms@psilocin.ai.mit.edu>

	* search.c (Freplace_match): Set OPOINT clearly for the case
	where point is in the middle of the text to be replaced.

	* xdisp.c (display_text_line): When handling HPOS < 0 after loop,
	if compute_motion fails to advance at all, don't back it up.

1998-12-10  Geoff Voelker  <voelker@cs.washington.edu>

	* w32.c (w32_get_long_filename): Handle root dirs correctly.

	* s/ms-w32.h (LOCALTIME_CACHE): Define.

1998-12-09  Richard Stallman  <rms@gnu.org>

	* insdel.c (insert_from_buffer_1): Properly count the size
	of output from conversion to multibyte even when input
	is split across the gap.

1998-12-09  Karl Heuer  <kwzh@gnu.org>

	* keyboard.c: Doc fixes.

	* s/irix4-0.h (C_SWITCH_SYSTEM) [!__GNUC__]: Increase space.

1998-12-08  Andrew Innes  <andrewi@harlequin.co.uk>

	* w32select.c (Fw32_get_clipboard_data): Do not delete isolated CR
	characters, only convert CRLF to LF.

1998-12-08  Geoff Voelker  <voelker@cs.washington.edu>

	* makefile.nt: Do string comparison of _NMAKE_VER.

1998-12-06  Eli Zaretskii  <eliz@mescaline.gnu.org>

	* Makefile.in (msdos.o): Depend on termchar.h, charset.h,
	coding.h, and disptab.h.

	* msdos.c (Vdos_unsupported_char_glyph): New variable.
	(syms_of_msdos): DEFVAR_LISP it.
	(IT_insert_glyphs, IT_delete_glyphs): New functions which abort Emacs.
	(internal_terminal_init): Set up insert_glyphs_hook and
	delete_glyphs_hook to call them.  Explicitly set char_ins_del_ok to 0.
	(unibyte_display_via_language_environment): New variable.
	(syms_of_msdos): Devfar it.
	(IT_write_glyphs): Honor glyph aliasing via Vglyph_table.
	Encode the character codes of the glyphs according to the
	terminal_coding in effect.

1998-12-04  Andreas Schwab  <schwab@delysid.gnu.org>

	* fns.c (Fstring_as_unibyte): Doc fix.

1998-12-03  Andreas Schwab  <schwab@delysid.gnu.org>

	* charset.h: Declare char_valid_p.

1998-12-03  Eli Zaretskii  <eliz@mescaline.gnu.org>

	* dosfns.c (dos_cleanup): Flush and fsync the termscript stream.

	* msdos.c (init_environment): Record the time we started up.
	(IT_reset_terminal_modes): Don't restore the screen if we exit too
	fast after startup (aka crash).

1998-12-02  Geoff Voelker  <voelker@cs.washington.edu>

	* w32.c (check_windows_init_file): Use decode_env_path when
	using EMACSLOADPATH.

1998-12-02  Jason Rumney  <jasonr@altavista.net>

	* w32term.c (dumpglyphs): Use unsigned char arrays.
	Use FONT_MAX_WIDTH to detect and fudge proportional fonts
	for various languages.
	Compensate for fonts that have underhangs (e.g., Thai).

	* w32term.h (FONT_MAX_WIDTH): New macro.

1998-12-02  Andrew Innes  <andrewi@harlequin.co.uk>

	* keyboard.c (Qlanguage_change): New variable.
	(syms_of_keyboard): Init it.
	(kbd_buffer_get_event) [WINDOWSNT]: Generate language-change events.
	(lispy_function_keys) [HAVE_NTGUI]: Remove names for modifier
	keys; add name for Escape key; extend to 256 elements.
	(parse_modifiers): Make non-static.

	* keyboard.h (parse_modifiers): Declare prototype.

	* termhooks.h (event_kind) [WINDOWSNT]: Define language_change_event.

	* w32fns.c (w32_last_error): Fix cut+paste error.
	(Vw32_phantom_key_code): New variable.
	(Qhyper, Qsuper, Qmeta, Qalt, Qctrl, Qcontrol, Qshift): New variables.
	(syms_of_w32fns): Init and register them.
	(reset_modifiers): Use a more precise test for whether Emacs has
	keyboard focus.  Synchronize state of all keys that can be used as
	modifiers, to overcome problems arising from hot-keys.
	(w32_key_to_modifier): Be careful not to call intern() to avoid
	requiring thread synchronization.
	(w32_msg_pump): Handle new WM_EMACS_TOGGLE_LOCK_KEY message.
	(w32_wnd_proc): Ensure lock key indicator lights are updated
	promptly on Windows 9x, by passing key events on to the system.
	(w32_wnd_proc): Use Vw32_phantom_key_code to stop system
	responding to Windows key events when not wanted.
	(w32_wnd_proc): Undo the mapping of Ctrl-Pause into cancel and
	Ctrl-NumLock into pause by the system.
	(w32_wnd_proc): Don't translate key combinations containing any
	modifiers other than shift (and capslock).
	(w32_wnd_proc): Reset modifier key states when receiving focus (we
	can't determine the key states until we have keyboard focus).
	(Fw32_toggle_lock_key): New function.
	(syms_of_w32fns): Defsubr it.

	* w32inevt.c (key_event): Use Vw32_phantom_key_code.  Undo the
	mapping of Ctrl-Pause into cancel, and Ctrl-NumLock into pause.
	(w32_console_toggle_lock_key): New function.

	* w32term.h (WM_EMACS_TOGGLE_LOCK_KEY): New define.

1998-11-30  Richard Stallman  <rms@psilocin.ai.mit.edu>

	* search.c (Freplace_match): Set OPOINT clearly for the case
	where point is in the middle of the text to be replaced.

	* xdisp.c (display_text_line): When handling HPOS < 0 after loop,
	if compute_motion fails to advance at all, don't back it up.

1998-11-28  Richard Stallman  <rms@psilocin.ai.mit.edu>

	* xfns.c (Qouter_window_id): New variable.
	(syms_of_xfns): Initialize it.
	(x_report_frame_params): Set up outer-window-id parameter.

	* keymap.c (Fsingle_key_description): Fix previous change.

1998-11-26  Ken'ichi Handa  <handa@delysid.gnu.org>

	* lisp.h (Frequire): Update declaration.

1998-11-26  Kenichi Handa  <handa@etl.go.jp>

	* ccl.c (ccl_driver) <CCL_TranslateCharacter>: Don't suppress MSB
	if the charset is ascii.
	(ccl_driver) <CCL_TranslateCharacterConstTbl>: Likewise.

	* charset.c (non_ascii_char_to_string): If C has modifier bits,
	make an appropriate one byte string.
	(char_bytes): Handle the case that C is a single byte char or has
	modifier bits.

	* charset.h (CHAR_BYTES): If C has modifier bits, return 1.

	* cmds.c (internal_self_insert): If C has modifier bits, insert
	appropriate one byte char.

1998-11-25  Richard Stallman  <rms@psilocin.ai.mit.edu>

	* fns.c (Fstring_as_unibyte, Fstring_as_multibyte):
	Clear text properties in the new string.

1998-11-24  Felix Lee  <flee@cygnus.com>

	* process.c (read_process_output): Call signal_after_change.

1998-11-24  Richard Stallman  <rms@psilocin.ai.mit.edu>

	* buffer.c (syms_of_buffer): Doc fix.

	* keyboard.c (syms_of_keyboard): Doc fix.

1998-11-22  Richard Stallman  <rms@psilocin.ai.mit.edu>

	* frame.c (Fset_mouse_position): Doc fix.

1998-11-20  Richard Stallman  <rms@psilocin.ai.mit.edu>

	* keymap.c (Fmake_keymap): Doc fix.

1998-11-17  Kenichi Handa  <handa@etl.go.jp>

	* category.c (word_boundary_p): If C1 or C2 are composite
	characters, test their first components.

1998-11-16  Richard Stallman  <rms@sucrose.ai.mit.edu>

	* window.c (temp_output_buffer_show): Around temp-buffer-show-hook,
	don't do save-excursion, just restore selected window.

	* window.c (window_loop): For UNSHOW_BUFFER,
	always do consider minibuffer windows.

1998-11-16  Kenichi Handa  <handa@etl.go.jp>

	* charset.h (SINGLE_BYTE_CHAR_P): Check if C is negative or not.

	* charset.c (non_ascii_char_to_string): If C is negative, signal error.

	* lisp.h (CHAR_TABLE_REF): Check if IDX is negative or not.

	* s/bsdos4.h: New file.

1998-11-16  Kenichi Handa  <handa@etl.go.jp>

	* Makefile.in (abbrev.o): Depend on charset.h.
	(bytecode.o): Depend on charset.h.

	* bytecode.c: Include charset.h.

	* abbrev.c: Include charset.h.

	* syntax.h (SYNTAX_ENTRY_INT): For a composite character, check
	the first component.

1998-11-13  Ehud Karni  <ehud@unix.simonwiesel.co.il>

	* m/aviion-intel.h (LIBS_MACHINE): Delete redundant definition.

1998-11-11  Richard Stallman  <rms@gnu.org>

	* xterm.c (XTread_socket): Fix previous change in case F == 0.

	* s/dgux5-4-3.h (BSD_PGRPS): Add #undef.

	* s/dgux4.h (BROKEN_FIONREAD): #undef commented out.
	(INTERRUPT_INPUT): #define commented out.

	* m/aviion-intel.h: New file.

1998-11-11  Eli Zaretskii  <eliz@delysid.gnu.org>

	* fns.c (MAX_ALLOCA): New macro.
	(Fbase64_encode_region, Fbase64_encode_string)
	(Fbase64_decode_region, Fbase64_decode_string): Don't allocate
	more than MAX_ALLOCA bytes with alloca; otherwise use xmalloc.

1998-11-11  Ken'ichi Handa  <handa@delysid.gnu.org>

	* insdel.c (byte_combining_error): Error message improved.

	* charset.c (char_valid_p): Handle a composite character correctly.

1998-11-11  Kenichi Handa  <handa@etl.go.jp>

	* charset.c (str_cmpchar_id): Check the byte sequence for
	composition more rigidly.
	(Fcompose_string): Allow DEL to be composed.  Signal error if STR
	contains an invalid multibyte sequence.

	* xterm.c (x_list_fonts): Don't change the value of maxnames.

1998-11-10  Andrew Innes  <andrewi@harlequin.co.uk>

	* w32term.h (struct w32_display_info): New element faked_key.
	(WM_EMACS_SETKEYBOARDLAYOUT):
	(WM_EMACS_REGISTER_HOT_KEY):
	(WM_EMACS_UNREGISTER_HOT_KEY): New message definitions.
	(LEFT_WIN_PRESSED):
	(RIGHT_WIN_PRESSED):
	(APPS_PRESSED): New console keyboard modifier flags.

	* w32term.c (convert_to_key_event): Removed.
	(is_dead_key): Copied to w32fns.c.
	(w32_read_socket): Generate language_change_event.  Modify to work
	with keyboard handling changes in w32_wnd_proc.

	* w32proc.c (sys_kill): Set extended key flag when faking
	Ctrl-Break keystrokes.
	(Fw32_get_locale_info): Allow LONGFORM parameter to specify an
	arbitrary locale property using a numerical index.
	(Vw32_valid_codepages): New variable.
	(enum_codepage_fn):
	(Fw32_get_valid_codepages):
	(Fw32_get_console_codepage):
	(Fw32_set_console_codepage):
	(Fw32_get_console_output_codepage):
	(Fw32_set_console_output_codepage):
	(Fw32_get_codepage_charset):
	(Fw32_get_valid_keyboard_layouts):
	(Fw32_get_keyboard_layout):
	(Fw32_set_keyboard_layout): New functions, exposing Windows locale
	handling functions.
	(syms_of_ntproc): Register them.

	* w32inevt.c: Include w32term.h and w32heap.h.
	(map_keypad_keys):
	(Vw32_enable_caps_lock):
	(Vw32_enable_num_lock):
	(Vw32_pass_lwindow_to_system):
	(Vw32_pass_rwindow_to_system):
	(Vw32_lwindow_modifier):
	(Vw32_rwindow_modifier):
	(Vw32_apps_modifier):
	(Vw32_scroll_lock_modifier):
	(w32_key_to_modifier): Add externs.
	(w32_kbd_mods_to_emacs): Recognize Windows keys, Apps key, and
	Scroll Lock as potential modifiers; exclude numpad keys from
	effect by CapsLock; act on Vw32_enable_caps_lock; remove obsolete
	code.
	(is_dead_key): Copy from w32fns.c.
	(w32_kbd_patch_key): Comment attempt to improve handling of
	dead-keys, and system bug relating to same on Windows NT.  Work
	around the bug by calling ToUnicode and then converting to the
	correct codepage.
	(map_virt_key): Removed obsolete variable.
	(lispy_function_keys): Add extern.
	(key_event): Major rework of keyboard input handling: optionally
	recognize Windows keys and Apps key as modifiers; optionally treat
	NumLock, CapsLock and ScrollLock as function keys; let system
	translate keystrokes to characters to avoid system bugs relating
	to dead-key handling; preserve shift distinction for control
	characters.  Remove some obsolete code.

	* makefile.nt ($(BLD)\w32inevt.obj): Add dependencies on w32term.h
	and w32heap.h.

	* w32fns.c (Vw32_pass_optional_keys_to_system): Variable removed.
	(Vw32_pass_lwindow_to_system):
	(Vw32_pass_rwindow_to_system):
	(Vw32_lwindow_modifier):
	(Vw32_rwindow_modifier):
	(Vw32_apps_modifier):
	(Vw32_enable_num_lock):
	(Vw32_enable_caps_lock):
	(Vw32_scroll_lock_modifier): New variables.
	(modifier_set): Return toggle state for Scroll Lock.
	(w32_key_to_modifier): New function.  Returns chosen modifier bit
	for given key.
	(w32_get_modifiers): Returns modifier flags for
	non-keyboard input events.
	(construct_console_modifiers): Renamed from construct_modifiers;
	recognize Windows and Apps keys as modifiers.
	(w32_get_key_modifiers): New function.  Returns modifier flags for
	keyboard input events.
	(map_keypad_keys): Make non-static.  Use second arg as extended
	flag.
	(w32_grabbed_keys): New variable.
	(HOTKEY, HOTKEY_ID, HOTKEY_VK_CODE, HOTKEY_MODIFIERS): New macros.
	(register_hot_keys):
	(unregister_hot_keys):
	(lookup_vk_code):
	(w32_parse_hot_key):
	(Fw32_register_hot_key):
	(Fw32_unregister_hot_key):
	(Fw32_registered_hot_keys):
	(Fw32_reconstruct_hot_key): New functions to support hotkeys.
	(post_character_message): New function.
	(w32_msg_pump): Handle new messages for using hotkeys and changing
	keyboard layout/language.
	(w32_wnd_proc): Major rework of keyboard input handling:
	optionally recognize Windows keys and Apps key as modifiers;
	optionally treat NumLock, CapsLock and ScrollLock as function
	keys; let system translate keystrokes to characters to avoid
	system bugs relating to dead-key handling; preserve shift
	distinction for control characters; forward keyboard
	layout/language changes to lisp; detect and convert hot-key events
	to normal keystrokes.
	(syms_of_w32fns): Register new functions and variables.
	(w32_last_error): New function for use in debugging.

1998-11-10  Kenichi Handa  <handa@etl.go.jp>

	* category.h (CATEGORY_SET): Adjusted for the change of
	cmpchar_component.
	(CATEGORY_SET): Likewise.

	* charset.c (cmpchar_component): New arg NOERROR.  Check
	composition char ID more strictly.
	(Fcmpchar_component): Call cmpchar_component with NOERROR arg zero.
	(Fcmpchar_cmp_rule): If CHARACTER should be composed relatively,
	return 255.
	(Fcompose_string): Signal error if STR contains a rule-based
	composition character.

	* charset.h (cmpchar_component): Proto-type adjusted.

1998-11-09  Kenichi Handa  <handa@etl.go.jp>

	* charset.c (string_to_non_ascii_char): Return correct length for
	a charset of dimension 2 and composition character.

1998-11-08  Richard Stallman  <rms@sucrose.ai.mit.edu>

	* keymap.c (Fsingle_key_description): Handle generic characters.

	* process.c (Fprocess_status): Doc fix.

1998-11-06  Ken'ichi Handa  <handa@delysid.gnu.org>

	* charset.c (init_charset_once): Fix previous change.

1998-11-06  Kenichi Handa  <handa@etl.go.jp>

	* charset.c (string_to_non_ascii_char): Fix previous change.
	(char_valid_p): Check the validity of CHARSET by CHARSET_DEFINED_P.

	* charset.h (SPLIT_NON_ASCII_CHAR): Check dimension of an invalid
	character correctly.
	(STRING_CHAR): Handle an invalid character correctly.

1998-11-05  Kenichi Handa  <handa@etl.go.jp>

	* charset.c (string_to_non_ascii_char): Fix previous change.

	* charset.h (MAKE_NON_ASCII_CHAR): Check validity of CHARSET.

	* editfns.c (Fstring_to_char): Don't return a multibyte character
	if STRING is a unibyte string.

	* indent.c (MULTIBYTE_BYTES_WIDTH): Check validity of a multibyte
	character.

	* xdisp.c (display_text_line): Check validity of a multibyte character.
	(display_string): Likewise.  Handle an invalid character correctly.

1998-11-05  Karl Heuer  <kwzh@gnu.org>

	* insdel.c (Fcombine_after_change_execute): Return nil, not junk.
	If nothing to do, return immediately.
	(syms_of_insdel): Initialize combine_after_change_buffer.

1998-11-05  Richard Stallman  <rms@gnu.org>

	* xterm.c (XTread_socket): ButtonPress clears f->mouse_moved.

1998-11-04  Geoff Voelker  <voelker@cs.washington.edu>

	* w32term.c (w32_enable_unicode_output): Rename from
	w32_no_unicode_output.
	(w32_use_unicode_for_codepage, syms_of_w32term): Use new name
	and new semantics.

1998-11-04  Jason Rumney  <jasonr@altavista.net>

	* w32fns.c (w32_list_fonts): Report an error if a frame has not
	been created yet.

	* w32term.c (dumpglyphs): Use FRAME_FONT for w32_fill_area.

1998-11-04  Kenichi Handa  <handa@etl.go.jp>

	* charset.c (string_to_non_ascii_char): Change the check for the
	validity of multibyte form.
	(update_charset_table): Check validity of BYTES.  Don't set
	bytes_by_char_head here.
	(init_charset_once): Set bytes_by_char_head completely.

	* frame.c (do_switch_frame): Cancel previous change.

	* print.c (print_string): Check validity of a character.
	(print): Likewise.

	* sysdep.c [nec_ews_svr4]: Extern *_sobuf.

	* m/ews4800.h, s/ux4800.h: New files.

1998-11-03  Theodore Jump  <tjump@tertius.com>

	* makefile.nt: Compile multiple source files when possible.

	* w32faces.c (Qmouse_face): Replace definition with extern decl.

1998-11-03  Andrew Innes  <andrewi@delysid.gnu.org>

	* w32.c (stat): GetFileInformationByHandle can legitimately fail,
	so don't rely on it succeeding.

	* w32fns.c (x_to_w32_font): Specify DEFAULT_CHARSET in the w32
	LOGFONT struct if x font doesn't specify the charset.
	(x_to_w32_charset): Change >= to == when testing results of
	stricmp.

1998-11-02  Richard Stallman  <rms@sucrose.ai.mit.edu>

	* fns.c (Frequire): New arg NOERROR.

1998-11-02  Andrew Innes  <andrewi@harlequin.co.uk>

	* fileio.c (Fsubstitute_in_file_name) [DOS_NT]: Fix typo.

1998-10-31  Richard Stallman  <rms@psilocin.ai.mit.edu>

	* xfaces.c (Qmouse_face): Replace definition with extern decl.
	(syms_of_xfaces): Initialization deleted.

	* textprop.c (Qmouse_face): Variable definition moved here.
	(syms_of_textprop): Initialize it.

	* data.c (set_internal): For built-in maybe-local vars,
	when BINDFLAG is set, do not mark them as local.

1998-10-31  Ken'ichi Handa  <handa@delysid.gnu.org>

	* insdel.c (replace_range): Fix previous change.

1998-10-31  Kenichi Handa  <handa@etl.go.jp>

	* editfns.c (Fsubst_char_in_region): Fix previous change.
	(Ftranslate_region): Fix previous change.

	* fns.c (Fbase64_decode_region): Fix previous change.

	* frame.c (do_switch_frame): Update minibuf_window if necessary.

	* insdel.c (byte_combining_error): New function.
	(CHECK_BYTE_COMBINING_FOR_INSERT): Call byte_combining_error.
	(insert_from_string_1): Set *(GPT_ADDR) to 0 before calling
	CHECK_BYTE_COMBINING_FOR_INSERT.
	(insert_from_buffer_1): Likewise.
	(adjust_after_replace): Check the possibility of inhibitted byte
	combining correctly.
	(replace_range): Before signaling an error for inhibitted byte
	combining, recover the buffer in a safe state.
	(del_range_2): Check the possibility of inhibitted byte combining
	correctly.

1998-10-30  Andreas Schwab  <schwab@delysid.gnu.org>

	* xselect.c (Vselection_coding_system): Doc fix.

	* fns.c (Fbase64_encode_region): Use SET_PT_BOTH instead of SET_PT
	when we have both char and byte position.  Fix type clashes.

	* eval.c (Fsignal): Use a separate format string when passing
	error message string to fatal, in case it contains %'s.

	* editfns.c (Fchar_after): Fix type clashes.

	* charset.c (Fchar_bytes): Doc fix.
	(char_bytes): Fix returned value to match returned type.
	(syms_of_charset): Fix type clash in initialization of
	Vauto_fill_chars.

1998-10-29  Geoff Voelker  <voelker@cs.washington.edu>

	* w32console.c (initialize_w32_display): Use buffer coords
	instead of buffer size (which may be larger than the window).

	* fileio.c (init_fileio_once): New function.

	* emacs.c (main): Invoke init_fileio_once.

1998-10-28  Paul Eggert  <eggert@twinsun.com>

	* xterm.c (XTread_socket): Check the returned value of
	XmbLookupString more carefully.

1998-10-28  Kenichi Handa  <handa@etl.go.jp>

	* coding.c (DECODE_CHARACTER_ASCII): Check validity of inserted code.
	(DECODE_CHARACTER_DIMENSION1): Likewise.
	(DECODE_CHARACTER_DIMENSION2): Likewise.
	(decode_coding_sjis_big5): Check the 2nd byte of SJIS correctly.

	* editfns.c (Fsubst_char_in_region): Fix previous change.
	(Ftranslate_region): Fix previous change.

	* insdel.c (check_markers): Check if markers are at character boundary.
	(adjust_markers_for_insert): Fix previous change.
	(count_combining_before): Don't limit the check at BEGV.
	(count_combining_after): Don't limit the check at ZV.
	(CHECK_BYTE_COMBINING_FOR_INSERT): New macro.
	(insert_1_both): Call CHECK_BYTE_COMBINING_FOR_INSERT.
	(insert_from_string_1): Likewise.
	(insert_from_buffer_1): Likewise.
	(adjust_after_replace): Inhibit bytes combined across region
	boundary.  Update end_unchanged correctly.
	(replace_range): Call CHECK_BYTE_COMBINING_FOR_INSERT.  Update
	end_unchanged correctly.
	(del_range_2): Inhibit bytes combined across region boundary.
	Update end_unchanged correctly.

1998-10-27  Geoff Voelker  <voelker@cs.washington.edu>

	* w32.c (check_windows_init_file): Also look in load path specified
	in environment.

	* w32console.c (Fset_message_beep): Recognize 'silent.
	(w32_sys_ring_bell): Do nothing for the 'silent sound.

	* w32fns.c (w32_color_map_lookup): Remove duplicate definition.

	* w32select.c (Vnext_selection_coding_system): New variable.
	(syms_of_w32select): DEFVAR_LISP it.
	(Fw32_set_clipboard_data): Use Vnext_selection_coding_system if
	non-nil.  Always convert multibyte strings.
	(Fw32_get_clipboard_data): Use Vnext_selection_coding_system if
	non-nil.  Always convert a string that includes non-ASCII characters.

1998-10-27  Richard Stallman  <rms@psilocin.ai.mit.edu>

	* fns.c (Fbase64_decode_string): Doc fix.
	(Fbase64_decode_region, Fbase64_encode_string Fbase64_encode_region):
	Likewise.

1998-10-27  Dave Love  <fx@gnu.org>

	* fns.c (Fbase64_decode_region, Fbase64_encode_region): Fix
	newline in doc string.

1998-10-27  Kenichi Handa  <handa@etl.go.jp>

	* editfns.c (Fsubst_char_in_region): Correctly handle the case
	that byte combining before happens.
	(Ftranslate_region): Likewise.

	* insdel.c (adjust_after_replace): Correctly handle the case that
	both byte combining before and byte combining after happen.
	(replace_range): Likewise.

1998-10-26  Kenichi Handa  <handa@etl.go.jp>

	* category.c (syms_of_category): Doc-string modified.

	* coding.c (code_convert_region): Kill the work buffer created by
	pre-write-conversion.

1998-10-25  Jason Rumney  <jasonr@altavista.net>

	* emacs.c (main) [HAVE_NTGUI]: Invoke syms_of_fontset().

1998-10-23  Kenichi Handa  <handa@etl.go.jp>

	* coding.c (code_convert_region): While preserving the original
	point, pay attention to the byte combining problem.

	* fns.c (Fbase64_decode_region): Pay attention to the byte
	combining problem.

	* insdel.c (adjust_markers_for_insert): Adjust markers by taking
	combined_before_bytes and combined_after_bytes into account.
	(count_combining_after): Handle the case that LENGTH is zero.
	(adjust_after_replace): Record deletion at correct buffer
	position.  Handle the case that LEN is zero.
	(replace_range): Record deletion at correct buffer position.
	(del_range_2): Call adjust_makers_for_replace to adjust makers for
	combined bytes.

1998-10-21  Richard Stallman  <rms@psilocin.ai.mit.edu>

	* alloc.c (Fgarbage_collect): Block input around most of the function.

1998-10-21  Kenichi Handa  <handa@etl.go.jp>

	* coding.c (setup_coding_system): Fix setting up
	coding->spec.ccl.valid_codes for CCL based coding system.
	(code_convert_region): Set point to FROM before inserting the
	result of pre-write-function.  Preserve original point.
	(code_convert_string): If coding->type is coding_type_ccl, do
	conversion even if the length of conversion region is zero.

	* fontset.c: Include frame.h before fontset.h.
	(list_fonts_func): Fix prototype.

	* frame.c: Include frame.h before fontset.h.

	* xterm.c: Likewise.

1998-10-21  Jason Rumney  <jasonr@altavista.net>

	* x-list-font.c (Fx_list_fonts): Access frame parameters through
	general macros.   Don't call x_list_font directory, instead call a
	function set in list_fonts_func.

	* fontset.h (list_fonts_func): Fix prototype.

1998-10-20  Jason Rumney  <jasonr@altavista.net>

	* makefile.nt (w32fns.c): Add x-list-font.c to dependencies.

	* w32faces.c: Update comments referring to obsolete structs.
	(allocate_face, copy_face, face_eql, load_font)
	(Fpixmap_spec_p, free_frame_faces, new_computed_face)
	(frame_update_line_height, merge_faces, compute_base_face)
	(Fset_face_attribute_internal): Use fontset support based on xfaces.c.

	* w32fns.c (Vx_pixel_size_width): New global variable.
	(unibyte_display_via_language_environment): New global variable.
	(x_set_font): Add support for setting fontsets.
	(Fx_create_frame): Add check_w32().  Initialize fontsets.  Fix
	font names to match xlfd-tight-regexp.
	(w32_load_font): Rewrite based on x_load_font.
	(x_to_w32_charset, w32_to_x_charset): Add character sets.  Use
	`iso8859-1' rather than `ansi'.
	(w32_to_x_font): Remove `-' from font name.  Remove the `-' off the
	end.  Move charset into `charset registry' field.
	(enum_font_cb2): Check charsets match.  Include width in font list.
	(w32_list_fonts): Rewrite based on x_list_fonts.
	Moved from w32term.c to have access to enumfont_t struct.
	(Fx_list_fonts): w32 specific version eliminated.  Include
	`x-list-fonts.c'.
	(w32_get_font_info, w32_query_font, w32_find_ccl_program): New
	functions for fontset support - adapted from x_ equivalents.
	(syms_of_w32fns): New lisp variables initialized.  Function
	pointers for fontset.c set up.

	* w32term.c: Include fontset.h.  Define codepage macros.
	Add ENCODE_BIG5 macro from coding.c.
	(w32_no_unicode_output): New variable.
	(w32_codepage_for_charset, w32_use_unicode_for_codepage): New
	functions.
	(BUILD_WCHAR_T, BYTE1, BYTE2): New macros.
	(dumpglyphs): Rewrite based on xterm.c equivalent.
	(x_new_font): Use functionality provided in fontset.c.
	(x_new_fontset): New function based on the one in xterm.c.
	(syms_of_w32term): Add w32-no-unicode-output flag.

	* w32term.h: Remove redundant font_info struct definition.
	(Vx_pixel_size_width_font_regexp)
	(unibyte_display_via_language_environment): Declare variables.
	(w32_list_fonts, w32_get_font_info, w32_query_font, w32_load_font):
	Declare functions.
	(w32_output): New fields font_baseline and fontset.
	(FRAME_FONTSET, FRAME_W32_FONT_TABLE): New macros.

	* w32xfns.c: Include charset.h and fontset.h.

1998-10-20  Richard Stallman  <rms@psilocin.ai.mit.edu>

	* syntax.c (syms_of_syntax): Fix the setup of Qscan_error.

1998-10-20  Eli Zaretskii  <eliz@mescaline.gnu.org>

	* msdos.c (mouse_init): Reset the button press/release info of the
	mouse driver.
	(mouse_preempted): New variable.
	(dos_rawgetc): Don't generate mouse events if mouse is preempted.
	(XMenuActivate): Preempt the mouse during menu-handling loop.
	Release the current time slice while idling in the menu-handling
	loop.  Leave the loop only if the user pressed, then released the
	same button.  Discard all mouse events that are pending in the
	event queue before exiting.

1998-10-19  Richard Stallman  <rms@psilocin.ai.mit.edu>

	* editfns.c (Fformat): Increase buffer size for floating format.

1998-10-17  Kenichi Handa  <handa@etl.go.jp>

	* charset.c (Vauto_fill_chars, Qauto_fill_chars): New variables.
	(syms_of_charset): Staticpro and initialize Qauto_fill_chars.
	Declare auto-fill-chars as a Lisp variable and initialize it.

	* charset.h (Vauto_fill_chars): Extern it.

	* cmds.c (internal_self_insert): Check Vauto_fill_chars.

1998-10-16  Kenichi Handa  <handa@etl.go.jp>

	* casefiddle.c (casify_object): Use make_string instead of
	make_specified_string to cope with byte-combining situation.

	* coding.c (decode_coding_iso2022): Set coding->fake_multibyte to
	1 when encountered with a code of the range 0x80..0x9F.

1998-10-14  Eli Zaretskii  <eliz@mescaline.gnu.org>

	* callproc.c (Fcall_process) [MSDOS]: Use $TMPDIR instead of
	trying $TMP and $TEMP, since the former is always set in msdos.c.
	(Fcall_process_region) [DOS_NT]: When looking for a place to put
	the temporary files, check $TMPDIR as well.

1998-10-14  Richard Stallman  <rms@psilocin.ai.mit.edu>

	* process.c (exec_sentinel, read_process_output):
	Restore waiting_for_user_input_p after running Lisp code.

	* keyboard.c (parse_menu_item): Avoid initialization for Lisp_Object.
	(command_loop): Likewise.

1998-10-14  Kenichi HANDA  <handa@etl.go.jp>

	* data.c (Faset): Fix previous change.

	* fns.c (Ffillarray): Fix previous change.

	* insdel.c (adjust_markers_for_combining): This function deleted.
	(adjust_markers_for_replace): Correctly adjust marker positions.
	Don't record these adjustment because they were recorded already.
	(combine_bytes): Don't adjust markers here.

1998-10-13  Richard Stallman  <rms@psilocin.ai.mit.edu>

	* minibuf.c (Fdisplay_completion_list): Put on mouse-face properties.

1998-10-12  Richard Stallman  <rms@psilocin.ai.mit.edu>

	* keyboard.c (Fclear_this_command_keys): New function.
	(syms_of_keyboard): defsubr it.

	* macros.c (Fexecute_kbd_macro): Set real_this_command.

1998-10-12  Kenichi Handa  <handa@etl.go.jp>

	* ccl.c (CCL_DECODE_SJIS, CCL_ENCODE_SJIS): Swap the definitions.

	* charset.c (Fstring): Call make_string instead of
	make_string_from_bytes.
	(Ffind_charset_region): Include `composition' in the returned list
	if the region contains any composite characters.
	(Ffind_charset_string): Include `composition' in the returned list
	if the string contains any composite characters.
	(find_charset_in_str): Handle CMPCHARP arg correctly.

	* coding.c (shrink_decoding_region): If a charset other than ascii
	is initially designated to G0, don't shrink the region.
	(shrink_encoding_region): Likewise.

	* data.c (Faset): If ARRAY is a multibyte string, pay attention to
	byte-combining situation.

	* fns.c (clear_string_char_byte_cache): New function.
	(Ffillarray): Handle multibyte string correctly.

	* lisp.h (clear_string_char_byte_cache): Extern it.

	* xselect.c (lisp_data_to_selection_data): Call
	find_charset_in_str with CMPCHARP arg 0.
	* w16select.c (Fw16_set_clipboard_data): Likewise.
	* w32select.c (Fw32_set_clipboard_data): Likewise.

1998-10-11  Richard Stallman  <rms@psilocin.ai.mit.edu>

	* keyboard.c (parse_menu_item): For top level of menu bar,
	accept ordinary commands, and treat them just like a keymap.

1998-10-11  Richard Stallman  <rms@sucrose.ai.mit.edu>

	* xdisp.c (redisplay_window): Clear w->window_end_valid
	before running the window-scroll-functions hook, if appropriate.

1998-10-10  Richard Stallman  <rms@psilocin.ai.mit.edu>

	* data.c (Fstring_to_number): Don't recognize floating point
	if base is not 10.

	* window.c (window_loop): New alternative CHECK_ALL_WINDOWS.
	(check_all_windows): New function for debugging tests.
	(syms_of_window): Initialize it.

	* window.c (Qwindow_configuration_p): New variable.
	(Fwindow_configuration_frame): New function.
	(syms_of_window): defsubr it.
	(Fset_window_configuration): Return t if frame is live.
	Use Qwindow_configuration_p.

	* xfns.c (check_x_display_info): Don't use selected_frame
	if it is dead.

1998-10-09  Geoff Voelker  <voelker@cs.washington.edu>

	* w32fns.c (x_create_bitmap_from_file): Skip special files.

1998-10-08  Kenichi Handa  <handa@etl.go.jp>

	* buffer.h (inhibit_modification_hooks): Extern it.

	* buffer.c (inhibit_modification_hooks): New variable.
	(init_buffer_once): Initialize inhibit_modification_hooks to 0.

	* charset.c (invalid_character): Prepend `0' to octal
	representation.  Give error sufficient args.

	* coding.c (code_convert_region): Set inhibit_modification_hooks
	to 1 before calling Fset_text_properties.

	* insdel.c (signal_before_change): If inhibit_modification_hooks
	is nonzero, do nothing.
	(signal_after_change): Likewise.

1998-10-08  Emilio Lopes  <Emilio.Lopes@Physik.TU-Muenchen.DE>

	* process.c: Doc fixes.

1998-10-08  Richard Stallman  <rms@sucrose.ai.mit.edu>

	* syntax.c (scan_lists): Bring FROM back into range BEGV...ZV.

1998-10-07  Geoff Voelker  <voelker@cs.washington.edu>

	* w32.c (init_ntproc): Check for Windows init file.
	(term_ntproc): Do not check for it here.

1998-09-28  Kenichi Handa  <handa@etl.go.jp>

	* coding.c (check_composing_code): Fix previous change.  Now it
	always returns 0 or -1.
	(decode_coding_iso2022): Adjusted for the above change.
	(encode_coding_iso2022): When encoding the last block, flush out
	tailing garbage bytes.
	(setup_coding_system): Delete unnecessary code.
	(shrink_decoding_region): Check translation table.  If ASCII
	should be translated, give up shrinking.
	(shrink_encoding_region): Likewise.
	(SHRINK_CONVERSION_REGION_THRESHHOLD): New macro.
	(SHRINK_CONVERSION_REGION): New macro.
	(code_convert_region): Call SHRINK_CONVERSION_REGION.  Delete text
	properties here.
	(code_convert_region): In the case of encoding, always calculate
	correct character number.
	(code_convert_string): Call SHRINK_CONVERSION_REGION.
	(code_convert_region1): Don't delete text properties here.

	* insdel.c (adjust_after_replace): Don't delete text properties here.

	* term.c (encode_terminal_code): Handle raw 8-bit codes correctly.

1998-09-27  Richard Stallman  <rms@psilocin.ai.mit.edu>

	* emacs.c (sort_args): Fill extra space with NULL ptrs.

1998-09-26  Kenichi Handa  <handa@etl.go.jp>

	* coding.h (struct coding_system): New member composed_chars.

	* coding.c (check_composing_code): If the current composing
	sequence doesn't end properly, return -1.
	(DECODE_CHARACTER_ASCII): Update coding->composed_chars.
	(DECODE_CHARACTER_DIMENSION1): Likewise.
	(decode_coding_iso2022): Check validity of a composing sequence.
	(code_convert_string): If the length of text to be converted is
	shrunk to zero, don't perform code conversion.
	(shrink_decoding_region): Fix previous change.

	* editfns.c (Fformat): Check format control characters.

1998-09-25  Kenichi Handa  <handa@etl.go.jp>

	* coding.c (decode_eol): While decoding DOS-like eol, handle a
	single CR code correctly.
	(shrink_decoding_region) <CODING_CATEGORY_IDX_ISO_7 or
	CODING_CATEGORY_IDX_ISO_7_TIGHT>: Skip also 8-bit codes.

1998-09-23  Geoff Voelker  <voelker@cs.washington.edu>

	* w32fns.c (w32_color_map_lookup): New function.
	(x_to_w32_color): Approximate colors ending in numbers if necessary.

1998-09-22  Kenichi Handa  <handa@etl.go.jp>

	* ccl.c (ccl_driver): Report correct CCL program counter on error.

	* xmenu.c (single_submenu) [! HAVE_MULTILINGUAL_MENU]: Make
	strings unibyte.
	(xmenu_show) [! HAVE_MULTILINGUAL_MENU]: Likewise.

1998-09-22  Kenichi Handa  <handa@etl.go.jp>

	* callint.c (Fcall_interactively): Don't use input method when
	reading a character in the case of `c' code letter.

1998-09-21  Dave Love  <fx@gnu.org>

	* editfns.c (Fsave_restriction): Doc fix.

1998-09-21  Richard Stallman  <rms@gnu.org>

	* lread.c (build_load_history): Do add to Vload_history
	even when dumping Emacs.

1998-09-18  Kenichi Handa  <handa@etl.go.jp>

	* ccl.c (CCL_WRITE_CHAR): Don't use bcopy.
	(ccl_driver): If BUFFER-MAGNIFICATION of the CCL program is 0,
	cause error if the program is going to output some bytes.  When
	outputting a string to notify an error, check the case that
	DST_BYTES is zero.

	* coding.h (CODING_FINISH_INTERRUPT): New macro.

	* coding.c (ccl_coding_driver): If ccl_driver is interrupted by a
	user or the CCL program executed an invalid command, return
	CODING_FINISH_INTERRUPT.
	(code_convert_region): Pay attention to the converters return
	value CODING_FINISH_NORMAL and CODING_FINISH_INTERRUPT.

1998-09-16  Kenichi Handa  <handa@etl.go.jp>

	* coding.c (code_convert_region): Update beg_unchanged and
	end_unchanged after we delete the source text.

	* insdel.c (adjust_markers_for_replace): Don't adjust a byte
	position if it is FROM.
	(adjust_markers_for_combining): New function.
	(combine_bytes): Call adjust_markers_for_combining instead of
	adjust_markers_for_replace.
	(adjust_after_replace): Record deletion of combining after bytes
	with the correct position.
	(replace_range): Likewise.  Record the actual deletion after
	recording deletions of combining bytes.

	* xdisp.c (message_log_check_duplicate): Count byte length of the
	latest message correctly.

1998-09-12  Richard Stallman  <rms@gnu.org>

	* xdisp.c (redisplay_internal): Use TEMP_SET_PT_BOTH
	instead of SET_PT_BOTH.
	(try_window_id, display_text_line): Likewise.

1998-09-12  Karl Heuer  <kwzh@gnu.org>

	* data.c (Fmake_local_variable): Doc fix.

1998-09-10  Dave Love  <fx@gnu.org>

	* print.c (Fwith_output_to_temp_buffer): Doc fix.

1998-09-10  Richard Stallman  <rms@gnu.org>

	* s/irix6-0.h (TIOCSIGSEND): Add #undef.
	(bcopy, bcmp, bzero): Add #undef.

	* keyboard.c (command_loop_1): When switching to selected window's bfr,
	first exit if selected frame is dead (no live frames remain).
	(read_key_sequence): Likewise.

1998-09-10  Karl Heuer  <kwzh@gnu.org>

	* emacs.c (main): Mention --display and --eval in help.

1998-09-07  Paul Eggert  <eggert@twinsun.com>

	* editfns.c (emacs_memftime): New function.
	(Fformat_time_string): Use it to handle null bytes in formats
	correctly.

1998-09-08  Kenichi Handa  <handa@etl.go.jp>

	* charset.c (Ffind_charset_region): Optimization for unibyte buffer.
	(Ffind_charset_string): For unibyte string, return (ascii).

	* editfns.c (Fsubst_char_in_region): Call replace_range with the
	arg MARKERS 1.

	* insdel.c (adjust_after_replace): Don't add combining bytes to
	the args given to adjust_point.  Handle correctly the case that
	there are both before and after combining bytes.
	(replace_range): Likewise.

1998-09-07  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	* fns.c (base64_decode_1, base64_encode_1): New functions.
	(Fbase64_decode_string, Fbase64_encode_string): New functions.
	(Fbase64_decode_region, Fbase64_encode_region): New functions.

1998-09-07  Karl Heuer  <kwzh@gnu.org>

	* eval.c (error): After enlarging buffer, write to it, not to buf.

	* fns.c (Fwidget_put): Return VALUE instead of garbage.

1998-09-07  Kenichi Handa  <handa@etl.go.jp>

	* charset.h (STRING_CHAR_AND_LENGTH): Return correct value in
	ACTUAL_LEN even if LEN is too short to have a valid multibyte form.
	(STRING_CHAR_AND_CHAR_LENGTH): Likewise.

	* coding.c (ccl_coding_driver): Always calculate correct multibyte
	chars in produced byte sequence.
	(Ffind_operation_coding_system): Doc-string fixed.

	* insdel.c (count_combining_after): Check also preceding bytes at
	POS if all characters in STRING are not character head.

1998-09-06  Paul Eggert  <eggert@twinsun.com>

	* editfns.c (Fformat_time_string, Fdecode_time, Fcurrent_time_zone):
	Don't assume that localtime and gmtime return non-NULL.

1998-09-06  Lars Magne Ingebrigtsen  <larsi@gnus.org>

	* fns.c (Fbase64_decode_string, Fbase64_encode_string)
	(base64_decode_1, Fbase64_decode_region, Fbase64_encode_region):
	New functions.

1998-09-06  Richard Stallman  <rms@gnu.org>

	* editfns.c (Fformat): Detect incomplete format spec at string's end.

	* lread.c (Fload): Handle case where openp finds a magic file
	but it has no `load' handler or that handler calls `load'.
	If FOUND != FILE, find FOUND's handler even if inhibited for FILE.

1998-09-04  Dave Love  <fx@gnu.org>

	* buffer.c (enable-multibyte-characters): Doc fix.

1998-09-02  Geoff Voelker  <voelker@cs.washington.edu>

	* w32heap.c (allocate_heap): Define NTHEAP_PROBE_BASE by default.

1998-09-01  Kenichi Handa  <handa@etl.go.jp>

	* editfns.c (Ftranspose_regions): Use BYTE_POS_ADDR to get an
	address in buffer from byte-position.

1998-09-01  Eli Zaretskii  <eliz@delysid.gnu.org>

	* w16select.c (Vnext_selection_coding_system): New variable.
	(syms_of_win16select): DEFVAR_LISP it.  No need to staticpro
	Vselection_coding_system.
	(Fw16_set_clipboard_data): Always convert multibyte strings.  Use
	Vnext_selection_coding_system if non-nil.
	(Fw16_get_clipboard_data): Always convert a string that includes
	non-ASCII characters.  Use Vnext_selection_coding_system if
	non-nil.

1998-08-31  Andrew Innes  <andrewi@harlequin.co.uk>

	* w32fns.c (w32_wnd_proc): Always zero button_state when releasing
	mouse capture.

1998-08-31  Kenichi Handa  <handa@etl.go.jp>

	* xterm.c (x_load_font): If SIZE is 0, don't use a name
	x_list_font returns.

1998-08-31  Paul Eggert  <eggert@twinsun.com>

	* lread.c (read1): Don't assume that atof ("-0.0") yields +0.0.
	Handle leading '-' uniformly for zeros, infinities, and NaNs.

1998-08-31  Eli Zaretskii  <eliz@delysid.gnu.org>

	* msdos.c (IT_cmgoto): When tracking echo area messages with the
	cursor, save and restore previous cursor position in the
	minibuffer.

1998-08-31  Kenichi Handa  <handa@etl.go.jp>

	* charset.c (unibyte_char_to_multibyte):
	Vnonacii_translation_table will convert a 7-bit character.
	(multibyte_char_to_unibyte): Handle the case that
	Vnonacii_translation_table converts a multibyte character to a
	unibyte character of less than 128.
	(init_charset_once): Initialize nonascii_insert_offset and
	Vnonacii_translation_table.

	* coding.c (decode_coding): Even if SRC_BYTES is zero, try
	processing if CODING requires flushing.
	(encode_coding): Likewise.
	(code_convert_region): Likewise.
	(code_convert_string): Likewise.

	* fns.c (concat): If Vnonascii_translation_table is non-nil, try
	to convert a character less than 160 to multibyte.
	* insdel.c (copy_text): Likewise.
	(count_size_as_multibyte): Likewise.
	* xterm.c (dumpglyphs): Likewise.

1998-08-29  Paul Eggert  <eggert@twinsun.com>

	* data.c (arith_driver, float_arith_driver): Compute (- x) by
	using negation, not subtraction; this makes a difference with
	IEEE floating point arithmetic (and also if integer arithmetic
	is ones' complement or signed-magnitude!).

1998-08-29  Karl Heuer  <kwzh@gnu.org>

	* xfns.c (x_create_bitmap_from_file): Fail immediately if magic.

1998-08-28  Ken'ichi Handa  <handa@delysid.gnu.org>

	* charset.c (Fchar_bytes): Add \n\ in doc-string.

1998-08-28  Paul Eggert  <eggert@twinsun.com>

	* s/sol2-4.h (NOT_USING_MOTIF): New macro.
	(LD_SWITCH_SYSTEM_TEMACS): Put /usr/dt/lib in the link library
	path only if we're not building with Motif.

1998-08-28  Kenichi Handa  <handa@etl.go.jp>

	* insdel.c (adjust_after_replace): Fix the code to record undo
	information for the case that `before combining' happens.  Remove
	text properties which are added to the new text by
	offset_intervals.

	* coding.c (code_convert_region1): Remove all text properties of
	the region.

1998-08-28  Kenichi Handa  <handa@etl.go.jp>

	* charset.h (CHAR_BYTES): New macro.

	* charset.c (Fchar_bytes): Now always return 1.
	(char_bytes): New function.

	* editfns.c (Fposition_bytes): If the arg POSITION is out of
	range, return nil.
	(Fbyte_to_position): If the arg BYTEPOS is out of range, return
	nil.

	* data.c (Faset): Use macro CHAR_BYTES instead of Fchar_bytes.
	* fns.c (concat): Likewise.
	* insdel.c (count_size_as_multibyte): Likewise.
	* xdisp.c (message_dolog): Likewise.

1998-08-27  Kenichi Handa  <handa@etl.go.jp>

	* coding.c (detect_coding_iso2022): Handle ESC N and ESC O
	correctly.  They are for SS2 and SS3 respectively.
	(ccl_coding_driver): Fix previous change.

1998-08-26  Paul Eggert  <eggert@twinsun.com>

	* xterm.c (fixup_locale): New function.  For now, it resets
	LC_TIME to "C" (reverting the 1998-08-07 change), and also
	resets LC_MESSAGES to "C".
	(x_term_init): Use it to fix up the locale after setlocale (LC_ALL, "").

1998-08-26  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>

	* xterm.c (x_calc_absolute_position): Cast argument to XFree, in
	case it was prototyped the old way.

1998-08-25  Kenichi Handa  <handa@etl.go.jp>

	* xterm.c (x_list_fonts): Work-around for the case XGetAtomName
	returns a null string.  This happens when dxpc 3.7 is being used.

1998-08-24  Andreas Schwab  <schwab@delysid.gnu.org>

	* keyboard.c (input-method-previous-message): Doc fix.

	* coding.c (file-coding-system-alist)
	(select-safe-coding-system-function): Doc fix.

1998-08-23  Kenichi HANDA  <handa@etl.go.jp>

	* coding.c (detect_coding_iso2022): Don't check the byte length of
	succeeding codes (0xa0..0xFF) if the codes follows single shift
	code (SS2 or SS3).

1998-08-21  Ken'ichi Handa  <handa@delysid.gnu.org>

	* coding.c (detect_coding_system): If detect_eol_type returns
	CODING_EOL_INCONSISTENT, set eol_type to CODING_EOL_UNDECIDED
	correctly.

See ChangeLog.7 for earlier changes.

  Copyright (C) 1999, 2001-2012  Free Software Foundation, Inc.

  This file is part of GNU Emacs.

  GNU Emacs is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  GNU Emacs is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with GNU Emacs.  If not, see <http://www.gnu.org/licenses/>.
